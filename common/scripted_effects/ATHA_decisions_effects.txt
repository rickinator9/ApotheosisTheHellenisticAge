form_k_lakedaimon_decision_effects = {
	# Create kingdom title
	create_title_and_vassal_change = {
		type = created
		save_scope_as = change
		add_claim_on_loss = no
	}
	title:k_lakedaimon = {
		change_title_holder = {
			holder = root
			change = scope:change
		}
	}
	resolve_title_and_vassal_change = scope:change

	# De jure shifts
	title:d_lakedaimon = { set_de_jure_liege_title = title:k_lakedaimon }
	title:d_messenia = { set_de_jure_liege_title = title:k_lakedaimon }
	title:c_thyreatis = { set_de_jure_liege_title = title:d_lakedaimon }

	hidden_effect = {
		title:k_lakedaimon = { set_de_jure_liege_title = title:e_hellas }
		set_primary_title_to = title:k_lakedaimon
	}

	add_prestige = major_prestige_gain
}

form_k_athenai_decision_effects = {
	# Create kingdom title
	create_title_and_vassal_change = {
		type = created
		save_scope_as = change
		add_claim_on_loss = no
	}
	title:k_athenai = {
		change_title_holder = {
			holder = root
			change = scope:change
		}
	}
	resolve_title_and_vassal_change = scope:change

	hidden_effect = {
		title:k_athenai = { set_de_jure_liege_title = title:e_hellas }
	}

	add_prestige = medium_prestige_gain
}

form_e_athenai_decision_effects = {
	# Create empire title
	create_title_and_vassal_change = {
		type = created
		save_scope_as = change
		add_claim_on_loss = no
	}
	title:e_athenai = {
		change_title_holder = {
			holder = root
			change = scope:change
		}
	}
	resolve_title_and_vassal_change = scope:change

	hidden_effect = {
		title:d_attike = { set_de_jure_liege_title = title:k_athenai }
		title:k_athenai = { set_de_jure_liege_title = title:e_athenai }
	}

	add_prestige = massive_prestige_gain

	if = {
		limit = {
			culture:athenian = {
				NOT = { has_innovation = innovation_hellenistic_military_settlers }
			}
		}
		culture:athenian = { add_innovation = innovation_hellenistic_military_settlers }
	}
	if = {
		limit = {
			culture:athenian = {
				NOT = { has_innovation = innovation_hellenistic_postal_system }
			}
		}
		culture:athenian = { add_innovation = innovation_hellenistic_postal_system }
	}
	if = {
		limit = {
			culture:athenian = {
				NOT = { has_innovation = innovation_hellenistic_land_survey }
			}
		}
		culture:athenian = { add_innovation = innovation_hellenistic_land_survey }
	}
}

form_k_insular_phoros_decision_effects = {
	# Create kingdom title
	create_title_and_vassal_change = {
		type = created
		save_scope_as = change
		add_claim_on_loss = no
	}
	title:k_insular_phoros = {
		change_title_holder = {
			holder = root
			change = scope:change
		}
	}
	resolve_title_and_vassal_change = scope:change

	title:c_athenai = {
		add_county_modifier = {
			modifier = athens_phoros_modifier
			years = 50
		}
	}

	# De jure shifts
	hidden_effect = {
		title:d_euboia = { set_de_jure_liege_title = title:k_insular_phoros }
		title:d_kyklades = { set_de_jure_liege_title = title:k_insular_phoros }
		title:d_magnesia = { set_de_jure_liege_title = title:k_insular_phoros }
	}
}
form_k_ionian_phoros_decision_effects = {
	# Create kingdom title
	create_title_and_vassal_change = {
		type = created
		save_scope_as = change
		add_claim_on_loss = no
	}
	title:k_ionian_phoros = {
		change_title_holder = {
			holder = root
			change = scope:change
		}
	}
	resolve_title_and_vassal_change = scope:change

	title:c_athenai = {
		add_county_modifier = {
			modifier = athens_phoros_modifier
			years = 50
		}
	}

	# De jure shifts
	hidden_effect = {
		title:d_doris = { set_de_jure_liege_title = title:k_ionian_phoros }
		title:d_ionia = { set_de_jure_liege_title = title:k_ionian_phoros }
		title:d_aiolis = { set_de_jure_liege_title = title:k_ionian_phoros }
	}
}
form_k_thracian_phoros_decision_effects = {
	# Create kingdom title
	create_title_and_vassal_change = {
		type = created
		save_scope_as = change
		add_claim_on_loss = no
	}
	title:k_thracian_phoros = {
		change_title_holder = {
			holder = root
			change = scope:change
		}
	}
	resolve_title_and_vassal_change = scope:change

	title:c_athenai = {
		add_county_modifier = {
			modifier = athens_phoros_modifier
			years = 50
		}
	}

	# De jure shifts
	hidden_effect = {
		title:d_briantike = { set_de_jure_liege_title = title:k_thracian_phoros }
		title:d_parastrymonia = { set_de_jure_liege_title = title:k_thracian_phoros }
		title:d_chalkidike = { set_de_jure_liege_title = title:k_thracian_phoros }
		title:d_amphaxitis = { set_de_jure_liege_title = title:k_thracian_phoros }
	}
}
form_k_hellespontine_phoros_decision_effects = {
	# Create kingdom title
	create_title_and_vassal_change = {
		type = created
		save_scope_as = change
		add_claim_on_loss = no
	}
	title:k_hellespontine_phoros = {
		change_title_holder = {
			holder = root
			change = scope:change
		}
	}
	resolve_title_and_vassal_change = scope:change

	title:c_athenai = {
		add_county_modifier = {
			modifier = athens_phoros_modifier
			years = 50
		}
	}

	# De jure shifts
	hidden_effect = {
		title:d_troas = { set_de_jure_liege_title = title:k_hellespontine_phoros }
		title:d_mysia = { set_de_jure_liege_title = title:k_hellespontine_phoros }
		title:d_astike = { set_de_jure_liege_title = title:k_hellespontine_phoros }
		title:d_apsinthis = { set_de_jure_liege_title = title:k_hellespontine_phoros }
		title:d_zeleia = { set_de_jure_liege_title = title:k_hellespontine_phoros }
		title:d_askania = { set_de_jure_liege_title = title:k_hellespontine_phoros }
		title:d_bithynia = { set_de_jure_liege_title = title:k_hellespontine_phoros }
	}
}

form_k_peloponnesos_decision_effects = {
	# Create kingdom title
	create_title_and_vassal_change = {
		type = created
		save_scope_as = change
		add_claim_on_loss = no
	}
	title:k_peloponnesos = {
		change_title_holder = {
			holder = root
			change = scope:change
		}
		save_scope_as = peloponnese_title
	}
	resolve_title_and_vassal_change = scope:change

	hidden_effect = {
		# De jure shifts
		every_sub_realm_county = {
			limit = {
				#Has to be in the Peloponnese region
				title_province = { geographical_region = custom_peloponnese }

				#Only duchy capitals count towards shift
				this = duchy.title_capital_county

				#Has to be de jure part of k_hellas (so excluding counties in k_lakedaimon if formed)
				any_this_title_or_de_jure_above = { this = title:k_hellas }
			}
			duchy = { set_de_jure_liege_title = title:k_peloponnesos }
		}
		title:k_peloponnesos = { set_de_jure_liege_title = title:e_hellas }

		#Make your realm capital the de jure kingdom capital
		if = {
			limit = {
				NOT = { capital_county = title:k_peloponnesos.title_capital_county }
			}
			title:k_peloponnesos = { set_capital_county = root.capital_county }
		}
	}
}

form_k_peloponnesos_accept_effect = {
	# Tracking for prestige & event trigger
	remove_character_flag = peloponnesian_ruler
	add_character_flag = peloponnesian_ruler_accepted
	
	# Becomes a vassal	
	create_title_and_vassal_change = {
		type = swear_fealty
		save_scope_as = change
		add_claim_on_loss = no
	}
	change_liege = {
		liege = scope:k_peloponnesos_founder
		change = scope:change
	}
	resolve_title_and_vassal_change = scope:change

	# Set vassal contracts
	if = {
		limit = { has_city_state_government = yes }
		vassal_contract_set_obligation_level = { type = vassal_role level = 0 }
		hidden_effect = { set_autonomous_contracts_effect = yes }
	}
	else_if = { 
		limit = { has_coalition_government = yes }
		vassal_contract_set_obligation_level = { type = vassal_role level = 2 }
		hidden_effect = { set_autonomous_contracts_effect = yes }
	}

	# Some opinion gain between the two rulers
	add_opinion = {
		target = scope:k_peloponnesos_founder
		modifier = respect_opinion
		opinion = 30
	}
	reverse_add_opinion = {
		target = scope:k_peloponnesos_founder
		modifier = respect_opinion
		opinion = 30
	}

	# De jure shifts
	hidden_effect = {
		every_sub_realm_county = {
			limit = {
				#Has to be in the Peloponnese region
				title_province = { geographical_region = custom_peloponnese }

				#Only duchy capitals count towards shift
				this = duchy.title_capital_county

				#Has to be de jure part of k_hellas (so excluding counties in k_lakedaimon if formed)
				any_this_title_or_de_jure_above = { this = title:k_hellas }
			}
			duchy = { set_de_jure_liege_title = title:k_peloponnesos }
		}
	}
}

form_k_peloponnesos_reject_effect = {
	# Tracking for prestige & event trigger
	remove_character_flag = peloponnesian_ruler
	add_character_flag = peloponnesian_ruler_rejected

	# Some opinion loss between the two rulers
	add_opinion = {
		target = scope:k_peloponnesos_founder
		modifier = suspicion_opinion
		opinion = -20
	}
	reverse_add_opinion = {
		target = scope:k_peloponnesos_founder
		modifier = refusal_opinion
		opinion = -20
	}
}

form_k_peloponnesos_claimant_effect = {
	# Tracking for prestige & event trigger
	remove_character_flag = peloponnesian_ruler
	add_character_flag = peloponnesian_ruler_claimant

	# Ruler gets a claim on the Peloponnese title
	add_unpressed_claim = title:k_peloponnesos

	# And a healthy amount of prestige
	add_prestige = medium_prestige_gain

	# Big opinion loss between the two rulers
	add_opinion = {
		target = scope:k_peloponnesos_founder
		modifier = weak_opinion
		opinion = -40
	}
	reverse_add_opinion = {
		target = scope:k_peloponnesos_founder
		modifier = insult_opinion
		opinion = -40
	}

	# Nudge them towards rivalry
	if = {
		limit = {
			NOR = {
				has_relation_rival = scope:k_peloponnesos_founder
				has_relation_potential_rival = scope:k_peloponnesos_founder
			}
			scope:k_peloponnesos_founder = { is_alive = yes }
		}
		set_relation_potential_rival = scope:k_peloponnesos_founder
	}
}

unite_k_peloponnesos_decision_effects = {
	# Add some prestige
	add_prestige = major_prestige_gain

	# Let's make a little list of Peloponnesian kingdoms
	title:k_lakedaimon = { add_to_list = peloponnese_kingdoms }
	title:k_peloponnesos = { add_to_list = peloponnese_kingdoms }

	hidden_effect = {
		every_in_list = {
			list = peloponnese_kingdoms
			limit = {
				NOT = { this = scope:k_peloponnesos_uniter.primary_title }
			}

			#There can only be one
			every_in_de_jure_hierarchy = {
				limit = { tier = tier_duchy }
				set_de_jure_liege_title = scope:k_peloponnesos_uniter.primary_title
			}

			#Destroy the rest
			scope:k_peloponnesos_uniter = { destroy_title = prev }
		}
	}
	# Update the de jure liege of the Peloponnesian duchies
	hidden_effect = {
		title:d_lakedaimon = { set_de_jure_liege_title = scope:k_peloponnesos_uniter.primary_title }
		title:d_messenia = { set_de_jure_liege_title = scope:k_peloponnesos_uniter.primary_title }
		title:d_elis = { set_de_jure_liege_title = scope:k_peloponnesos_uniter.primary_title }
		title:d_arcadia = { set_de_jure_liege_title = scope:k_peloponnesos_uniter.primary_title }
		title:d_achaia = { set_de_jure_liege_title = scope:k_peloponnesos_uniter.primary_title }
		title:d_korinthia = { set_de_jure_liege_title = scope:k_peloponnesos_uniter.primary_title }
		title:d_argolis = { set_de_jure_liege_title = scope:k_peloponnesos_uniter.primary_title }
	}

	# You get a fancy nickname, literally "son of Pelops"
	set_nickname_effect = { NICKNAME = nick_pelopidas }
}

revive_spartan_faith_decision_effects = {
	#Convert yourself and close family over to Tyndaridism. Note that we're doing things slightly differently to the 'set_character_faith_with_conversion' scripted effect
	show_as_tooltip = { set_character_faith_with_conversion = faith:spartan_faith }
	hidden_effect = {
		set_character_faith = faith:spartan_faith
		every_close_family_member = { set_character_faith = faith:spartan_faith }
	}

	#Gain a nickname for your troubles.
	set_nickname_effect = { NICKNAME = nick_the_reformer }

	#Spartan counties may revert back to the old ways.
	custom_tooltip = revive_spartan_faith_decision_effects.county_conversions.tt
	hidden_effect = {
		primary_title = {
			every_in_de_facto_hierarchy = {
				limit = {
					tier = tier_county
					culture = culture:dorian_south # TODO: update to Spartan once culture is added
				}
				#Provinces in de jure d_lakedaimonia remember the old ways best, and have a high chance to flip.
				if = {
					limit = { 
						de_jure_liege = { this = title:d_lakedaimon } 
					}
					random = {
						chance = 70
						set_county_faith = faith:spartan_faith
					}
				}
				#Slightly up the chances for provinces directly controlled by the reformer.
				else_if = {
					limit = { holder = root }
					random = {
						chance = 50
						set_county_faith = faith:spartan_faith
					}
				}
			}
		}
	}
	custom_tooltip = revive_spartan_faith_decision_effects.county_modifiers.tt
	#Make flipping counties deliriously happy about the whole affair.
	primary_title = {
		every_in_de_facto_hierarchy = {
			limit = {
				tier = tier_county
				faith = faith:spartan_faith
			}
			custom = revive_spartan_faith_decision.every_converted_province
			add_county_modifier = {
				modifier = spartan_appreciation_modifier
				years = 25
			}
		}
	}
	#Finally, give spartan_faith a hefty fervour boost, just so that they don't immediately convert back.
	hidden_effect = {
		faith:spartan_faith = { change_fervor = 100 }
	}
}

form_k_bithynia_decision_effects = {
	# Create kingdom title.
	create_title_and_vassal_change = {
		type = created
		save_scope_as = change
		add_claim_on_loss = no
	}
	title:k_bithynia = {
		change_title_holder = {
			holder = root
			change = scope:change
		}
	}
	resolve_title_and_vassal_change = scope:change

	# Government changes.
	if = {
		limit = { has_government = clan_government }
		change_government_form = { GOVERNMENT = feudal_government }
	}
	every_vassal = {
		limit = { has_government = tribal_government }
		custom = every_tribal_vassal
		change_government_form = { GOVERNMENT = clan_government }
		hidden_effect = {
			#Nuke tribal authorities.
			if = {
				limit = { has_realm_law = tribal_authority_0 }
				remove_realm_law = tribal_authority_0
			}
			if = {
				limit = { has_realm_law = tribal_authority_1 }
				remove_realm_law = tribal_authority_1
			}
			if = {
				limit = { has_realm_law = tribal_authority_2 }
				remove_realm_law = tribal_authority_2
			}
			if = {
				limit = { has_realm_law = tribal_authority_3 }
				remove_realm_law = tribal_authority_3
			}
			if = {
				limit = {
					NOT = { has_realm_law = crown_authority_0 }
				}
				add_realm_law_skip_effects = crown_authority_0
			}
		}
	}

	# De jure shifts.
	title:d_bithynia = { set_de_jure_liege_title = title:k_bithynia }
	title:d_mariandynia = { set_de_jure_liege_title = title:k_bithynia }
	title:d_askania = { set_de_jure_liege_title = title:k_bithynia }
	title:d_sangarios = { set_de_jure_liege_title = title:k_bithynia }

	hidden_effect = {
		title:k_bithynia = { set_de_jure_liege_title = title:e_asia }
	}

	# Innovations
	if = {
		limit = {
			culture:bithynian = {
				NOT = {
					has_innovation = innovation_classical_monetary_standards
				}
			}
		}
		culture:bithynian = {
			add_innovation = innovation_classical_monetary_standards
		}
	}
	if = {
		limit = {
			culture:bithynian = {
				NOT = {
					has_innovation = innovation_classical_bureaucracy
				}
			}
		}
		culture:bithynian = {
			add_innovation = innovation_classical_bureaucracy
		}
	}
}

found_bithynian_capital_scripted_effect = {
	scope:new_bithynian_capital = {
		#Boost local development pretty heavily, tiering according to how much development the capital already has.
		if = {
			limit = { development_level >= 20 }
			change_development_level = 4
		}
		else_if = {
			limit = { development_level < 20 }
			change_development_level = 8
		}
		#If control is less than full, boost it to full.
		if = {
			limit = { county_control < full_county_control }
			change_county_control = 100
		}
		#Add county modifier giving solid benefits for a decent chunk of time.
		add_county_modifier = {
			modifier = bithynian_capital_modifier
			years = 20
		}
		#If this county doesn't have Bithynian culture, make it so
		if = {
			limit = { 
				NOT = { culture = culture:bithynian }
			}
			set_county_culture = culture:bithynian
		}
		#If this county isn't the de jure capital of k_bithynia, make it so.
		if = {
			limit = {
				NOT = { this = title:k_bithynia.title_capital_county }
			}
			title:k_bithynia = { set_capital_county = scope:new_bithynian_capital }
		}
		#If this county isn't the realm capital, make it so.
		if = {
			limit = {
				NOT = { this = holder.capital_county }
			}
			holder = { set_realm_capital = scope:new_bithynian_capital }
		}

		if = {
			limit = {
				any_sub_realm_barony = { 
					is_capital_barony = yes 
					de_jure_liege = { title = new_bithynian_capital }
				}
			}
			add_county_modifier = {
				modifier = bithynian_capital_modifier
				years = 20
			}
		}

		if = {
			limit = { holder = character:bithynian00105 }
			# Rename the capital to Nikomedeia
			hidden_effect = {
				set_title_name = city_nikomedeia
			}
			custom_tooltip = found_bithynian_capital_scripted_effect.tt
		}
		else_if = {
			limit = { holder = character:bithynian00109 }
			# Rename the capital to Prousa
			hidden_effect = {
				set_title_name = city_prousa
			}
			custom_tooltip = found_bithynian_capital_scripted_effect.tt
		}
		else_if = {
			limit = { holder = character:bithynian00110 }
			# Rename the capital to Ziaela
			hidden_effect = {
				set_title_name = city_ziaela
			}
			custom_tooltip = found_bithynian_capital_scripted_effect.tt
		}
	}
}

found_bithynian_capital_barony_scripted_effect = {
	scope:new_bithynian_capital_barony = {
		if = {
			limit = { holder = character:bithynian00105 }
			# Rename the capital to Nikomedeia
			hidden_effect = {
				set_title_name = city_nikomedeia
			}
		}
		else_if = {
			limit = { holder = character:bithynian00109 }
			# Rename the capital to Prousa
			hidden_effect = {
				set_title_name = city_prousa
			}
		}
		else_if = {
			limit = { holder = character:bithynian00110 }
			# Rename the capital to Ziaela
			hidden_effect = {
				set_title_name = city_ziaela
			}
		}
	}
}

form_k_ionia_decision_effects = {
	# Create kingdom title if you don't already have it
	if = {
		limit = { 
			NOT = { has_title = title:k_ionia }
		}
		create_title_and_vassal_change = {
			type = created
			save_scope_as = change
			add_claim_on_loss = no
		}
		title:k_ionia = {
			change_title_holder = {
				holder = root
				change = scope:change
			}
		}
		resolve_title_and_vassal_change = scope:change
	}

	# De jure shifts
	hidden_effect = {
		title:d_ionia = { set_de_jure_liege_title = title:k_ionia }
		title:d_aiolis = { set_de_jure_liege_title = title:k_ionia }
		title:d_doris = { set_de_jure_liege_title = title:k_ionia }
		title:c_adramyttion = { set_de_jure_liege_title = title:d_aiolis }
		title:c_atarneus = { set_de_jure_liege_title = title:d_aiolis }
	}

	#Bring Ionia over to e_hellas
	hidden_effect = {
		title:k_ionia = { set_de_jure_liege_title = title:e_hellas }
	}

	#Make your realm capital the de jure kingdom capital
	if = {
		limit = {
			NOT = { capital_county = title:k_ionia.title_capital_county }
		}
		title:k_ionia = { set_capital_county = root.capital_county }
	}

	#Rename title based on culture
	if = {
		limit = { has_culture = culture:ionian }
		# Rename the title to Ionie
		hidden_effect = {
			title:k_ionia = { set_title_name = cn_ionia_ionic }
		}
	}
	else_if = {
		limit = { has_culture = culture:aeolian }
		# Rename the title to Aiolis
		hidden_effect = {
			title:k_ionia = { set_title_name = d_aiolis }
		}
	}
	else_if = {
		limit = { has_culture = culture:dorian }
		# Rename the title to Doris
		hidden_effect = {
			title:k_ionia = { set_title_name = d_doris }
		}
	}

	#The following only apply if you're a duke taking the decision
	if = {
		limit = { 
			NOR = {
				has_primary_title = title:k_troas
			}
		}

		#Transfer over innovations from other local Greek cultures
		culture = {
			if = {
				limit = { 
					NOT = { this = culture:ionian }
				}
				get_all_innovations_from = culture:ionian
			}
			if = {
				limit = { 
					NOT = { this = culture:aeolian }
				}
				get_all_innovations_from = culture:aeolian
			}
			if = {
				limit = { 
					NOT = { this = culture:dorian }
				}
				get_all_innovations_from = culture:dorian
			}
		}
		#And gain some prestige for your troubles
		add_prestige = major_prestige_gain
	}
}

form_k_troas_decision_effects = {
	# Create kingdom title
	create_title_and_vassal_change = {
		type = created
		save_scope_as = change
		add_claim_on_loss = no
	}
	title:k_troas = {
		change_title_holder = {
			holder = root
			change = scope:change
		}
	}
	resolve_title_and_vassal_change = scope:change

	# De jure shifts
	hidden_effect = {
		title:d_troas = { set_de_jure_liege_title = title:k_troas }
		title:d_mysia = { set_de_jure_liege_title = title:k_troas }
		title:d_askania = { set_de_jure_liege_title = title:k_troas }
		title:c_zeleia = { set_de_jure_liege_title = title:d_mysia }
		title:c_astakos = { set_de_jure_liege_title = title:d_askania }
		title:c_chalkedon = { set_de_jure_liege_title = title:d_askania }
	}

	#Bring Troas over to e_hellas
	hidden_effect = {
		title:k_troas = { set_de_jure_liege_title = title:e_hellas }
	}

	#Make your realm capital the de jure kingdom capital
	if = {
		limit = {
			NOT = { capital_county = title:k_troas.title_capital_county }
		}
		title:k_troas = { set_capital_county = root.capital_county }
	}

	#The following only apply if you're a duke taking the decision
	if = {
		limit = { 
			NOR = {
				has_primary_title = title:k_ionia
			}
		}

		#Transfer over innovations from other local Greek cultures
		culture = {
			if = {
				limit = { 
					NOT = { this = culture:ionian }
				}
				get_all_innovations_from = culture:ionian
			}
			if = {
				limit = { 
					NOT = { this = culture:aeolian }
				}
				get_all_innovations_from = culture:aeolian
			}
			if = {
				limit = { 
					NOT = { this = culture:dorian }
				}
				get_all_innovations_from = culture:dorian
			}
		}
		#And gain some prestige for your troubles
		add_prestige = major_prestige_gain
	}
}