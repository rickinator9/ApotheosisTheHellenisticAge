### Vassal contract switching triggers

can_create_dependent_vassals = {
	NOR = {
		has_government = federal_alliance_government
		has_government = amphictyony_government
		has_government = tribal_government
	}	
}

can_create_bureaucratic_vassals = {
	NOR = {
		has_government = federal_alliance_government
		has_government = federal_sympolity_government
		has_government = amphictyony_government
		has_government = tribal_government
		has_government = clan_government
	}	
}

can_enforce_ritual_coronations = {
	NOR = {
		government_has_flag = is_federal_government
		has_government = city_state_democratic_government
		has_government = city_state_oligarchic_government
	}	
}

can_enforce_obligations = {
	NOR = {
		has_government = federal_alliance_government
		has_government = amphictyony_government
	}	
}

can_grant_gift_estates = {
	NOR = {
		government_has_flag = is_coalition_government
		has_government = city_state_democratic_government
		has_government = city_state_oligarchic_government
	}	
}

### Game-start vassal contract triggers

should_start_with_dependent_role = {
	liege = { 
		OR = {
			has_government = hegemonic_league_government
			has_government = feudal_government
		}
	}
}

should_start_with_colony_rights = {
	OR = {
		has_government = bureaucracy_military_government
		has_government = feudal_government
	}
	any_realm_province = {
		has_holding_type = colony_holding
	}
}

### Conditions for modifying vassal contracts

vassal_contract_compatibility_trigger = {
	# Forced Coinage Rights
	trigger_if = {
		limit = {
			AND = {
				exists = local_var:vassal_role
				exists = local_var:coinage_rights
				local_var:coinage_rights != scope:obligation_check.vassal_contract_obligation_level:coinage_rights
			}
		}
		custom_description = {
			text = "vassal_contract_cannot_modify_coinage_rights_city_state"
			local_var:vassal_role != 0	
		}
		custom_description = {
			text = "vassal_contract_cannot_modify_coinage_rights_coalition"
			local_var:vassal_role != 2	
		}
	}
	# Forced Religious Rights
	trigger_if = {
		limit = {
			AND = {
				exists = local_var:vassal_role
				exists = local_var:religious_rights
				local_var:religious_rights != scope:obligation_check.vassal_contract_obligation_level:religious_rights
			}
		}
		custom_description = {
			text = "vassal_contract_cannot_modify_religious_rights_city_state"
			local_var:vassal_role != 0	
		}
		custom_description = {
			text = "vassal_contract_cannot_modify_religious_rights_coalition"
			local_var:vassal_role != 2	
		}
	}
	# Forced Title Revocation Rights
	trigger_if = {
		limit = {
			AND = {
				exists = local_var:vassal_role
				exists = local_var:title_revocation_rights
				local_var:title_revocation_rights != scope:obligation_check.vassal_contract_obligation_level:title_revocation_rights
			}
		}
		custom_description = {
			text = "vassal_contract_cannot_modify_title_revocation_rights_city_state"
			local_var:vassal_role != 0	
		}
		custom_description = {
			text = "vassal_contract_cannot_modify_title_revocation_rights_coalition"
			local_var:vassal_role != 2	
		}
	}
	# Forced Garrison Rights
	trigger_if = {
		limit = {
			AND = {
				exists = local_var:vassal_role
				exists = local_var:garrison_rights
				local_var:garrison_rights != scope:obligation_check.vassal_contract_obligation_level:garrison_rights
			}
		}
		custom_description = {
			text = "vassal_contract_cannot_modify_garrison_rights_city_state"
			local_var:vassal_role != 0	
		}
		custom_description = {
			text = "vassal_contract_cannot_modify_garrison_rights_coalition"
			local_var:vassal_role != 2	
		}
	}
	# Modifying Ritual Coronations, Fortification Rights, Garrison Rights as Bureaucracy
	trigger_if = {
		limit = {
			AND = {
				exists = local_var:vassal_role
				local_var:vassal_role >= 4
			}
		}
		trigger_if = {
			limit = { exists = local_var:ritual_coronations_rights }
			custom_description = {
				text = "vassal_contract_cannot_modify_ritual_coronations_rights_bureaucracy"
				local_var:ritual_coronations_rights = scope:obligation_check.vassal_contract_obligation_level:ritual_coronations_rights					
			}
		}
		trigger_if = {
			limit = { exists = local_var:atha_fortification_rights }
			custom_description = {
				text = "vassal_contract_cannot_modify_fortification_rights_bureaucracy"
				local_var:atha_fortification_rights = scope:obligation_check.vassal_contract_obligation_level:atha_fortification_rights					
			}
		}
		trigger_if = {
			limit = { exists = local_var:garrison_rights }
			custom_description = {
				text = "vassal_contract_cannot_modify_garrison_rights_bureaucracy"
				local_var:garrison_rights = scope:obligation_check.vassal_contract_obligation_level:garrison_rights					
			}
		}
	}
	# Modifying Colony Rights
	trigger_if = {
		limit = {
			AND = {
				exists = local_var:vassal_role
				exists = local_var:colony_rights
				local_var:colony_rights != scope:obligation_check.vassal_contract_obligation_level:colony_rights
			}
		}
		custom_description = {
			text = "vassal_contract_cannot_modify_colony_rights_bureaucracy_civil"
			local_var:vassal_role != 4	
		}
		custom_description = {
			text = "vassal_contract_cannot_modify_colony_rights_coalition"
			OR = {
				local_var:vassal_role <= 1
				local_var:vassal_role >= 4
			}	
		}
		custom_description = {
			text = "vassal_contract_cannot_modify_colony_rights_city_state"
			local_var:vassal_role >= 2
		}
	}
	# Modifying Imposed Franchise
	trigger_if = {
		limit = {
			AND = {
				exists = local_var:vassal_role
				exists = local_var:imposed_franchise
				local_var:imposed_franchise != scope:obligation_check.vassal_contract_obligation_level:imposed_franchise
			}
		}
		custom_description = {
			text = "vassal_contract_cannot_modify_imposed_franchise_bureaucracy"
			local_var:vassal_role <= 3	
		}
		custom_description = {
			text = "vassal_contract_cannot_modify_imposed_franchise_coalition"
			OR = {
				local_var:vassal_role <= 1
				local_var:vassal_role >= 4
			}	
		}
	}
	# Modifying Imposed Franchise as Autonomous City State
	trigger_if = {
		limit = {
			AND = {
				exists = local_var:vassal_role
				exists = local_var:imposed_franchise
				local_var:vassal_role = 0
			}
		}
		custom_description = {
			text = "vassal_contract_cannot_modify_imposed_franchise_city_state_autonomous"
			local_var:imposed_franchise <= 1
		}
	}
	# Modifying Enforced Centralisation
	trigger_if = {
		limit = {
			AND = {
				exists = local_var:vassal_role
				exists = local_var:enforced_centralisation
				local_var:enforced_centralisation != scope:obligation_check.vassal_contract_obligation_level:enforced_centralisation
			}
		}
		custom_description = {
			text = "vassal_contract_cannot_modify_enforced_centralisation_bureaucracy"
			local_var:vassal_role <= 3	
		}
		custom_description = {
			text = "vassal_contract_cannot_modify_enforced_centralisation_city_state"
			local_var:vassal_role >= 2
		}
	}
	# Modifying Enforced Federalism
	trigger_if = {
		limit = {
			AND = {
				exists = local_var:vassal_role
				exists = local_var:enforced_federalism
				limit = { local_var:enforced_federalism != scope:obligation_check.vassal_contract_obligation_level:enforced_federalism }
			}
		}
		custom_description = {
			text = "vassal_contract_cannot_modify_enforced_federalism_bureaucracy"
			local_var:vassal_role <= 3	
		}
		custom_description = {
			text = "vassal_contract_cannot_modify_enforced_federalism_city_state"
			local_var:vassal_role >= 2
		}
	}
	# Modifying Enforced Centralisation & Federalism as Autonomous Coallition
	trigger_if = {
		limit = {
			AND = {
				exists = local_var:vassal_role
				local_var:vassal_role = 2
			}
		}
		trigger_if = {
			limit = { exists = local_var:enforced_federalism }
			custom_description = {
				text = "vassal_contract_cannot_modify_enforced_federalism_coalition_autonomous"
				local_var:enforced_federalism <= 1
			}
		}
		trigger_if = {
			limit = { exists = local_var:enforced_centralisation }
			custom_description = {
				text = "vassal_contract_cannot_modify_enforced_centralisation_coalition_autonomous"
				local_var:enforced_centralisation <= 1
			}
		}
	}
}

### Used for building requirements 

can_build_tribal = {
	government_has_flag = is_tribal_government
}