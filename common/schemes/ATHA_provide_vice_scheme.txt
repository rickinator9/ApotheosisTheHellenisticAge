provide_vice = { #Written by Grathalas
	skill = intrigue
	cooldown = { years = provide_vice_cooldown_value }
	is_secret = yes
	base_secrecy = 20
	uses_agents = no
	power_per_skill_point = 10
	resistance_per_skill_point = 0
	minimum_progress_chance = 10
	maximum_secrecy = 95
	minimum_success = 5
	maximum_success = 95

	allow = {
		is_corrupt_trigger = yes
		is_adult = yes
		is_imprisoned = no
		scope:target = {
			is_adult = yes
			NOT = { has_trait = incorruptible }
			is_imprisoned = no
		}

		#5 year general target blocker
		custom_description = {
			text = provide_vice_scheme_blocked
			subject = scope:target

			NOT = {
				scope:target = {
					has_character_flag = block_provide_vice
				}
			}
		}
	}

	valid = {
		#They can't consent
		NOT = { scope:target = { has_trait = intellect_bad_3 } }
		NOT = { scope:target = { has_trait = incapable } }

		#You're too far away
		scope:target = {
			OR = {
				exists = location
				in_diplomatic_range = scope:owner
			}
		}
	}

	base_success_chance = {
		base = 0

		#Intrigue based
		compare_modifier = {
			target = scope:owner
			value = intrigue
			multiplier = 3
			step = 5
			desc = "SCHEME_INTRIGUE_MODIFIER"
		}

		#SCHEME OWNER#
		modifier = { # Home Advantage perk bonus against own Courtiers and Guests
			desc = PROVIDE_VICE_COURTIER_GUEST_PERK_BONUS
			scope:owner = { has_perk = home_advantage_perk } ###dependant on lifestyle tree
			scope:target = {
				OR = {
					is_courtier_of = scope:owner
					is_pool_guest_of = scope:owner
					is_foreign_court_guest_of = scope:owner
				}
			}
			add = home_advantage_perk_bonus
		}

		#TARGET#
		modifier = {
			scope:target = { has_trait = lifestyle_reveler }
			desc = "SCHEME_REVELER"
			add = 10
		}
		modifier = {
			scope:target = { has_trait = paranoid }
			desc = "SCHEME_TRAIT_PARANOID"
			add = -20
		}
		modifier = {
			scope:target = { has_trait = ambitious }
			desc = "SCHEME_TRAIT_AMBITIOUS"
			add = 5
		}
		modifier = {
			scope:target = { has_trait = trusting }
			desc = "SCHEME_TRAIT_TRUSTING"
			add = 10
		}
		modifier = {
			scope:target = { has_trait = greedy }
			desc = "SCHEME_TRAIT_GREEDY"
			add = 10
		}
		modifier = {
			scope:target = { has_trait = chaste }
			desc = "SCHEME_TRAIT_CHASTE"
			add = -10
		}
		modifier = {
			scope:target = { has_trait = content }
			desc = "SCHEME_TRAIT_CONTENT"
			add = -20
		}
		modifier = {
			scope:target = { has_trait = diligent }
			desc = "SCHEME_TRAIT_DILIGENT"
			add = -5
		}
		modifier = {
			scope:target = { has_trait = temperate }
			desc = "SCHEME_TRAIT_TEMPERATE"
			add = -10
		}

		#Opinion of owner
		opinion_modifier = {
			who = scope:target
			opinion_target = scope:owner
			min = -50
			max = 50
			multiplier = 1.5
			step = 5
		}

		#Attraction
		modifier = {
			add = 10
			scope:owner = {
				attraction >= 10
				attraction < 20
			}
			scope:target = { is_attracted_to_gender_of = scope:owner  }
			desc = SCHEME_ATTRACTION
		}
		modifier = {
			add = 20
			scope:owner = {
				attraction >= 20
				attraction < 30
			}
			scope:target = { is_attracted_to_gender_of = scope:owner  }
			desc = SCHEME_ATTRACTION
		}
		modifier = {
			add = 30
			scope:owner = { attraction >= 30 }
			scope:target = { is_attracted_to_gender_of = scope:owner  }
			desc = SCHEME_ATTRACTION
		}

		#Their honor
		ai_value_modifier = {
			who = scope:target
			ai_honor = -1
			max = 50
		}
	}

	on_ready = {
		scheme_owner = {
			#DISCOVERY ROLL
			save_scope_value_as = {
				name = discovery_chance
				value = {
					value = 100
					subtract = scope:scheme.scheme_secrecy
				}
			}
			random = {
				chance = scope:discovery_chance
				save_scope_value_as = {
					name = scheme_discovered
					value = yes
				}
			}

			#SUCCESS ROLL
			random = {
				chance = scope:scheme.scheme_success_chance

				save_scope_value_as = {
					name = scheme_successful
					value = yes
				}
			}

			#CONTINUE WITH OUTCOME ON_ACTION FOR AI TARGETS
			if = {
				limit = { scope:target = { is_ai = yes } }

				if = {
					limit = { exists = scope:scheme_successful }
					trigger_event = corruption.1001 #Success event
				}
				else = {
					trigger_event = corruption.1003 #Failure event
				}
			}
			#FOR PLAYER CHARACTER, SEND CHOICE EVENT
			else = {
				scope:target = {
					trigger_event = corruption.1005
				}
			}
		}
	}

	on_monthly = {
		save_scope_as = scheme
		scheme_owner = { save_scope_as = owner }
		scheme_target = { save_scope_as = target }
	}

	on_invalidated = {
		if = {
			limit = {
				scope:target = { is_alive = no }
			}
			scope:owner = {
				send_interface_toast = {
					title = provide_vice_scheme_invalidated_title
					left_icon = scope:target
					custom_description_no_bullet = {
						object = scope:target
						text = scheme_target_died
					}
				}
			}
		}
		if = {
			limit = {
				scope:target = { is_imprisoned = yes }
			}
			scope:target.imprisoner = {
				save_scope_as = other_imprisoner
			}
			scope:owner = {
				send_interface_toast = {
					title = provide_vice_scheme_invalidated_title
					left_icon = scope:target
					right_icon = scope:other_imprisoner
					custom_description_no_bullet = {
						subject = scope:other_imprisoner
						object = scope:target
						text = scheme_target_imprisoned_by_other
					}
				}
			}
		}
	}

	success_desc = "PROVIDE_VICE_SUCCESS_DESC"
}