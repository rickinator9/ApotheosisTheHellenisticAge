# The entry should be named in the same way that the elective succession law is named to define it's voter's logic.
# Root scope - Elector, the character voting in the election.
# scope:candidate scope - Candidate, Character considered for the title.
# scope:title scope - Title, The title the nomination is for.
# scope:holder scope - Ruler, The ruler currently holding the title.
# scope:holder_candidate scope - Favored Candidate, The title owner's candidate.
# The voter will vote for the top score candidate calculated from this script.

aristocratic_elective = {
	candidates = {
		add = {
            type = holder_close_or_extended_family
            limit = {
				is_child_of = scope:holder # Not just the primary heir, since it may just happen that the primary heir has the wrong culture.
                is_adult = yes
                culture = scope:holder.culture
            }
        }
        add = {
            type = holder_direct_vassals
            limit = {
                highest_held_title_tier >= tier_county
                is_adult = yes
                culture = scope:holder.culture
            }
        }
	}

	electors = {
        add = holder
        add = {
            type = holder_direct_vassals
            limit = {
                culture = scope:holder.culture
                is_adult = yes
            }
        }
    }

    elector_vote_strength = {
        #Base Game Scandinavian Elective seems like a good approx of what we're trying to achieve.
        #Using this as a basis for the below
        modifier = { 
			desc = tooltip_aristocratic_elective_size
			is_landed = yes
			domain_size >= 1
			any_held_title = {
				tier = tier_county
				development_level > 0
				target_is_de_jure_liege_or_above = scope:title
			}
			add = {
				every_held_title = {
					limit = {
						tier = tier_county
						development_level > 0
						target_is_de_jure_liege_or_above = scope:title
					}
					add = {
						value = 1
					}
				}
			}
		}

    }

    candidate_score = {
        base = 0

        # Modifiers for electors voting for themselves.
        elector_self_voting_pattern_elective_modifier = yes
        holder_voting_pattern_elective_modifier = yes

        elector_voting_pattern_circumstances_elective_modifier = yes
        elector_voting_pattern_prestige_piety_elective_modifier = yes
        elector_voting_pattern_traits_elective_modifier = yes
        elector_voting_pattern_opinion_elective_modifier = yes
        elector_voting_pattern_skills_elective_modifier = yes

        # Existing modifiers do not cover Aristocratic as a specific case. Instead of rewriting entire standard traits/opinion/skills modifiers ours will be added as a custom modifier
        ATHA_elector_voting_pattern_aristocratic_modifier = yes
    }
}