name_list_delmatian = {
	cadet_dynasty_names = {
		"dynn_Annaios"
		"dynn_Annios"
		"dynn_Aplios"
		"dynn_Barakios"
		"dynn_Baurea"
		"dynn_Dassios"
		"dynn_Daverzos"
		"dynn_Epidios"
		"dynn_Kaminaria"
		"dynn_Kandalios"
		"dynn_Karvios"
		"dynn_Laidietis"
		"dynn_Masio"
		"dynn_Misaukios"
		"dynn_Myrkidios"
		"dynn_Mytelios"
		"dynn_Panentios"
		"dynn_Pinnios"
		"dynn_Plaitorios"
		"dynn_Platorios"
		"dynn_Raitinios"
		"dynn_Sarios"
		"dynn_Stataria"
		"dynn_Tattia"
	}

	dynasty_names = {
		"dynn_Annaios"
		"dynn_Annios"
		"dynn_Aplios"
		"dynn_Barakios"
		"dynn_Baurea"
		"dynn_Dassios"
		"dynn_Daverzos"
		"dynn_Epidios"
		"dynn_Kaminaria"
		"dynn_Kandalios"
		"dynn_Karvios"
		"dynn_Laidietis"
		"dynn_Masio"
		"dynn_Misaukios"
		"dynn_Myrkidios"
		"dynn_Mytelios"
		"dynn_Panentios"
		"dynn_Pinnios"
		"dynn_Plaitorios"
		"dynn_Platorios"
		"dynn_Raitinios"
		"dynn_Sarios"
		"dynn_Stataria"
		"dynn_Tattia"
	}

	male_names = {
		16 = { #x16
			Varo 
		}
		14 = { #x14
			Dasios 
		}
		44 = { #x11
			Batos Germanos Messor Plator 
		}
		9 = { #x9
			Panes 
		}
		7 = { #x7
			Epikados 
		}
		10 = { #x5
			Dasas Pyramos 
		}
		28 = { #x4
			Annaios Anios Annianos Beusas Panto Pinnes Viator 
		}
		6 = { #x3
			Aplos Tyros 
		}
		18 = { #x2
			Dastos Ditos Epetinos Likkaios Likko Plares Temans Venetos Verzo 
		}
		46 = { #x1
			Anixos Aiplos Aplydos Apyros Avendios Bardos Dases Epidianos Gentios Glaukos 
			Glaukio Klevatos Iadestinos Iauletos Iettos Ionios Laidios Ledros Likos Loiskos Masauros Messos 
			Mounnios Myrkios Myrkouios Myrikos Neritos Paios Panias Paniko Pinnios 
			Pinsos Pladomenos Plaianos Platos Pravaios Skenobarbos Skenos Skyrmianos Sialos Slator Syttos 
			Tatos Teutmeitos Tritos Zanatos Zynos 
		}
	}
	female_names = {
		9 = {  #x3
			Dalmata Paio Sexto 
		}
		10 = { #x2
			Dasantilla Lavo Seio_Seio Skaiva Verzo 
		}
		28 = { #x1
			Anna_1 Boria Buo Buvo_Buo Diteio Epatino Gentilla Kataplia Iato Ieta Ieto Laimotina Likka 
			Lykke Madena Mammo Maserva Plato Prevo Sattara Sello Sytta Tatta Tito Trio Tyro Vendo Zaiio 
		}
	}

	dynasty_of_location_prefix = ""

	# chance of male children being named after their paternal or maternal grandfather, or their father. Sum must not exceed 100.
	pat_grf_name_chance = 75 # TEMP
	mat_grf_name_chance = 25 # TEMP
	father_name_chance = 0
	
	# chance of female children being named after their paternal or maternal grandmother, or their mother. Sum must not exceed 100.
	pat_grm_name_chance = 25 # TEMP
	mat_grm_name_chance = 25 # TEMP
	mother_name_chance = 0
}

name_list_gemian = {
	cadet_dynasty_names = { # TODO: Current list is placeholder to prevent crashing
		"dynn_Annaios"
		"dynn_Annios"
		"dynn_Aplios"
		"dynn_Barakios"
		"dynn_Baurea"
		"dynn_Dassios"
		"dynn_Daverzos"
		"dynn_Epidios"
		"dynn_Kaminaria"
		"dynn_Kandalios"
		"dynn_Karvios"
		"dynn_Laidietis"
		"dynn_Masio"
		"dynn_Misaukios"
		"dynn_Myrkidios"
		"dynn_Mytelios"
		"dynn_Panentios"
		"dynn_Pinnios"
		"dynn_Plaitorios"
		"dynn_Platorios"
		"dynn_Raitinios"
		"dynn_Sarios"
		"dynn_Stataria"
		"dynn_Tattia"
	}

	dynasty_names = { # TODO: Current list is placeholder to prevent crashing
		"dynn_Annaios"
		"dynn_Annios"
		"dynn_Aplios"
		"dynn_Barakios"
		"dynn_Baurea"
		"dynn_Dassios"
		"dynn_Daverzos"
		"dynn_Epidios"
		"dynn_Kaminaria"
		"dynn_Kandalios"
		"dynn_Karvios"
		"dynn_Laidietis"
		"dynn_Masio"
		"dynn_Misaukios"
		"dynn_Myrkidios"
		"dynn_Mytelios"
		"dynn_Panentios"
		"dynn_Pinnios"
		"dynn_Plaitorios"
		"dynn_Platorios"
		"dynn_Raitinios"
		"dynn_Sarios"
		"dynn_Stataria"
		"dynn_Tattia"
	}

	male_names = { # TODO: Current list is placeholder to prevent crashing
		Varo Dasios Batos Germanos Messor Plator Epikados Dasas Pyramos 
		Annaios Anios Annianos Beusas Panto Pinnes Viator Aplos Tyros 
		Dastos Ditos Epetinos Likkaios Likko Plares Temans Venetos Verzo 
		Anixos Aiplos Aplydos Apyros Avendios Bardos Dases Epidianos Gentios Glaukos 
		Glaukio Klevatos Iadestinos Iauletos Iettos Ionios Laidios Ledros Likos Loiskos Masauros Messos 
		Mounnios Myrkios Myrkouios Myrikos Neritos Paios Panias Paniko Pinnios 
		Pinsos Pladomenos Plaianos Platos Pravaios Skenobarbos Skenos Skyrmianos Sialos Slator Syttos 
		Tatos Teutmeitos Tritos Zanatos Zynos 
	}
	female_names = { # TODO: Current list is placeholder to prevent crashing
		Dalmata Paio Sexto Dasantilla Lavo Seio_Seio Skaiva Verzo
		Anna_1 Boria Buo Buvo_Buo Diteio Epatino Gentilla Kataplia Iato Ieta Ieto Laimotina Likka 
		Lykke Madena Mammo Maserva Plato Prevo Sattara Sello Sytta Tatta Tito Trio Tyro Vendo Zaiio 
	}

	dynasty_of_location_prefix = ""

	# chance of male children being named after their paternal or maternal grandfather, or their father. Sum must not exceed 100.
	pat_grf_name_chance = 75 # TEMP
	mat_grf_name_chance = 25 # TEMP
	father_name_chance = 0
	
	# chance of female children being named after their paternal or maternal grandmother, or their mother. Sum must not exceed 100.
	pat_grm_name_chance = 25 # TEMP
	mat_grm_name_chance = 25 # TEMP
	mother_name_chance = 0
}

name_list_noarian = {
	cadet_dynasty_names = { # TODO
		"dynn_Tatonia"

		# Additional names from the Delmatian list to flesh it out
		"dynn_Annaios"
		"dynn_Annios"
		"dynn_Aplios"
		"dynn_Barakios"
		"dynn_Baurea"
		"dynn_Dassios"
		"dynn_Daverzos"
		"dynn_Epidios"
		"dynn_Kaminaria"
		"dynn_Kandalios"
		"dynn_Karvios"
		"dynn_Laidietis"
		"dynn_Masio"
		"dynn_Misaukios"
		"dynn_Myrkidios"
		"dynn_Mytelios"
		"dynn_Panentios"
		"dynn_Pinnios"
		"dynn_Plaitorios"
		"dynn_Platorios"
		"dynn_Raitinios"
		"dynn_Sarios"
		"dynn_Stataria"
		"dynn_Tattia"
	}

	dynasty_names = { # TODO
		"dynn_Tatonia"

		# Additional names from the Delmatian list to flesh it out
		"dynn_Annaios"
		"dynn_Annios"
		"dynn_Aplios"
		"dynn_Barakios"
		"dynn_Baurea"
		"dynn_Dassios"
		"dynn_Daverzos"
		"dynn_Epidios"
		"dynn_Kaminaria"
		"dynn_Kandalios"
		"dynn_Karvios"
		"dynn_Laidietis"
		"dynn_Masio"
		"dynn_Misaukios"
		"dynn_Myrkidios"
		"dynn_Mytelios"
		"dynn_Panentios"
		"dynn_Pinnios"
		"dynn_Plaitorios"
		"dynn_Platorios"
		"dynn_Raitinios"
		"dynn_Sarios"
		"dynn_Stataria"
	}

	male_names = {
		Baosos Daitor Dasas Dasios Dindarios Karvos Laidos Likkaios Plator Tyros Venetos 

		# Additional names from the Delmatian list to flesh it out
		Varo Batos Germanos Messor Epikados Pyramos 
		Annaios Anios Annianos Beusas Panto Pinnes Viator Aplos 
		Dastos Ditos Epetinos Likko Plares Temans Verzo 
		Anixos Aiplos Aplydos Apyros Avendios Bardos Dases Epidianos Gentios Glaukos 
		Glaukio Klevatos Iadestinos Iauletos Iettos Ionios Laidios Ledros Likos Loiskos Masauros Messos 
		Mounnios Myrkios Myrkouios Myrikos Neritos Paios Panias Paniko Pinnios 
		Pinsos Pladomenos Plaianos Platos Pravaios Skenobarbos Skenos Skyrmianos Sialos Slator Syttos 
		Tatos Teutmeitos Tritos Zanatos Zynos 
	}
	female_names = {
		Sympa 
		
		# Additional names from the Delmatian list to flesh it out
		Dalmata Paio Sexto Dasantilla Lavo Seio_Seio Skaiva Verzo
		Anna_1 Boria Buo Buvo_Buo Diteio Epatino Gentilla Kataplia Iato Ieta Ieto Laimotina Likka 
		Lykke Madena Mammo Maserva Plato Prevo Sattara Sello Sytta Tatta Tito Trio Tyro Vendo Zaiio 
	}

	dynasty_of_location_prefix = ""

	# chance of male children being named after their paternal or maternal grandfather, or their father. Sum must not exceed 100.
	pat_grf_name_chance = 75 # TEMP
	mat_grf_name_chance = 25 # TEMP
	father_name_chance = 0
	
	# chance of female children being named after their paternal or maternal grandmother, or their mother. Sum must not exceed 100.
	pat_grm_name_chance = 25 # TEMP
	mat_grm_name_chance = 25 # TEMP
	mother_name_chance = 0
}

name_list_pirustian = {
	cadet_dynasty_names = { # TODO: Current list is placeholder to prevent crashing
		"dynn_Annaios"
		"dynn_Annios"
		"dynn_Aplios"
		"dynn_Barakios"
		"dynn_Baurea"
		"dynn_Dassios"
		"dynn_Daverzos"
		"dynn_Epidios"
		"dynn_Kaminaria"
		"dynn_Kandalios"
		"dynn_Karvios"
		"dynn_Laidietis"
		"dynn_Masio"
		"dynn_Misaukios"
		"dynn_Myrkidios"
		"dynn_Mytelios"
		"dynn_Panentios"
		"dynn_Pinnios"
		"dynn_Plaitorios"
		"dynn_Platorios"
		"dynn_Raitinios"
		"dynn_Sarios"
		"dynn_Stataria"
		"dynn_Tattia"
	}

	dynasty_names = { # TODO: Current list is placeholder to prevent crashing
		"dynn_Annaios"
		"dynn_Annios"
		"dynn_Aplios"
		"dynn_Barakios"
		"dynn_Baurea"
		"dynn_Dassios"
		"dynn_Daverzos"
		"dynn_Epidios"
		"dynn_Kaminaria"
		"dynn_Kandalios"
		"dynn_Karvios"
		"dynn_Laidietis"
		"dynn_Masio"
		"dynn_Misaukios"
		"dynn_Myrkidios"
		"dynn_Mytelios"
		"dynn_Panentios"
		"dynn_Pinnios"
		"dynn_Plaitorios"
		"dynn_Platorios"
		"dynn_Raitinios"
		"dynn_Sarios"
		"dynn_Stataria"
		"dynn_Tattia"
	}

	male_names = { # TODO: Current list is placeholder to prevent crashing
		Varo Dasios Batos Germanos Messor Plator Epikados Dasas Pyramos 
		Annaios Anios Annianos Beusas Panto Pinnes Viator Aplos Tyros 
		Dastos Ditos Epetinos Likkaios Likko Plares Temans Venetos Verzo 
		Anixos Aiplos Aplydos Apyros Avendios Bardos Dases Epidianos Gentios Glaukos 
		Glaukio Klevatos Iadestinos Iauletos Iettos Ionios Laidios Ledros Likos Loiskos Masauros Messos 
		Mounnios Myrkios Myrkouios Myrikos Neritos Paios Panias Paniko Pinnios 
		Pinsos Pladomenos Plaianos Platos Pravaios Skenobarbos Skenos Skyrmianos Sialos Slator Syttos 
		Tatos Teutmeitos Tritos Zanatos Zynos 
	}
	female_names = { # TODO: Current list is placeholder to prevent crashing
		Dalmata Paio Sexto Dasantilla Lavo Seio_Seio Skaiva Verzo
		Anna_1 Boria Buo Buvo_Buo Diteio Epatino Gentilla Kataplia Iato Ieta Ieto Laimotina Likka 
		Lykke Madena Mammo Maserva Plato Prevo Sattara Sello Sytta Tatta Tito Trio Tyro Vendo Zaiio 
	}

	dynasty_of_location_prefix = ""

	# chance of male children being named after their paternal or maternal grandfather, or their father. Sum must not exceed 100.
	pat_grf_name_chance = 75 # TEMP
	mat_grf_name_chance = 25 # TEMP
	father_name_chance = 0
	
	# chance of female children being named after their paternal or maternal grandmother, or their mother. Sum must not exceed 100.
	pat_grm_name_chance = 25 # TEMP
	mat_grm_name_chance = 25 # TEMP
	mother_name_chance = 0
}

name_list_savian = {
	cadet_dynasty_names = { # TODO: Current list is placeholder to prevent crashing
		"dynn_Annaios"
		"dynn_Annios"
		"dynn_Aplios"
		"dynn_Barakios"
		"dynn_Baurea"
		"dynn_Dassios"
		"dynn_Daverzos"
		"dynn_Epidios"
		"dynn_Kaminaria"
		"dynn_Kandalios"
		"dynn_Karvios"
		"dynn_Laidietis"
		"dynn_Masio"
		"dynn_Misaukios"
		"dynn_Myrkidios"
		"dynn_Mytelios"
		"dynn_Panentios"
		"dynn_Pinnios"
		"dynn_Plaitorios"
		"dynn_Platorios"
		"dynn_Raitinios"
		"dynn_Sarios"
		"dynn_Stataria"
		"dynn_Tattia"
	}

	dynasty_names = { # TODO: Current list is placeholder to prevent crashing
		"dynn_Annaios"
		"dynn_Annios"
		"dynn_Aplios"
		"dynn_Barakios"
		"dynn_Baurea"
		"dynn_Dassios"
		"dynn_Daverzos"
		"dynn_Epidios"
		"dynn_Kaminaria"
		"dynn_Kandalios"
		"dynn_Karvios"
		"dynn_Laidietis"
		"dynn_Masio"
		"dynn_Misaukios"
		"dynn_Myrkidios"
		"dynn_Mytelios"
		"dynn_Panentios"
		"dynn_Pinnios"
		"dynn_Plaitorios"
		"dynn_Platorios"
		"dynn_Raitinios"
		"dynn_Sarios"
		"dynn_Stataria"
		"dynn_Tattia"
	}

	male_names = { # TODO: Current list is placeholder to prevent crashing
		Varo Dasios Batos Germanos Messor Plator Epikados Dasas Pyramos 
		Annaios Anios Annianos Beusas Panto Pinnes Viator Aplos Tyros 
		Dastos Ditos Epetinos Likkaios Likko Plares Temans Venetos Verzo 
		Anixos Aiplos Aplydos Apyros Avendios Bardos Dases Epidianos Gentios Glaukos 
		Glaukio Klevatos Iadestinos Iauletos Iettos Ionios Laidios Ledros Likos Loiskos Masauros Messos 
		Mounnios Myrkios Myrkouios Myrikos Neritos Paios Panias Paniko Pinnios 
		Pinsos Pladomenos Plaianos Platos Pravaios Skenobarbos Skenos Skyrmianos Sialos Slator Syttos 
		Tatos Teutmeitos Tritos Zanatos Zynos 
	}
	female_names = { # TODO: Current list is placeholder to prevent crashing
		Dalmata Paio Sexto Dasantilla Lavo Seio_Seio Skaiva Verzo
		Anna_1 Boria Buo Buvo_Buo Diteio Epatino Gentilla Kataplia Iato Ieta Ieto Laimotina Likka 
		Lykke Madena Mammo Maserva Plato Prevo Sattara Sello Sytta Tatta Tito Trio Tyro Vendo Zaiio 
	}

	dynasty_of_location_prefix = ""

	# chance of male children being named after their paternal or maternal grandfather, or their father. Sum must not exceed 100.
	pat_grf_name_chance = 75 # TEMP
	mat_grf_name_chance = 25 # TEMP
	father_name_chance = 0
	
	# chance of female children being named after their paternal or maternal grandmother, or their mother. Sum must not exceed 100.
	pat_grm_name_chance = 25 # TEMP
	mat_grm_name_chance = 25 # TEMP
	mother_name_chance = 0
}