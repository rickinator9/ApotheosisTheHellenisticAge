k_athenai_prestige_value = { # duchies that are more difficult to obtain net higher rewards
	value = 0
	if = {
		limit = { has_title = title:d_kyklades }
		add = major_prestige_value # strategically important, requires taking on Egypt
	}
	if = {
		limit = { has_title = title:d_doris }
		add = major_prestige_value # large & wealthy region that requires taking on Egypt and Rhodes
	}
	if = {
		limit = { has_title = title:d_ionia }
		add = major_prestige_value # wealthy region that requires taking on the Seleucids
	}
	if = {
		limit = { has_title = title:d_aiolis }
		add = minor_prestige_value # smaller region, but still requires taking on the Seleucids to form the duchy
	}
	if = {
		limit = { has_title = title:d_troas }
		add = medium_prestige_value # large region that requires taking on the Seleucids
	}
	if = {
		limit = { has_title = title:d_euboia }
		add = 0 # can get relatively easily by warring OPMs
	}
	if = {
		limit = { has_title = title:d_apsinthis }
		add = 0 # can get relatively easily by warring OPMs
	}
	if = {
		limit = { has_title = title:d_briantike }
		add = 0 # can get relatively easily by warring OPMs
	}
	if = {
		limit = { has_title = title:d_parastrymonia }
		add = medium_prestige_value # requires taking on Macedonia
	}
	if = {
		limit = { has_title = title:d_chalkidike }
		add = medium_prestige_value # requires taking on Macedonia
	}
}

phoros_capital_candidate_score = {
	# Prioritise the realm capital
	if = {
		limit = { this = scope:phoros_founder.capital_county }
		add = 200
	}
	# Prioritise directly held counties
	if = {
		limit = { 
			holder = { this = scope:phoros_founder }
		}
		add = 100
	}
	# Prioritise the traditional centres
	if = {
		limit = { this = scope:centre_1 }
		add = 18
	}
	else_if = {
		limit = { this = scope:centre_2 }
		add = 14
	}
	else_if = {
		limit = { this = scope:centre_3 }
		add = 12
	}
	else_if = {
		limit = { this = scope:centre_4 }
		add = 10
	}

	# Factor in development
	add = development_level

	# Prioritise counties with lots of barony slots
	if = {
		limit = {
			any_county_province = {
				count >= 4
			}
  		}
		add = 8
	}
	else_if = {
		limit = {
			any_county_province = {
				count >= 3
			}
  		}
		add = 4
	}
	# Prioritise counties with filled barony slots
	if = {
		limit = {
			any_county_province = {
				count >= 4
				building_slots > 1
			}
  		}
		add = 4
	}
	else_if = {
		limit = {
			any_county_province = {
				count >= 3
				building_slots > 1
			}
  		}
		add = 2
	}
}

# Count the rulers who accepted the offer to join the League
k_peloponnesos_acceptance_value = {
	value = 0

	every_in_list = {
		list = peloponnesian_accepted_list
		if = {
			limit = { highest_held_title_tier = tier_duchy }
			add = 3
		}
		else = {
			add = 1
		}
	}
}
# Count the rulers who rejected the offer to join the League
k_peloponnesos_rejection_value = {
	value = 0

	every_in_list = {
		list = peloponnesian_rejected_list
		if = {
			limit = { highest_held_title_tier = tier_duchy }
			add = 3
		}
		else = {
			add = 1
		}
	}
}
# Come up with an overall 'score' to determine whether k_peloponnese_founder has succeeded
k_peloponnesos_outcome_value = {
	value = k_peloponnesos_acceptance_value
	subtract = k_peloponnesos_rejection_value
}

k_peloponnesos_acceptance_value_modifier = {
	value = 100
	#More likely if they're a Federal League
	if = {
		limit = { 
			scope:k_peloponnesos_founder = {
				government_has_flag = is_federal_government
			}
		}
		multiply = 2
	}	
	#Unlikely if you're Arrogant
	if = {
		limit = { has_trait = arrogant }
		multiply = 0.4
	}
	#Unlikely if you're Ambitious
	if = {
		limit = { has_trait = ambitious }
		multiply = 0.4
	}
	#Likely if you're a Craven
	if = {
		limit = { has_trait = craven }
		multiply = 1.2
	}
	#Likely if you're Content
	if = {
		limit = { has_trait = content }
		multiply = 1.2
	}

	#More likely if they have a hook on you
	if = {
		limit = { 
			scope:k_peloponnesos_founder = { has_hook = ROOT }
		}
		multiply = 2
	}
	#Much more likely if they have a strong hook on you
	if = {
		limit = { 
			scope:k_peloponnesos_founder = { has_strong_hook = ROOT }
		}
		multiply = 2
	}

	#More likely if you're just a count
	if = {
		limit = { highest_held_title_tier = tier_county }
		add = 300
	}

	#Account for differences in military strength
	add = {
		value = 1
		subtract = {
			value = ROOT.max_military_strength
			divide = { value = scope:k_peloponnesos_founder.max_military_strength min = 1 }
		}
		multiply = 100
		ceiling = yes
	}

	#Intimidated modifier
	if = {
		limit = {
			has_dread_level_towards = {
				target = scope:k_peloponnesos_founder
				level = 1
			}
		}
		add = intimidated_external_reason_value
	}
	#Cowed modifier
	else_if = {
		limit = {
			has_dread_level_towards = {
				target = scope:k_peloponnesos_founder
				level = 2
			}
		}
		add = cowed_external_reason_value
	}

	#Friend modifier
	if = {
		limit = { 
			has_relation_friend = scope:k_peloponnesos_founder
			NOT = { has_relation_best_friend = scope:k_peloponnesos_founder }
		}
		multiply = 1.1
	}
	#Best Friend modifier
	if = {
		limit = { has_relation_best_friend = scope:k_peloponnesos_founder }
		multiply = 1.2
	}
	#Rivalry modifier
	if = {
		limit = { 
			has_relation_rival = scope:k_peloponnesos_founder
			NOT = { has_relation_nemesis = scope:k_peloponnesos_founder }
		}
		multiply = 0.4
	}
	#Nemesis modifier
	if = {
		limit = { has_relation_nemesis = scope:k_peloponnesos_founder }
		multiply = 0
	}
	#We just fought against each other
	if = { 
		limit = {
			any_truce_holder = { this = scope:k_peloponnesos_founder }
		}
		multiply = 0.5
	}
	#I fought an independence war against you
	if = { 
		limit = {
			exists = var:independence_war_former_liege
			var:independence_war_former_liege = scope:k_peloponnesos_founder
			multiply = 0
		}
	}
	#Culture differences slightly reduce acceptance
	if = {
		limit = {
			NOT = { culture = scope:k_peloponnesos_founder.culture }
		}
		multiply = 0.9
	}
}

ionian_revolt_attacker_strength = {
	every_ruler = {
		limit = { is_attacker_in_war = scope:ionian_revolt_war }
		add = max_military_strength
	}
}

ionian_revolt_defender_strength = {
	every_ruler = {
		limit = { is_defender_in_war = scope:ionian_revolt_war }
		add = max_military_strength
	}
}

ionian_revolt_cooldown_value = 30