namespace = ATHA_vassal_contract

### TO-DO List
# Get the game to recognise government changes when contract change is initiated by vassal
# Somehow get game to recognise changes from autonomous to dependent and vice versa so we can tailor events to these (e.g. liege deciding on forced contract for newly dependent realm)
## Additionally we could tie in the populist/elitist traits to how the vassal (and their courtiers and vassals) regard the change, and perhaps use it for AI logic when deciding on what government to impose on a vassal


# Adjust government type, hooks etc. according to contract
ATHA_vassal_contract.1 = {
	type = empty
	hidden = yes

    immediate = {
		if = {
			limit = {
				vassal_contract_has_flag = has_autonomous_city_state_contract
				NOT = { government_has_flag = is_city_state_government }
			}
			change_government_form = { GOVERNMENT = city_state_democratic_government } # TO-DO: Add logic for determining what form the city-state government takes

			if = {
				limit = {
					vassal_contract_has_flag = has_imposed_franchise
				}
				vassal_contract_set_obligation_level = {
					type = imposed_franchise
					level = imposed_franchise_none
				}
			}
		}
		else_if = {
			limit = {
				vassal_contract_has_flag = has_dependent_city_state_contract
				NOT = { government_has_flag = is_city_state_government }
			}
			if = {
				limit = {
					liege.culture = { has_innovation = innovation_classical_constitution }
				}
				save_scope_as = dependent_city_state_vassal
				liege = {
					trigger_event = {
						id = ATHA_government.0004 # Liege decides on city-state government for their vassal
						days = { 5 7 }
					}
				}
			}
			else = {
				add_character_flag = vassal_can_create_city_state
				trigger_event = ATHA_government.0003 # Vassal decides what city-state government to adopt
			}
		}
		else_if = {
			limit = {
				vassal_contract_has_flag = has_autonomous_coalition_contract
				NOT = { government_has_flag = is_coalition_government }
			}
			change_government_form = { GOVERNMENT = federal_alliance_government }

			if = {
				limit = {
					vassal_contract_has_flag = has_enforced_centralisation
				}
				vassal_contract_set_obligation_level = {
					type = enforced_centralisation
					level = enforced_centralisation_none
				}
			}
			if = {
				limit = {
					vassal_contract_has_flag = has_enforced_federalism
				}
				vassal_contract_set_obligation_level = {
					type = enforced_federalism
					level = enforced_federalism_none
				}
			}
		}
		else_if = {
			limit = {
				vassal_contract_has_flag = has_dependent_coalition_contract
				NOT = { government_has_flag = is_coalition_government }
			}
			change_government_form = { GOVERNMENT = federal_alliance_government } # TO-DO: Add events for liege (or vassal) to decide what form the coalition takes
		}
		else_if = {
			limit = {
				vassal_contract_has_flag = has_civil_bureaucracy_contract
				NOT = { has_government = bureaucracy_civil_government }
			}
			change_government_form = { GOVERNMENT = bureaucracy_civil_government }
		}
		else_if = {
			limit = {
				vassal_contract_has_flag = has_military_bureaucracy_contract
				NOT = { has_government = bureaucracy_military_government }
			}
			change_government_form = { GOVERNMENT = bureaucracy_military_government }
		}
		else_if = {
			limit = {
				vassal_contract_has_flag = has_feudal_bureaucracy_contract
				NOT = { has_government = feudal_government }
			}
			change_government_form = { GOVERNMENT = feudal_government }
			vassal_contract_set_obligation_level = {
				type = hereditary_rights
				level = hereditary_rights_guaranteed
			}
		}
		if = {
			limit = {
				vassal_contract_has_flag = has_autonomous_contract
			}
			vassal_contract_set_obligation_level = {
				type = coinage_rights
				level = coinage_rights_granted
			}
			vassal_contract_set_obligation_level = {
				type = religious_rights
				level = religious_rights_protected
			}
			vassal_contract_set_obligation_level = {
				type = title_revocation_rights
				level = title_revocation_rights_protected
			}
			vassal_contract_set_obligation_level = {
				type = garrison_rights
				level = garrison_rights_none
			}
		}
		if = {
			limit = {
				vassal_contract_has_flag = has_imposed_democratic_franchise
				NOT = { has_government = city_state_democratic_government }
			}
			change_government_form = { GOVERNMENT = city_state_democratic_government }
		}
		else_if = {
			limit = {
				vassal_contract_has_flag = has_imposed_oligarchic_franchise
				NOT = { has_government = city_state_oligarchic_government }
			}
			change_government_form = { GOVERNMENT = city_state_oligarchic_government }
		}
		else_if = {
			limit = {
				vassal_contract_has_flag = has_imposed_aristocratic_franchise
				NOT = { has_government = city_state_aristocratic_government }
			}
			change_government_form = { GOVERNMENT = city_state_aristocratic_government }
		}
		else_if = {
			limit = {
				vassal_contract_has_flag = has_imposed_tyrannic_franchise
				NOT = { has_government = city_state_tyrannical_government }
			}
			change_government_form = { GOVERNMENT = city_state_tyrannical_government }
		}
		if = {
			limit = {
				vassal_contract_has_flag = has_enforced_federalism_federal
				NOT = { government_has_flag = is_federal_government }
			}
			if = {
				limit = {
					government_has_flag = is_alliance_government
				}
				change_government_form = { GOVERNMENT = federal_alliance_government }
			}
			else_if = {
				limit = {
					government_has_flag = is_sympolity_government
				}
				change_government_form = { GOVERNMENT = federal_sympolity_government }
			}
			else_if = {
				limit = {
					government_has_flag = is_league_government
				}
				change_government_form = { GOVERNMENT = federal_league_government }
			}
		}
		else_if = {
			limit = {
				vassal_contract_has_flag = has_enforced_federalism_hegemonic
				NOT = { government_has_flag = is_hegemonic_government }
			}
			if = {
				limit = {
					government_has_flag = is_alliance_government
				}
				change_government_form = { GOVERNMENT = hegemonic_alliance_government }
			}
			else_if = {
				limit = {
					government_has_flag = is_sympolity_government
				}
				change_government_form = { GOVERNMENT = hegemonic_sympolity_government }
			}
			else_if = {
				limit = {
					government_has_flag = is_league_government
				}
				change_government_form = { GOVERNMENT = hegemonic_league_government }
			}
		}
		if = {
			limit = {
				vassal_contract_has_flag = has_enforced_centralisation_low
			}
			add_realm_law = crown_authority_0
		}
		else_if = {
			limit = {
				vassal_contract_has_flag = has_enforced_centralisation_medium
			}
			add_realm_law = crown_authority_1
		}
		else_if = {
			limit = {
				vassal_contract_has_flag = has_enforced_centralisation_high
			}
			add_realm_law = crown_authority_2
		}
		if = {
			limit = {
				vassal_contract_has_flag = vassal_contract_gives_weak_hook
				liege = {
					NOT = {
						has_hook_of_type = { 
							type = house_head_hook
							target = root
						}
					}
				}
			}
			liege = {
				add_hook = {
					type = vassal_contract_weak_hook
					target = root
				}	
			}
		}
		else_if = {
			limit = {
				vassal_contract_has_flag = vassal_contract_gives_strong_hook
				liege = {
					NOT = {
						has_hook_of_type = { 
							type = loyalty_hook
							target = root
						}
					}
				}
			}
			liege = {
				add_hook = {
					type = vassal_contract_strong_hook
					target = root
				}
			}
		}
		else_if = {
			limit = {
				NOT = { vassal_contract_has_flag = vassal_contract_gives_weak_hook }
				liege = {
					has_hook_of_type = { 
						type = vassal_contract_weak_hook
						target = root
					}
				}	
			}
			liege = {
				remove_hook = {
					type = vassal_contract_weak_hook
					target = root
				}
			}
		}
		else_if = {
			limit = {
				NOT = { vassal_contract_has_flag = vassal_contract_gives_strong_hook }
				liege = {
					has_hook_of_type = { 
						type = vassal_contract_strong_hook
						target = root
					}	
				}
			}
			liege = {
				remove_hook = {
					type = vassal_contract_strong_hook
					target = root
				}
			}
		}
    }
}

# Save the contract settings on death.
ATHA_vassal_contract.0010 = {
	type = empty
	hidden = yes

	# Only trigger this for landed, vassal rulers that can have contracts.
	trigger = {
		is_landed = yes
		is_independent_ruler = no
	}

	immediate = {
		every_heir = {
			set_variable = {
				name = highest_tier_before_inheritance
				value = highest_held_title_tier
			}

			save_vassal_contract_settings = { CONTRACT_HOLDER = root }
		}
	}
}

# Apply the contract settings to people who inherited titles.
ATHA_vassal_contract.0011 = {
	type = empty
	hidden = yes

	trigger = {
		scope:title.tier > var:highest_tier_before_inheritance
		is_independent_ruler = no
	}

	immediate = {
		apply_vassal_contract_settings = yes
		clear_vassal_contract_settings = yes

		remove_variable = highest_tier_before_inheritance
	}
}

# Save the contract settings when gaining titles.
ATHA_vassal_contract.0012 = {
	type = empty
	hidden = yes

	trigger = {
		is_independent_ruler = no

		# The ruler should not have two titles of the same tier, which means that he already held a title.
		NOT = {
			any_held_title = {
				tier = root.primary_title.tier
				NOT = { this = scope:title }
			}
		}

		# Only trigger this when the circumstances for the transfer of the titles is correct.
		OR = {
			scope:transfer_type = flag:abdication
			scope:transfer_type = flag:election
			scope:transfer_type = flag:faction_demand
			scope:transfer_type = flag:usurped
		}
	}

	immediate = {
		save_vassal_contract_settings = { CONTRACT_HOLDER = scope:previous_holder }
		apply_vassal_contract_settings = yes
		clear_vassal_contract_settings = yes
	}
}