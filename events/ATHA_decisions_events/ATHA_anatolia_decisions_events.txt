namespace = anatolia_decisions

## form_k_bithynia_decision
# 0001 - I formed k_bithynia
# 0002 - Someone else formed k_bithynia

## form_k_ionia_decision
# 0003 - I formed k_ionia
# 0004 - Someone else formed k_ionia

##############################
# Form k_bithynia		 	 #
##############################

# I formed k_bithynia
anatolia_decisions.0001 = {
	type = character_event
	title = anatolia_decisions.0001.t
	desc = anatolia_decisions.0001.desc
	theme = realm
	left_portrait = {
		character = scope:k_bithynia_founder
		animation = personality_honorable
	}

	immediate = {
		play_music_cue = "mx_cue_epic_sacral_moment"
		form_k_bithynia_decision_effects = yes
		found_bithynian_capital_scripted_effect = yes
		found_bithynian_capital_barony_scripted_effect = yes
	}

	#TODO: Once we've expanded to include Thrace and the rest of Anatolia, we should make these options dynamic
	
	option = { # Macedonian influence (dynastic & scholarly)
		name = anatolia_decisions.0001.a

		# Government changes
		if = {
			limit = { has_government = clan_government }
			change_government_form = { GOVERNMENT = feudal_government }
		}

		# Traditions
		if = {
			limit = { 
				has_dlc_feature = hybridize_culture
				NOR = {
					culture = { has_cultural_tradition = tradition_staunch_traditionalists }
					culture = { has_cultural_tradition = tradition_culture_blending }
				}
			}
			culture = { add_culture_tradition = tradition_culture_blending }
		}

		# Innovations
		if = {
			limit = {
				culture = {
					NOT = { has_innovation = innovation_classical_monetary_standards }
				}
			}
			culture = { add_innovation = innovation_classical_monetary_standards }
		}
		if = {
			limit = {
				culture = {
					NOT = { has_innovation = innovation_classical_bureaucracy }
				}
			}
			culture = { add_innovation = innovation_classical_bureaucracy }
		}
		if = {
			limit = {
				culture = {
					NOT = { has_innovation = innovation_classical_public_honours }
				}
			}
			culture = { add_innovation = innovation_classical_public_honours }
		}

		# Court setup
		hidden_effect = { set_court_type = court_scholarly }
		custom_tooltip = set_court_type_scholarly_first
		set_court_language = language_greek

		ai_chance = {
			# The AI should prefer this option as it is the historical outcome
			base = 100
		}
	}
	option = { # Greek influence (dynastic and diplomatic)
		name = anatolia_decisions.0001.b
		
		# Government changes
		if = {
			limit = { has_government = clan_government }
			change_government_form = { GOVERNMENT = feudal_government }
		}

		# Traditions
		if = {
			limit = { 
				has_dlc_feature = hybridize_culture
				NOR = {
					culture = { has_cultural_tradition = tradition_staunch_traditionalists }
					culture = { has_cultural_tradition = tradition_culture_blending }
				}
			}
			culture = { add_culture_tradition = tradition_culture_blending }
		}

		# Innovations
		if = {
			limit = {
				culture = {
					NOT = { has_innovation = innovation_classical_monetary_standards }
				}
			}
			culture = { add_innovation = innovation_classical_monetary_standards }
		}
		if = {
			limit = {
				culture = {
					NOT = { has_innovation = innovation_classical_constitution }
				}
			}
			culture = { add_innovation = innovation_classical_constitution }
		}
		if = {
			limit = {
				culture = {
					NOT = { has_innovation = innovation_classical_public_honours }
				}
			}
			culture = { add_innovation = innovation_classical_public_honours }
		}

		# Court setup
		hidden_effect = { set_court_type = court_diplomatic }
		custom_tooltip = set_court_type_diplomatic_first
		set_court_language = language_greek
	}
	option = { # Greco-Odrysian influence (dynastic and warlike)
		name = anatolia_decisions.0001.c
		
		# Government changes
		if = {
			limit = { has_government = clan_government }
			change_government_form = { GOVERNMENT = feudal_government }
		}

		# Innovations
		if = {
			limit = {
				culture = {
					NOT = { has_innovation = innovation_classical_monetary_standards }
				}
			}
			culture = { add_innovation = innovation_classical_monetary_standards }
		}

		# Court setup
		hidden_effect = { set_court_type = court_warlike }
		custom_tooltip = set_court_type_warlike_first
		set_court_language = language_greek
	}
	option = { # Persian influence (dynastic and bureaucratic)
		name = anatolia_decisions.0001.d
		
		# Government changes
		if = {
			limit = { has_government = clan_government }
			change_government_form = { GOVERNMENT = feudal_government }
		}

		# Traditions
		if = {
			limit = { 
				has_dlc_feature = hybridize_culture
				NOR = {
					culture = { has_cultural_tradition = tradition_staunch_traditionalists }
					culture = { has_cultural_tradition = tradition_culture_blending }
				}
			}
			culture = { add_culture_tradition = tradition_culture_blending }
		}

		# Innovations
		if = {
			limit = {
				culture = {
					NOT = { has_innovation = innovation_classical_monetary_standards }
				}
			}
			culture = { add_innovation = innovation_classical_monetary_standards }
		}
		if = {
			limit = {
				culture = {
					NOT = { has_innovation = innovation_classical_bureaucracy }
				}
			}
			culture = { add_innovation = innovation_classical_bureaucracy }
		}
		#TODO: possibly give access to a Persian-specific innovation? (e.g. Paridaizas)

		# Court setup
		hidden_effect = { set_court_type = court_administrative }
		custom_tooltip = set_court_type_administrative_first
		set_court_language = language_iranian
	}

	option = { # traditional approach (clan and tribal)
		name = anatolia_decisions.0001.e

		#Your dynasty will be remembered for forging its own path
		dynasty = { add_dynasty_prestige = major_dynasty_prestige_gain }

		# Traditions
		if = {
			limit = { 
				has_dlc_feature = hybridize_culture
				NOR = {
					culture = { has_cultural_tradition = tradition_staunch_traditionalists }
					culture = { has_cultural_tradition = tradition_culture_blending }
				}
			}
			culture = { add_culture_tradition = tradition_staunch_traditionalists }
		}

		# Court setup
		hidden_effect = { set_court_type = court_tribal }
		custom_tooltip = set_court_type_tribal_first
		set_court_language = language_thracian
	}

	after = {
		every_ruler = {
			limit = {
				NOT = { this = scope:k_bithynia_founder }
				is_within_diplo_range = { CHARACTER = scope:k_bithynia_founder }
			}
			trigger_event = {
				id = anatolia_decisions.0002
				days = 7
			}
		}
	}
}

# Someone else formed k_bithynia
anatolia_decisions.0002 = {
	type = character_event
	title = anatolia_decisions.0002.t
	desc = {
		first_valid = {
			triggered_desc = {
				trigger = { 
					culture = { this = scope:k_bithynia_founder.culture }
				}
				desc = {
					first_valid = {
						triggered_desc = {
							trigger = {
								any_liege_or_above = { this = scope:k_bithynia_founder }
							}
							desc = anatolia_decisions.0002.desc.bithynian
						}
						desc = anatolia_decisions.0002.desc.bithynian_independent
					}
				}
			}
			desc = anatolia_decisions.0002.desc
		}
	}
	theme = realm
	left_portrait = {
		character = scope:k_bithynia_founder
		animation = personality_honorable
	}

	immediate = {
	}

	option = { # okay
		name = {
			trigger = {
				culture = { this = scope:k_bithynia_founder.culture }
				any_liege_or_above = { this = scope:k_bithynia_founder }
			}
			text = anatolia_decisions.0002.a_bithynian
		}
		name = anatolia_decisions.0002.a
	}
}

##############################
# Ionian Kingdom Decisions 	 #
##############################

# I formed an Ionian kingdom
anatolia_decisions.0003 = {
	type = character_event
	title = anatolia_decisions.0003.t
	desc = anatolia_decisions.0003.desc
	theme = realm
	left_portrait = {
		character = scope:ionian_kingdom_founder
		animation = personality_honorable
	}

	immediate = {
		if = {
			limit = { title:k_ionia = { this = scope:ionian_kingdom } }
			form_k_ionia_decision_effects = yes
		}
		else_if = {
			limit = { title:k_troas = { this = scope:ionian_kingdom } }
			form_k_troas_decision_effects = yes
		}
	}

	option = { # okay
		name = anatolia_decisions.0003.a
	}
}

# Someone else formed an Ionian kingdom
anatolia_decisions.0004 = {
	type = character_event
	title = anatolia_decisions.0004.t
	desc = anatolia_decisions.0004.desc
	theme = realm
	left_portrait = {
		character = scope:ionian_kingdom_founder
		animation = personality_honorable
	}

	immediate = {
	}

	option = { # okay
		name = anatolia_decisions.0004.a
	}
}

##############################
# Ionian Revolt Decision 	 #
##############################

# I started the Ionian revolt
anatolia_decisions.0005 = {
	type = character_event
	title = anatolia_decisions.0005.t
	desc = anatolia_decisions.0005.desc
	theme = war
	override_background = {
		event_background = throne_room
	}
	left_portrait = {
		character = scope:ionian_revolt_leader
		animation = war_attacker
	}
	right_portrait = {
		character = scope:ionian_revolt_defender
		animation = war_defender
	}

	immediate = {
		#Make the revolt leader a direct vassal of their top-liege to avoid problems with war inheritance
		hidden_effect = {
			create_title_and_vassal_change = {
				type = independency
				save_scope_as = change
				add_claim_on_loss = no
			}
			scope:ionian_revolt_leader = {
				change_liege = {
					liege = scope:ionian_revolt_defender
					change = scope:change
				}
			}
			resolve_title_and_vassal_change = scope:change
		}
	}

	option = { # Let's do this!
		name = anatolia_decisions.0005.a

		ionian_revolt_decision_effects = yes
	}

	option = { # Nevermind
		name = anatolia_decisions.0005.b
		trigger = { is_ai = no }

		#Transfer back to their original liege
		hidden_effect = {
			create_title_and_vassal_change = {
				type = returned
				save_scope_as = change
				add_claim_on_loss = no
			}
			scope:ionian_revolt_leader = {
				change_liege = {
					liege = scope:ionian_revolt_liege
					change = scope:change
				}
			}
			resolve_title_and_vassal_change = scope:change
		}

		#Allow this character (and others) to attempt a revolt in the future
		remove_character_flag = attempted_ionian_revolt
		remove_list_global_variable = {
			name = unavailable_unique_decisions
			target = flag:ionian_revolt_decision
		}
		#Return the resources spent on taking the decision
		add_gold = 500
		add_prestige = 350
	}
}

# Someone else started the Ionian revolt
anatolia_decisions.0006 = {
	type = character_event
	title = anatolia_decisions.0006.t
	desc = {
		desc = anatolia_decisions.0006.desc
		first_valid = {
			triggered_desc = {
				trigger = { this = scope:ionian_revolt_defender }
				desc = anatolia_decisions.0006.desc_defender
			}
			triggered_desc = {
				trigger = { 
					ionian_revolt_should_support_trigger = yes
					OR = {
						ionian_revolt_proximity_1_trigger = yes
						ionian_revolt_proximity_2_trigger = yes
						ionian_revolt_proximity_3_trigger = yes
					}
				}
				desc = anatolia_decisions.0006.desc_ally
			}
			desc = anatolia_decisions.0006.desc_generic
		}
	}
	theme = war
	override_background = {
		event_background = throne_room
	}
	left_portrait = {
		character = scope:ionian_revolt_leader
		animation = war_attacker
	}
	right_portrait = {
		character = scope:ionian_revolt_defender
		animation = war_defender
	}

	option = { # Primary defender
		name = anatolia_decisions.0006.a
		trigger = { this = scope:ionian_revolt_defender }

		custom_tooltip = anatolia_decisions.0006.tt_aid_defender

		custom_description_no_bullet = {
			text = anatolia_decisions.0006.tt_victory
			object = scope:ionian_revolt_leader
		}
		custom_description_no_bullet = {
			text = anatolia_decisions.0006.tt_white_peace
			object = scope:ionian_revolt_leader
		}
		custom_description_no_bullet = {
			text = anatolia_decisions.0006.tt_defeat
			object = scope:ionian_revolt_leader
		}
	}
	option = { # Potential allies
		name = anatolia_decisions.0006.b
		trigger = { 
			ionian_revolt_should_support_trigger = yes
			OR = {
				ionian_revolt_proximity_1_trigger = yes
				ionian_revolt_proximity_2_trigger = yes
				ionian_revolt_proximity_3_trigger = yes
			}
		}

		custom_tooltip = anatolia_decisions.0006.tt_aid
	}
	option = { # Everyone else
		name = anatolia_decisions.0006.c
		trigger = { 
			NOR = { 
				this = scope:ionian_revolt_defender
				AND = {
					ionian_revolt_should_support_trigger = yes
					OR = {
						ionian_revolt_proximity_1_trigger = yes
						ionian_revolt_proximity_2_trigger = yes
						ionian_revolt_proximity_3_trigger = yes
					}
				}
			}
		}

		custom_tooltip = anatolia_decisions.0006.tt_aid
	}
}

# Ionia calls for aid...
anatolia_decisions.0007 = {
	type = letter_event
	opening = anatolia_decisions.0007.t
	desc = anatolia_decisions.0007.desc
	sender = scope:ionian_revolt_leader

	trigger = {
		exists = scope:ionian_revolt_war

		#Must not already be participating in the war
		NOT = { is_participant_in_war = scope:ionian_revolt_war }

		#Must not be imprisoned
		is_imprisoned = no	
	}

	immediate = {
		save_scope_as = ionian_revolt_third_party
	}
	
	option = { # ...And *random county* will answer
		name = anatolia_decisions.0007.a
		trigger = {
			OR = {
				is_ai = no
				AND = {
					is_at_war = no
					ionian_revolt_should_support_trigger = yes
				}
			}
		}
		ionian_revolt_0007_tt_effects_a = yes

		scope:ionian_revolt_leader = {
			add_opinion = {
				target = root
				modifier = grateful_opinion
				opinion = 20
			}
		}
		scope:ionian_revolt_war = { add_attacker = root }
		add_character_flag = ionian_revolt_joined_as_attacker
		scope:ionian_revolt_defender = {
			add_opinion = {
				target = root
				modifier = sided_with_the_enemy_opinion
			}
		}

		stress_impact = {
			craven = medium_stress_impact_gain
		}

		ai_chance = {
			base = 50

			ai_value_modifier = {
				ai_energy = 0.5
				ai_boldness = 1
				ai_honor = 0.5
			}

			modifier = { # Weight down for stress.
				add = -20
				has_trait = craven
			}
			modifier = { # More likely if same culture as attacker
				has_same_culture_as = scope:ionian_revolt_leader
				factor = 1.2
			}
			modifier = { # Less likely if low proximity to revolt
				ionian_revolt_proximity_1_trigger = yes
				factor = 0.5
			}
			modifier = { # Less likely if war is far away
				scope:ionian_revolt_leader.capital_province = {
					squared_distance = { target = root.capital_county value > 200000 }
				}
				factor = 0.5
			}
			modifier = { # Less likely if attackers outnumber defenders
				ionian_revolt_attacker_strength > ionian_revolt_defender_strength
				factor = 0.5
			}
			modifier = { # More likely if defenders outnumber attackers
				ionian_revolt_attacker_strength < ionian_revolt_defender_strength
				factor = 2
			}
			modifier = { # More likely if you're in the same region
				ionian_revolt_should_support_trigger = yes
				ionian_revolt_proximity_3_trigger = yes
				factor = 1.5
			}
			modifier = { # More likely if you have a shot at independence
				factor = 1.2
				ionian_revolt_proximity_2_trigger = yes
				any_liege_or_above = { this = scope:ionian_revolt_defender }
			}
			#More likely if the revolt leader has a hook on you
			modifier = {
				factor = 1.5
				scope:ionian_revolt_leader = { has_hook = ROOT }
			}
			#Much more likely if the revolt leader has a strong hook on you
			modifier = {
				factor = 2
				scope:ionian_revolt_leader = { has_strong_hook = ROOT }
			}
			#More likely to go against your rival
			modifier = {
				factor = 1.5
				has_relation_rival = scope:ionian_revolt_defender
				NOT = { has_relation_nemesis = scope:ionian_revolt_defender }
			}
			#Much more likely to go against your nemesis
			modifier = {
				factor = 2
				has_relation_nemesis = scope:ionian_revolt_defender
			}
			#Less likely if the defender has a hook on you
			modifier = {
				factor = 0.5
				scope:ionian_revolt_defender = { has_hook = ROOT }
			}
			#Much less likely if the defender has a strong hook on you
			modifier = {
				factor = 0
				scope:ionian_revolt_defender = { has_strong_hook = ROOT }
			}
			#Less likely to go against your friend
			modifier = {
				has_relation_friend = scope:ionian_revolt_defender
				NOT = { has_relation_best_friend = scope:ionian_revolt_defender }
				factor = 0.5
			}
			#Much less likely to go against your best friend
			modifier = {
				has_relation_best_friend = scope:ionian_revolt_defender
				factor = 0
			}
		}
	}

	option = { # Side with the Defender!
		name = anatolia_decisions.0007.b
		trigger = { 			
			ionian_revolt_proximity_3_trigger = yes #Only local rulers can side with the defender 
			OR = {
				is_ai = no
				AND = {
					is_at_war = no
					ionian_revolt_should_support_trigger = no #No AI backstabbing, please
				}
			}
		}
		ionian_revolt_0007_tt_effects_b = yes

		scope:ionian_revolt_defender = {
			add_opinion = {
				target = root
				modifier = grateful_opinion
				opinion = 20
			}
		}
		scope:ionian_revolt_war = { add_defender = root }
		add_character_flag = ionian_revolt_joined_as_defender
		scope:ionian_revolt_leader = {
			add_opinion = {
				target = root
				modifier = sided_with_the_enemy_opinion
			}
		}

		stress_impact = {
			craven = medium_stress_impact_gain
		}

		ai_chance = {
			base = 0

			modifier = { # Weight down for stress.
				add = -20
				has_trait = craven
			}
			#More likely if same culture as defender
			modifier = { 
				has_same_culture_as = scope:ionian_revolt_defender
				factor = 1.2
			}
			#More likely if the defender has a hook on you
			modifier = {
				add = 300
				scope:ionian_revolt_defender = { has_hook = ROOT }
			}
			#Much more likely if the defender has a strong hook on you
			modifier = {
				factor = 2
				scope:ionian_revolt_defender = { has_strong_hook = ROOT }
			}
			#More likely to go against your rival
			modifier = {
				has_relation_rival = scope:ionian_revolt_leader
				NOT = { has_relation_nemesis = scope:ionian_revolt_leader }
				add = 300
			}
			#Much more likely to go against your nemesis
			modifier = {
				has_relation_nemesis = scope:ionian_revolt_leader
				add = 600
			}
			#Less likely if the revolt leader has a hook on you
			modifier = {
				factor = 0.5
				scope:ionian_revolt_leader = { has_hook = ROOT }
			}
			#Much less likely if the revolt leader has a strong hook on you
			modifier = {
				factor = 0
				scope:ionian_revolt_leader = { has_strong_hook = ROOT }
			}
			#Less likely to go against your friend
			modifier = {
				has_relation_friend = scope:ionian_revolt_leader
				NOT = { has_relation_best_friend = scope:ionian_revolt_leader }
				factor = 0.5
			}
			#Much less likely to go against your best friend
			modifier = {
				has_relation_best_friend = scope:ionian_revolt_leader
				factor = 0
			}
		}
	}

	option = { # Offer men
		name = anatolia_decisions.0007.c
		trigger = {
			NOT = { ionian_revolt_proximity_3_trigger = yes } #You can't really launch an expedition to yourself
			OR = {
				is_ai = no
				AND = {
					is_at_war = no
					ionian_revolt_should_support_trigger = yes
				}
			}
		}
		ionian_revolt_0007_tt_effects_b = yes
		scope:ionian_revolt_leader = {
			add_opinion = {
				target = root
				modifier = grateful_opinion
				opinion = 10
			}
			spawn_army = {
				name = ionian_expeditionary_force
				levies = {
					add = root.max_military_strength
					multiply = 0.1
				}
				men_at_arms = {
					type = hoplitai
					stacks = 1
				}
				location = capital_province
				uses_supply = yes
				war = scope:ionian_revolt_war
				inheritable = no
			}
		}
		capital_county = {
			add_county_modifier = {
				modifier = maintaining_expeditionary_force_modifier
				years = 10
			}
		}
		add_character_flag = ionian_revolt_supplied_troops

		scope:ionian_revolt_defender = {
			add_opinion = {
				target = root
				modifier = angry_opinion
				opinion = -10
			}
		}
		scope:ionian_revolt_leader = {
			send_interface_message = {
				type = event_war_good
				title = anatolia_decisions.0007.c.feed.t
				right_icon = root
				show_as_tooltip = {
					spawn_army = {
						name = ionian_expeditionary_force
						levies = {
							add = root.max_military_strength
							multiply = 0.1
						}
						men_at_arms = {
							type = hoplitai
							stacks = 1
						}
						location = capital_province
						uses_supply = yes
						war = scope:ionian_revolt_war
						inheritable = no
					}
				}
			}
		}

		ai_chance = {
			base = 100

			modifier = { # More likely if same culture as attacker
				has_same_culture_as = scope:ionian_revolt_leader
				factor = 1.2
			}
		}
	}

	option = { # Offer money
		name = anatolia_decisions.0007.d
		trigger = {
			OR = {
				is_ai = no
				AND = {
					is_at_war = no
					ionian_revolt_should_support_trigger = yes
					short_term_gold >= major_gold_value
				}
			}
		}
		ionian_revolt_0007_tt_effects_b = yes

		pay_short_term_gold = {
			target = scope:ionian_revolt_leader
			gold = major_gold_value
		}
		scope:ionian_revolt_leader = {
			add_opinion = {
				target = root
				modifier = grateful_opinion
				opinion = 10
			}
		}
		scope:ionian_revolt_defender = {
			add_opinion = {
				target = root
				modifier = angry_opinion
				opinion = -10
			}
		}
		add_character_flag = ionian_revolt_supplied_gold

		stress_impact = {
			generous = minor_stress_impact_loss
			greedy = medium_stress_impact_gain
		}

		ai_chance = {
			base = 200

			ai_value_modifier = {
				ai_greed = -2
				ai_energy = -0.5
			}

			modifier = { # Weight up for stress.
				add = 10
				has_trait = generous
			}
			modifier = { # Weight down for stress.
				add = -20
				has_trait = greedy
			}
			modifier = { # More likely if same culture as attacker
				has_same_culture_as = scope:ionian_revolt_leader
				factor = 1.2
			}
		}
	}

	option = { # Offer thoughts and prayers
		name = anatolia_decisions.0007.e

		ionian_revolt_0007_tt_effects_b = yes

		scope:ionian_revolt_leader = {
			add_opinion = {
				target = root
				modifier = disappointed_opinion
				opinion = -5
			}
		}
		add_character_flag = ionian_revolt_stayed_neutral

		ai_chance = {
			base = 300

			modifier = { # Nearby rulers in the same realm should try to get involved
				factor = 0.5
				ionian_revolt_proximity_2_trigger = yes
				any_liege_or_above = { this = scope:ionian_revolt_defender }
			}
			modifier = { # Rulers in the region should always get involved if they can
				factor = 0
				ionian_revolt_proximity_3_trigger = yes
				ionian_revolt_should_support_trigger = yes
			}
		}
	}
}

# Revolt defender requests your assistance
anatolia_decisions.0008 = {
	type = letter_event
	opening = anatolia_decisions.0008.t
	desc = anatolia_decisions.0008.desc
	sender = scope:ionian_revolt_defender

	trigger = {
		exists = scope:ionian_revolt_war

		#Must not already be participating in the war
		NOT = { is_participant_in_war = scope:ionian_revolt_war }

		#Must have something to lose
		ionian_revolt_proximity_3_trigger = yes
		ionian_revolt_should_not_support_trigger = yes	

		#Must not be imprisoned
		is_imprisoned = no	
	}

	immediate = {
		save_scope_as = ionian_revolt_third_party
	}

	option = { # Offer your assistance
		name = anatolia_decisions.0008.a
		add_character_flag = ionian_revolt_joined_as_defender
		trigger = {
			OR = {
				is_ai = no
				is_at_war = no
			}
		}
		ionian_revolt_0008_tt_effects = yes

		scope:ionian_revolt_defender = {
			add_opinion = {
				target = root
				modifier = grateful_opinion
				opinion = 20
			}
		}
		scope:ionian_revolt_war = { add_defender = root }
		scope:ionian_revolt_leader = {
			add_opinion = {
				target = root
				modifier = sided_with_the_enemy_opinion
			}
		}

		scope:ionian_revolt_leader = { 
			trigger_event = {
				id = anatolia_decisions.0009
				days = 2
			}
		}
		scope:ionian_revolt_defender = { 
			trigger_event = anatolia_decisions.0010
		}

		ai_chance = {
			base = 50

			modifier = { # Much less likely if the defender is winning decisively
				scope:ionian_revolt_war = { defender_war_score > 50 }
				factor = 0
			}
			modifier = { # Less likely if the defender is winning 
				scope:ionian_revolt_war = { defender_war_score > 25 }
				factor = 0.5
			}
			modifier = { # More likely if the defender is losing 
				scope:ionian_revolt_war = { defender_war_score < 0 }
				factor = 1.5
			}
			modifier = { # More likely if the defender is losing badly
				scope:ionian_revolt_war = { defender_war_score < -25 }
				factor = 2
			}
			modifier = { # Less likely if defenders outnumber attackers
				ionian_revolt_defender_strength > ionian_revolt_attacker_strength
				factor = 0.5
			}
			modifier = { # More likely if attackers outnumber defenders
				ionian_revolt_defender_strength < ionian_revolt_attacker_strength
				factor = 2
			}

			#More likely if same culture as defender
			modifier = { 
				has_same_culture_as = scope:ionian_revolt_defender
				factor = 1.2
			}
			#Much more likely if you have something to lose
			modifier = {
				factor = 2
				OR = { 
					NOT = { capital_province = { geographical_region = custom_ionia } }
					highest_held_title_tier >= tier_kingdom
				}
				OR = {
					any_realm_county = {
						percent >= 0.25
						title_province = { geographical_region = custom_ionia }
					}
					any_realm_county = {
						count >= 4
						title_province = { geographical_region = custom_ionia }
					}
					any_held_title = {
						tier = tier_county
						title_province = { geographical_region = custom_ionia }
					}
				}
			}
			#Much more likely if you're allied with the defender
			modifier = {
				factor = 2
				is_allied_to = scope:ionian_revolt_defender
			}
			#Much less likely if you're allied with the revolt leader
			modifier = {
				factor = 0
				is_allied_to = scope:ionian_revolt_leader
			}
			#More likely if the defender has a hook on you
			modifier = {
				factor = 1.5
				scope:ionian_revolt_defender = { has_hook = ROOT }
			}
			#Much more likely if the defender has a strong hook on you
			modifier = {
				factor = 2
				scope:ionian_revolt_defender = { has_strong_hook = ROOT }
			}
			#More likely to go against your rival
			modifier = {
				factor = 1.5
				has_relation_rival = scope:ionian_revolt_leader
				NOT = { has_relation_nemesis = scope:ionian_revolt_leader }
			}
			#Much more likely to go against your nemesis
			modifier = {
				factor = 2
				has_relation_nemesis = scope:ionian_revolt_leader
			}
			#Less likely if the revolt leader has a hook on you
			modifier = {
				factor = 0.5
				scope:ionian_revolt_leader = { has_hook = ROOT }
			}
			#Much less likely if the revolt leader has a strong hook on you
			modifier = {
				factor = 0
				scope:ionian_revolt_leader = { has_strong_hook = ROOT }
			}
			#Less likely to go against your friend
			modifier = {
				has_relation_friend = scope:ionian_revolt_leader
				NOT = { has_relation_best_friend = scope:ionian_revolt_leader }
				factor = 0.5
			}
			#Much less likely to go against your best friend
			modifier = {
				has_relation_best_friend = scope:ionian_revolt_leader
				factor = 0
			}
		}
	}

	option = { # It's not my war to fight
		name = anatolia_decisions.0008.b
		ionian_revolt_0008_tt_effects = yes

		add_character_flag = ionian_revolt_stayed_neutral
		scope:ionian_revolt_defender = {
			add_opinion = {
				target = root
				modifier = refusal_opinion
				opinion = low_negative_opinion
			}
		}

		ai_chance = {
			base = 100
		}
	}
}

# Revolt leader receives letter from potential supporters (and enemies!)
anatolia_decisions.0009 = {
	type = letter_event
	opening = anatolia_decisions.0009.t
	desc = anatolia_decisions.0009.desc
	sender = scope:ionian_revolt_third_party

	immediate = {
		if = {
			limit = { 
				scope:ionian_revolt_third_party = { has_character_flag = ionian_revolt_joined_as_defender }
			}
			scope:ionian_revolt_war = { add_defender = scope:ionian_revolt_third_party }
			add_opinion = {
				target = scope:ionian_revolt_third_party
				modifier = sided_with_the_enemy_opinion
			}
		}
	}

	option = { # New defender
		name = {
			trigger = { always = no }
			text = anatolia_decisions.0009.a
		}
		name = {
			trigger = {
				OR = {
					has_trait = arrogant
					scope:ionian_revolt_war = { attacker_war_score > 25 }
				}
			}
			text = anatolia_decisions.0009.a_winning
		}
		name = {
			trigger = {
				OR = {
					has_trait = craven
					scope:ionian_revolt_war = { attacker_war_score < 25 }
				}
			}
			text = anatolia_decisions.0009.a_losing
		}

		trigger = {
			scope:ionian_revolt_third_party = { has_character_flag = ionian_revolt_joined_as_defender }
		}
	}
}

# Revolt defender receives letter from potential supporters
anatolia_decisions.0010 = {
	type = letter_event
	opening = anatolia_decisions.0010.t
	desc = anatolia_decisions.0010.desc
	sender = scope:ionian_revolt_third_party

	immediate = {
		if = {
			limit = { 
				scope:ionian_revolt_third_party = { has_character_flag = ionian_revolt_joined_as_defender }
			}
			scope:ionian_revolt_war = { add_defender = scope:ionian_revolt_third_party }
			add_opinion = {
				target = scope:ionian_revolt_third_party
				modifier = grateful_opinion
				opinion = 20
			}
		}
	}

	option = { # New defender
		name = {
			trigger = { always = no }
			text = anatolia_decisions.0010.a
		}
		name = {
			trigger = {
				OR = {
					has_trait = arrogant
					scope:ionian_revolt_war = { attacker_war_score > 25 }
				}
			}
			text = anatolia_decisions.0010.a_winning
		}
		name = {
			trigger = {
				scope:ionian_revolt_war = { attacker_war_score < 25 }
			}
			text = anatolia_decisions.0010.a_losing
		}

		trigger = {
			scope:ionian_revolt_third_party = { has_character_flag = ionian_revolt_joined_as_defender }
		}
	}
}

# Title distribution maintenance event
anatolia_decisions.0011 = {
	hidden = yes
#	type = character_event
#	title = anatolia_decisions.0011.t
#	desc = anatolia_decisions.0011.desc
#	theme = war
#	override_background = {
#		event_background = throne_room
#	}
#	left_portrait = {
#		character = scope:attacker
#		animation = war_attacker
#	}
#	right_portrait = {
#		character = scope:defender
#		animation = war_defender
#	}

	immediate = {
		if = {
			#King-tier rulers outside the region become independent
			limit = { 
				ionian_revolt_proximity_2_trigger = yes
				highest_held_title_tier >= tier_kingdom
			}
			add_character_flag = ionian_revolt_independent_king

			hidden_effect = {
				create_title_and_vassal_change = {
					type = independency
					save_scope_as = change
					add_claim_on_loss = no
				}
				change_liege_or_become_independent = {
					CHANGE = scope:change
					VASSAL = root
				}
				resolve_title_and_vassal_change = scope:change
			}
		}
		else_if = {
			#Transfer duke/count tier vassals who joined in the revolt to k_ionia
			#Note that this may cause other rulers in the realm to lose vassals even if they do not hold land in the Ionian region
			limit = { 
				has_character_flag = ionian_revolt_joined_as_attacker 
				#Exclude vassals of king-tier rulers about to gain independence
				NOT = { 
					any_liege_or_above = { has_character_flag = ionian_revolt_independent_king }	
				}
			}

			#Save old liege so we can transfer them back if they've also joined k_ionia
			liege = { save_scope_as = old_liege }

			hidden_effect = {
				create_title_and_vassal_change = {
					type = conquest_populist
					save_scope_as = change
					add_claim_on_loss = no
				}
				change_liege = {
					liege = scope:attacker
					change = scope:change
				}
				resolve_title_and_vassal_change = scope:change
			}
		}
		else_if = {
			#Transfer duke/count tier vassals who have a capital in the region to k_ionia
			limit = { 
				highest_held_title_tier <= tier_duchy
				capital_province = { geographical_region = custom_ionia }
			}

			#Save old liege so we can transfer them back if they've also joined k_ionia
			liege = { save_scope_as = old_liege }

			hidden_effect = {
				create_title_and_vassal_change = {
					type = conquest_populist
					save_scope_as = change
					add_claim_on_loss = no
				}
				change_liege = {
					liege = scope:attacker
					change = scope:change
				}
				resolve_title_and_vassal_change = scope:change
			}
		}
		else_if = {
			#Usurp counties in the region held directly by king/emperor tier rulers, or held by rulers without a capital in the region
			limit = { 
				OR = { 
					highest_held_title_tier >= tier_kingdom
					NOT = { capital_province = { geographical_region = custom_ionia } }
				}
			}
			hidden_effect = {
				create_title_and_vassal_change = {
					type = conquest
					save_scope_as = change
					add_claim_on_loss = yes
				}
				every_county_in_region = {
					region = custom_ionia
					limit = { holder = root }
					change_title_holder_include_vassals = {
						holder = scope:attacker
						change = scope:change
					}
				}
				resolve_title_and_vassal_change = scope:change
			}
		}
		#Tidy up vassals
		if = {
			limit = { 
				scope:old_liege.liege = {
					this = scope:attacker 
				}
			}
			hidden_effect = {
				create_title_and_vassal_change = {
					type = granted
					save_scope_as = change
					add_claim_on_loss = no
				}
				change_liege = {
					liege = scope:old_liege
					change = scope:change
				}
				resolve_title_and_vassal_change = scope:change
			}
		}
		#Tidy up contracts & governments
		if = {
			limit = { liege = scope:attacker }
			#If they have a dependent vassal contract, make them autonomous
			if = {
				limit = { vassal_contract_has_flag = has_dependent_city_state_contract }
				vassal_contract_set_obligation_level = { type = vassal_role level = 0 }
				hidden_effect = { set_autonomous_contracts_effect = yes }
			}
			else_if = { 
				limit = { vassal_contract_has_flag = has_dependent_coalition_contract }
				vassal_contract_set_obligation_level = { type = vassal_role level = 2 }
				hidden_effect = { set_autonomous_contracts_effect = yes }
			}
			#If they were a bureaucracy, make them an autonomous city state
			#TODO: Give bureaucratic rulers choice to become city-state or give up their titles
			else_if = { 
				limit = { government_has_flag = is_bureaucracy_government }
				vassal_contract_set_obligation_level = { type = vassal_role level = 0 }
				save_scope_as = vassal_contract_holder
				trigger_event = ATHA_vassal_contract.1
			}
		}
	}

#	option = { # Okay
#		name = anatolia_decisions.0011.a
#	}
}