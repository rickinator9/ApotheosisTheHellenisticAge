namespace = anatolia_decisions

## form_k_bithynia_decision
# 0001 - I formed k_bithynia
# 0002 - Someone else formed k_bithynia

## form_k_ionia_decision
# 0003 - I formed k_ionia
# 0004 - Someone else formed k_ionia

##############################
# Form k_bithynia		 	 #
##############################

# I formed k_bithynia
anatolia_decisions.0001 = {
	type = character_event
	title = anatolia_decisions.0001.t
	desc = anatolia_decisions.0001.desc
	theme = realm
	left_portrait = {
		character = scope:k_bithynia_founder
		animation = personality_honorable
	}

	immediate = {
		play_music_cue = "mx_cue_epic_sacral_moment"
		form_k_bithynia_decision_effects = yes

		title:c_astakos = { save_scope_as = astakos }
		title:c_chalkedon = { save_scope_as = chalkedon }
	}
	
	option = { # I choose Astakos
		name = anatolia_decisions.0001.a

		trigger = {
			title:c_astakos.holder = scope:k_bithynia_founder
		}
		title:c_astakos = {
			save_scope_as = new_bithynian_capital
			found_bithynian_capital_scripted_effect = yes
		}
		title:b_astakos_astakos = { 
			save_scope_as = new_bithynian_capital_barony 
			found_bithynian_capital_barony_scripted_effect = yes
		}

		every_player = {
			limit = {
				NOT = { this = scope:k_bithynia_founder }
				is_within_diplo_range = { CHARACTER = scope:k_bithynia_founder }
			}
			trigger_event = anatolia_decisions.0002
		}

		ai_chance = {
			# The AI should prefer this option, since Chalcedon has significantly higher development 
			base = 100
		}
	}
	option = { # I choose Chalkedon
		name = anatolia_decisions.0001.b

		trigger = {
			title:c_chalkedon.holder = scope:k_bithynia_founder
		}
		title:c_chalkedon = {
			save_scope_as = new_bithynian_capital
			found_bithynian_capital_scripted_effect = yes
		}
		title:b_chalkedon_chalkedon = { 
			save_scope_as = new_bithynian_capital_barony 
			found_bithynian_capital_barony_scripted_effect = yes
		}

		every_player = {
			limit = {
				NOT = { this = scope:k_bithynia_founder }
				is_within_diplo_range = { CHARACTER = scope:k_bithynia_founder }
			}
			trigger_event = anatolia_decisions.0002
		}

		ai_chance = {
			# The AI should prefer this option, since Chalcedon has significantly higher development 
			base = 1000
		}
	}
}

# Someone else formed k_bithynia
anatolia_decisions.0002 = {
	type = character_event
	title = anatolia_decisions.0002.t
	desc = anatolia_decisions.0002.desc
	theme = realm
	left_portrait = {
		character = scope:k_bithynia_founder
		animation = personality_honorable
	}

	immediate = {
	}

	option = { # okay
		name = anatolia_decisions.0002.a
	}
}

##############################
# Ionian Kingdom Decisions 	 #
##############################

# I formed an Ionian kingdom
anatolia_decisions.0003 = {
	type = character_event
	title = anatolia_decisions.0003.t
	desc = anatolia_decisions.0003.desc
	theme = realm
	left_portrait = {
		character = scope:ionian_kingdom_founder
		animation = personality_honorable
	}

	immediate = {
		if = {
			limit = { title:k_ionia = { this = scope:ionian_kingdom } }
			form_k_ionia_decision_effects = yes
		}
		else_if = {
			limit = { title:k_troas = { this = scope:ionian_kingdom } }
			form_k_troas_decision_effects = yes
		}
	}

	option = { # okay
		name = anatolia_decisions.0003.a
	}
}

# Someone else formed an Ionian kingdom
anatolia_decisions.0004 = {
	type = character_event
	title = anatolia_decisions.0004.t
	desc = anatolia_decisions.0004.desc
	theme = realm
	left_portrait = {
		character = scope:ionian_kingdom_founder
		animation = personality_honorable
	}

	immediate = {
	}

	option = { # okay
		name = anatolia_decisions.0004.a
	}
}

##############################
# Ionian Revolt Decision 	 #
##############################

# I started the Ionian revolt
anatolia_decisions.0005 = {
	type = character_event
	title = anatolia_decisions.0005.t
	desc = anatolia_decisions.0005.desc
	theme = war
	override_background = {
		event_background = throne_room
	}
	left_portrait = {
		character = scope:ionian_revolt_leader
		animation = war_attacker
	}
	right_portrait = {
		character = scope:ionian_revolt_defender
		animation = war_defender
	}

	immediate = {
	}

	option = { # Let's do this!
		name = anatolia_decisions.0005.a

		add_trait = ionian_revolt_leader

		#Adjust culture if not Ionian/Aeolian/Dorian
		if = {
			limit = {
				NOR = {
					has_culture = culture:aeolian
					has_culture = culture:dorian
					has_culture = culture:ionian
				}
			}
			#If capital is Ionian/Aeolian/Dorian, swap to your capital's culture
			if = {
				limit = {
					capital_province.culture = {
						OR = {
							this = culture:aeolian
							this = culture:dorian
							this = culture:ionian
						}
					}
				}
				set_culture = capital_province.culture
			}
			#Otherwise, take the culture that your capital had at game-start
			else_if = {
				limit = {
					OR = {
						capital_province.duchy = title:d_ionia
						capital_province.county = title:c_miletos
						capital_province.county = title:c_halikarnassos
						capital_province.county = title:c_phokaia
						capital_province.county = title:c_atarneus
					}
				}
				set_culture = culture:ionian
			}
			else_if = {
				limit = { 
					OR = {
						capital_province.duchy = title:d_aiolis 
						capital_province.county = title:c_adramyttion
					}
				}
				set_culture = culture:aeolian
			}
			else_if = {
				limit = { capital_province.duchy = title:d_doris }
				set_culture = culture:dorian
			}
		}
		
		start_war = {
			casus_belli = ionian_revolt_cb
			target = scope:ionian_revolt_defender
			target_title = d_aiolis
			target_title = d_ionia
			target_title = d_doris
			target_title = c_atarneus
			target_title = c_adramyttion
		}

		every_character_war = {
			limit = {
				primary_attacker = scope:ionian_revolt_leader
				primary_defender = scope:ionian_revolt_defender
			}
			save_scope_as = ionian_revolt_war
		}

		#Notify other players
		every_player = {
			limit = {
				NOT = { this = scope:ionian_revolt_leader }
				is_within_diplo_range = { CHARACTER = scope:ionian_revolt_leader }
			}
			trigger_event = anatolia_decisions.0006
		}

		#Ionia calls for aid
		every_ruler = {
			limit = {
				NOR = { 
					this = scope:ionian_revolt_leader 
					any_liege_or_above = { this = scope:ionian_revolt_leader }
					is_imprisoned = yes
				}
				is_within_diplo_range = { CHARACTER = scope:ionian_revolt_leader }
			}
			if = {
				limit = { ionian_revolt_proximity_3_trigger = yes }
				add_character_flag = ionian_revolt_proximity_3
				if = {
					limit = { NOT = { is_allied_to = scope:ionian_revolt_leader } }
					if = {
						limit = { ionian_revolt_should_not_support_trigger = yes }
						trigger_event = anatolia_decisions.0008
					}
					else = { 
						trigger_event = {
							id = anatolia_decisions.0007
							days = 1
						}
					}
				}
			}
			else_if = {
				limit = { ionian_revolt_proximity_2_trigger = yes }
				add_character_flag = ionian_revolt_proximity_2
				if = {
					limit = { NOT = { is_allied_to = scope:ionian_revolt_leader } }
					trigger_event = {
						id = anatolia_decisions.0007
						days = 3
					}
				}
			}
			else_if = {
				limit = { ionian_revolt_proximity_1_trigger = yes }
				add_character_flag = ionian_revolt_proximity_1
				if = {
					limit = { NOT = { is_allied_to = scope:ionian_revolt_leader } }
					trigger_event = {
						id = anatolia_decisions.0007
						days = 5
					}
				}
			}
		}
	}

	option = { # Nevermind
		name = anatolia_decisions.0005.b
		#Allow this character (and others) to attempt a revolt in the future
		remove_character_flag = attempted_ionian_revolt
		remove_list_global_variable = {
			name = unavailable_unique_decisions
			target = flag:ionian_revolt_decision
		}
		#Return the resources spent on taking the decision
		add_gold = 500
		add_prestige = 350
	}
}

# Someone else started the Ionian revolt
anatolia_decisions.0006 = {
	type = character_event
	title = anatolia_decisions.0006.t
	desc = anatolia_decisions.0006.desc
	theme = war
	override_background = {
		event_background = throne_room
	}
	left_portrait = {
		character = scope:ionian_revolt_leader
		animation = war_attacker
	}
	right_portrait = {
		character = scope:ionian_revolt_defender
		animation = war_defender
	}

	option = { # okay
		name = anatolia_decisions.0006.a
	}
}

# Ionia calls for aid...
anatolia_decisions.0007 = {
	type = character_event
	title = anatolia_decisions.0007.t
	desc = anatolia_decisions.0007.desc
	theme = realm
	left_portrait = {
		character = scope:ionian_revolt_leader
		animation = personality_honorable
	}

	immediate = {
		save_scope_as = ionian_revolt_third_party
	}
	
	option = { # ...And *random county* will answer
		name = anatolia_decisions.0007.a
		trigger = {
			OR = {
				is_ai = no
				AND = {
					is_at_war = no
					ionian_revolt_should_support_trigger = yes
				}
			}
		}
		scope:ionian_revolt_war = { add_attacker = root }
		add_character_flag = ionian_revolt_joined_as_attacker

		stress_impact = {
			craven = medium_stress_impact_gain
		}

		ai_chance = {
			base = 50

			ai_value_modifier = {
				ai_energy = 0.5
				ai_boldness = 1
				ai_honor = 0.5
			}

			modifier = { # Weight down for stress.
				add = -20
				has_trait = craven
			}
			modifier = { # Less likely if low proximity to revolt
				has_character_flag = ionian_revolt_proximity_1
				factor = 0.5
			}
			modifier = { # Less likely if war is far away
				scope:ionian_revolt_leader.capital_province = {
					squared_distance = { target = root.capital_county value > 200000 }
				}
				factor = 0.5
			}
			modifier = { # Less likely if attackers outnumber defenders
				ionian_revolt_attacker_strength > ionian_revolt_defender_strength
				factor = 0.5
			}
			modifier = { # More likely if defenders outnumber attackers
				ionian_revolt_attacker_strength < ionian_revolt_defender_strength
				factor = 2
			}
			modifier = { # More likely if you're in the same region
				ionian_revolt_should_support_trigger = yes
				has_character_flag = ionian_revolt_proximity_3
				factor = 1.5
			}
			modifier = { # More likely if you have a shot at independence
				factor = 1.2
				has_character_flag = ionian_revolt_proximity_2
				any_liege_or_above = { this = scope:ionian_revolt_defender }
			}
			#More likely if the revolt leader has a hook on you
			modifier = {
				factor = 1.5
				scope:ionian_revolt_leader = { has_hook = ROOT }
			}
			#Much more likely if the revolt leader has a strong hook on you
			modifier = {
				factor = 2
				scope:ionian_revolt_leader = { has_strong_hook = ROOT }
			}
			#More likely to go against your rival
			modifier = {
				factor = 1.5
				has_relation_rival = scope:ionian_revolt_defender
				NOT = { has_relation_nemesis = scope:ionian_revolt_defender }
			}
			#Much more likely to go against your nemesis
			modifier = {
				factor = 2
				has_relation_nemesis = scope:ionian_revolt_defender
			}
			#Less likely if the defender has a hook on you
			modifier = {
				factor = 0.5
				scope:ionian_revolt_defender = { has_hook = ROOT }
			}
			#Much less likely if the defender has a strong hook on you
			modifier = {
				factor = 0
				scope:ionian_revolt_defender = { has_strong_hook = ROOT }
			}
			#Less likely to go against your friend
			modifier = {
				has_relation_friend = scope:ionian_revolt_defender
				NOT = { has_relation_best_friend = scope:ionian_revolt_defender }
				factor = 0.5
			}
			#Much less likely to go against your best friend
			modifier = {
				has_relation_best_friend = scope:ionian_revolt_defender
				factor = 0
			}
		}
	}

	option = { # Side with the Defender!
		name = anatolia_decisions.0007.b
		trigger = { 			
			has_character_flag = ionian_revolt_proximity_3 #Only local rulers can side with the defender 
			OR = {
				is_ai = no
				AND = {
					is_at_war = no
					ionian_revolt_should_support_trigger = no #No AI backstabbing, please
				}
			}
		}
		scope:ionian_revolt_war = { add_defender = root }
		add_character_flag = ionian_revolt_joined_as_defender

		ai_chance = {
			base = 0

			#More likely if the defender has a hook on you
			modifier = {
				add = 300
				scope:ionian_revolt_defender = { has_hook = ROOT }
			}
			#Much more likely if the defender has a strong hook on you
			modifier = {
				factor = 2
				scope:ionian_revolt_defender = { has_strong_hook = ROOT }
			}
			#More likely to go against your rival
			modifier = {
				has_relation_rival = scope:ionian_revolt_leader
				NOT = { has_relation_nemesis = scope:ionian_revolt_leader }
				add = 300
			}
			#Much more likely to go against your nemesis
			modifier = {
				has_relation_nemesis = scope:ionian_revolt_leader
				add = 600
			}
			#Less likely if the revolt leader has a hook on you
			modifier = {
				factor = 0.5
				scope:ionian_revolt_leader = { has_hook = ROOT }
			}
			#Much less likely if the revolt leader has a strong hook on you
			modifier = {
				factor = 0
				scope:ionian_revolt_leader = { has_strong_hook = ROOT }
			}
			#Less likely to go against your friend
			modifier = {
				has_relation_friend = scope:ionian_revolt_leader
				NOT = { has_relation_best_friend = scope:ionian_revolt_leader }
				factor = 0.5
			}
			#Much less likely to go against your best friend
			modifier = {
				has_relation_best_friend = scope:ionian_revolt_leader
				factor = 0
			}
		}
	}

	option = { # Offer men
		name = anatolia_decisions.0007.c
		trigger = {
			NOT = { has_character_flag = ionian_revolt_proximity_3 } #You can't really launch an expedition to yourself
			OR = {
				is_ai = no
				AND = {
					is_at_war = no
					ionian_revolt_should_support_trigger = yes
				}
			}
		}
		scope:ionian_revolt_leader = {
			spawn_army = {
				name = ionian_expeditionary_force
				levies = {
					add = root.max_military_strength
					multiply = 0.1
				}
				men_at_arms = {
					type = hoplitai
					stacks = 1
				}
				location = capital_province
				uses_supply = yes
				war = scope:ionian_revolt_war
				inheritable = no
			}
		}
		capital_county = {
			add_county_modifier = {
				modifier = maintaining_expeditionary_force_modifier
				years = 10
			}
		}
		add_character_flag = ionian_revolt_supplied_troops

		ai_chance = {
			base = 100
		}
	}

	option = { # Offer money
		name = anatolia_decisions.0007.d
		trigger = {
			OR = {
				is_ai = no
				AND = {
					is_at_war = no
					ionian_revolt_should_support_trigger = yes
					short_term_gold >= major_gold_value
				}
			}
		}
		pay_short_term_gold = {
			target = scope:ionian_revolt_leader
			gold = major_gold_value
		}
		add_character_flag = ionian_revolt_supplied_gold

		stress_impact = {
			generous = minor_stress_impact_loss
			greedy = medium_stress_impact_gain
		}

		ai_chance = {
			base = 200

			ai_value_modifier = {
				ai_greed = -2
				ai_energy = -0.5
			}

			modifier = { # Weight up for stress.
				add = 10
				has_trait = generous
			}
			modifier = { # Weight down for stress.
				add = -20
				has_trait = greedy
			}
		}
	}

	option = { # Offer thoughts and prayers
		name = anatolia_decisions.0007.e
		add_character_flag = ionian_revolt_stayed_neutral

		ai_chance = {
			base = 300

			modifier = { # Nearby rulers in the same realm should try to get involved
				factor = 0.5
				has_character_flag = ionian_revolt_proximity_2
				any_liege_or_above = { this = scope:ionian_revolt_defender }
			}
			modifier = { # Rulers in the region should always get involved if they can
				factor = 0
				has_character_flag = ionian_revolt_proximity_3
				ionian_revolt_should_support_trigger = yes
			}
		}
	}
}

# Revolt defender requests your assistance
anatolia_decisions.0008 = {
	type = character_event
	title = anatolia_decisions.0008.t
	desc = anatolia_decisions.0008.desc
	theme = realm
	left_portrait = {
		character = scope:ionian_revolt_leader
		animation = personality_honorable
	}

	immediate = {
	}

	option = { # Offer your assistance
		name = anatolia_decisions.0008.a
		trigger = {
			OR = {
				is_ai = no
				is_at_war = no
			}
		}
		scope:ionian_revolt_war = { add_defender = root }
		add_character_flag = ionian_revolt_joined_as_defender

		ai_chance = {
			base = 50

			#Much more likely if you have something to lose
			modifier = {
				factor = 2
				OR = { 
					NOT = { capital_province = { geographical_region = custom_ionia } }
					highest_held_title_tier >= tier_kingdom
				}
				OR = {
					any_realm_county = {
						percent >= 0.25
						title_province = { geographical_region = custom_ionia }
					}
					any_realm_county = {
						count >= 4
						title_province = { geographical_region = custom_ionia }
					}
					any_held_title = {
						tier = tier_county
						title_province = { geographical_region = custom_ionia }
					}
				}
			}
			#Much likely if you're allied with the defender
			modifier = {
				factor = 2
				is_allied_to = scope:ionian_revolt_defender
			}
			#More likely if the defender has a hook on you
			modifier = {
				factor = 1.5
				scope:ionian_revolt_defender = { has_hook = ROOT }
			}
			#Much more likely if the defender has a strong hook on you
			modifier = {
				factor = 2
				scope:ionian_revolt_defender = { has_strong_hook = ROOT }
			}
			#More likely to go against your rival
			modifier = {
				factor = 1.5
				has_relation_rival = scope:ionian_revolt_leader
				NOT = { has_relation_nemesis = scope:ionian_revolt_leader }
			}
			#Much more likely to go against your nemesis
			modifier = {
				factor = 2
				has_relation_nemesis = scope:ionian_revolt_leader
			}
			#Less likely if the revolt leader has a hook on you
			modifier = {
				factor = 0.5
				scope:ionian_revolt_leader = { has_hook = ROOT }
			}
			#Much less likely if the revolt leader has a strong hook on you
			modifier = {
				factor = 0
				scope:ionian_revolt_leader = { has_strong_hook = ROOT }
			}
			#Less likely to go against your friend
			modifier = {
				has_relation_friend = scope:ionian_revolt_leader
				NOT = { has_relation_best_friend = scope:ionian_revolt_leader }
				factor = 0.5
			}
			#Much less likely to go against your best friend
			modifier = {
				has_relation_best_friend = scope:ionian_revolt_leader
				factor = 0
			}
		}
	}

	option = { # It's not my war to fight
		name = anatolia_decisions.0008.b
		add_character_flag = ionian_revolt_stayed_neutral

		ai_chance = {
			base = 100
		}
	}
}

# Revolt leader receives letter from potential supporters
anatolia_decisions.0009 = {
	type = character_event
	title = anatolia_decisions.0009.t
	desc = anatolia_decisions.0009.desc
	theme = realm
	left_portrait = {
		character = scope:ionian_revolt_leader
		animation = personality_honorable
	}

	immediate = {
	}

	option = { # okay
		name = anatolia_decisions.0009.a
	}
}

# Revolt defender receives letter from potential supporters
anatolia_decisions.0010 = {
	type = character_event
	title = anatolia_decisions.0010.t
	desc = anatolia_decisions.0010.desc
	theme = realm
	left_portrait = {
		character = scope:ionian_revolt_leader
		animation = personality_honorable
	}

	immediate = {
	}

	option = { # okay
		name = anatolia_decisions.0010.a
	}
}

# Title distribution maintenance event
anatolia_decisions.0011 = {
	type = character_event
	title = anatolia_decisions.0011.t
	desc = anatolia_decisions.0011.desc
	theme = war
	override_background = {
		event_background = throne_room
	}
	left_portrait = {
		character = scope:ionian_revolt_leader
		animation = war_attacker
	}
	right_portrait = {
		character = scope:ionian_revolt_defender
		animation = war_defender
	}

	immediate = {
		if = {
			#King-tier rulers outside the region become independent
			limit = { 
				has_character_flag = ionian_revolt_proximity_2
				highest_held_title_tier >= tier_kingdom
			}
			add_character_flag = ionian_revolt_independent_king

			hidden_effect = {
				create_title_and_vassal_change = {
					type = independency
					save_scope_as = change
					add_claim_on_loss = no
				}
				change_liege_or_become_independent = {
					CHANGE = scope:change
					VASSAL = root
				}
				resolve_title_and_vassal_change = scope:change
			}
		}
		else_if = {
			#Transfer duke/count tier vassals who joined in the revolt to k_ionia
			#Note that this may cause other rulers in the realm to lose vassals even if they do not hold land in the Ionian region
			limit = { 
				has_character_flag = ionian_revolt_joined_as_attacker 
				#Exclude vassals of king-tier rulers about to gain independence
				NOT = { 
					any_liege_or_above = { has_character_flag = ionian_revolt_independent_king }	
				}
			}

			#Save old liege so we can transfer them back if they've also joined k_ionia
			liege = { save_scope_as = old_liege }

			hidden_effect = {
				create_title_and_vassal_change = {
					type = conquest_populist
					save_scope_as = change
					add_claim_on_loss = no
				}
				change_liege = {
					liege = scope:attacker
					change = scope:change
				}
				resolve_title_and_vassal_change = scope:change
			}
		}
		else_if = {
			#Transfer duke/count tier vassals who have a capital in the region to k_ionia
			limit = { 
				has_character_flag = ionian_revolt_proximity_3
				highest_held_title_tier <= tier_duchy
				capital_province = { geographical_region = custom_ionia }
			}

			#Save old liege so we can transfer them back if they've also joined k_ionia
			liege = { save_scope_as = old_liege }

			hidden_effect = {
				create_title_and_vassal_change = {
					type = conquest_populist
					save_scope_as = change
					add_claim_on_loss = no
				}
				change_liege = {
					liege = scope:attacker
					change = scope:change
				}
				resolve_title_and_vassal_change = scope:change
			}
		}
		else_if = {
			#Usurp counties in the region held directly by king/emperor tier rulers, or held by rulers without a capital in the region
			limit = { 
				has_character_flag = ionian_revolt_proximity_3
				OR = { 
					highest_held_title_tier >= tier_kingdom
					NOT = { capital_province = { geographical_region = custom_ionia } }
				}
			}
			hidden_effect = {
				create_title_and_vassal_change = {
					type = conquest
					save_scope_as = change
					add_claim_on_loss = yes
				}
				every_county_in_region = {
					region = custom_ionia
					limit = { holder = root }
					change_title_holder_include_vassals = {
						holder = scope:attacker
						change = scope:change
					}
				}
				resolve_title_and_vassal_change = scope:change
			}
		}
		#Tidy up vassals
		if = {
			limit = { 
				scope:old_liege.liege = {
					this = scope:attacker 
				}
			}
			hidden_effect = {
				create_title_and_vassal_change = {
					type = granted
					save_scope_as = change
					add_claim_on_loss = no
				}
				change_liege = {
					liege = scope:old_liege
					change = scope:change
				}
				resolve_title_and_vassal_change = scope:change
			}
		}
		#Tidy up contracts & governments
		if = {
			limit = { liege = scope:attacker }
			#If they have a dependent vassal contract, make them autonomous
			if = {
				limit = { vassal_contract_has_flag = has_dependent_city_state_contract }
				vassal_contract_set_obligation_level = { type = vassal_role level = 0 }
				hidden_effect = { set_autonomous_contracts_effect = yes }
			}
			else_if = { 
				limit = { vassal_contract_has_flag = has_dependent_coalition_contract }
				vassal_contract_set_obligation_level = { type = vassal_role level = 2 }
				hidden_effect = { set_autonomous_contracts_effect = yes }
			}
			#If they were a bureaucracy, make them an autonomous city state
			#TODO: Give bureaucratic rulers choice to become city-state or give up their titles
			else_if = { 
				limit = { government_has_flag = is_bureaucracy_government }
				vassal_contract_set_obligation_level = { type = vassal_role level = 0 }
				save_scope_as = vassal_contract_holder
				trigger_event = ATHA_vassal_contract.1
			}
		}
	}

	option = { # Okay
		name = anatolia_decisions.0011.a
	}
}