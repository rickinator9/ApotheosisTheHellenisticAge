namespace = thrace_decisions

##################################################
# Restoring the Tithanos
##################################################

thrace_decisions.0001 = {
	type = character_event
	title = thrace_decisions.0001.t
	desc = thrace_decisions.0001.desc
	theme = faith
	left_portrait = {
		character = scope:reformer
		animation = personality_zealous
	}

	immediate = {
		play_music_cue = "mx_cue_faith_conversion"
		restore_tithanos_scripted_effect = yes
	}

	option = {
		name = thrace_decisions.0001.a
		every_player = {
			limit = {
				NOT = { this = root }
				faith.religion = faith:tithanism_faith.religion
			}
			trigger_event = thrace_decisions.0002 # Notification.
		}
	}
}

# Players notified.
thrace_decisions.0002 = {
	type = character_event
	title = thrace_decisions.0001.t
	desc = {
		first_valid = {
			# tithanism Reaction
			triggered_desc = {
				trigger = {
					root.faith = faith:tithanism_faith
				}
				desc = thrace_decisions.0002.desc.tithanism_faith
			}
			#Everyone Else
			triggered_desc = {
				trigger = {
					NOT = {
						root.faith = faith:tithanism_faith
					}

				}
				desc = thrace_decisions.0002.desc.other
			}
		}
	}
	theme = faith
	left_portrait = {
		character = scope:reformer
		animation = personality_zealous
	}

	immediate = {
		#Praise Be!
		if = {
			limit = {
				faith = { religion_tag = thracian_religion }
			}
			play_music_cue = "mx_cue_faith_conversion"
		}
		#Probably trouble?
		else = { play_music_cue = "mx_cue_combat_2" }
	}

	option = {
		name = thrace_decisions.0002.a
		trigger = {
			root.faith = faith:tithanism_faith
		}
	}
	option = {
		name = thrace_decisions.0002.b
		trigger = {
			NOT = {
				root.faith = faith:tithanism_faith
			}
		}
	}
}

##################################################
# Unite the Two Shores
##################################################

# I united the two shores
thrace_decisions.0003 = {
	type = character_event
	title = thrace_decisions.0003.t
	desc = thrace_decisions.0003.desc
	theme = realm
	left_portrait = {
		character = scope:two_shores_uniter
		animation = personality_honorable
	}

	immediate = {
		play_music_cue = "mx_cue_epic_sacral_moment"
		unite_the_two_shores_decision_effects = yes
	}

	option = {
		name = thrace_decisions.0003.a
	}
}

# Someone else united the two shores
thrace_decisions.0004 = {
	type = character_event
	title = thrace_decisions.0004.t
	desc = thrace_decisions.0004.desc
	theme = realm
	left_portrait = {
		character = scope:two_shores_uniter
		animation = personality_honorable
	}

	immediate = {
	}

	option = {
		name = thrace_decisions.0004.a
	}
}

##################################################
# Establish the Western Pontic League
##################################################

# I established the Western Pontic League
thrace_decisions.0005 = {
	type = character_event
	title = thrace_decisions.0005.t
	desc = thrace_decisions.0005.desc
	theme = realm
	left_portrait = {
		character = scope:k_euonymos_pontos_founder
		animation = personality_honorable
	}

	immediate = {
		play_music_cue = "mx_cue_epic_sacral_moment"
		found_western_pontic_league_decision_effects = yes
	}

	option = { # Hegemonic Sympolity
		name = thrace_decisions.0005.a

		change_government_form = { GOVERNMENT = hegemonic_sympolity_government }

		stress_impact = {
			generous = minor_stress_impact_gain
			content = minor_stress_impact_gain
			just = minor_stress_impact_gain
		}

		ai_chance = {
			base = 100	

			ai_value_modifier = {
				ai_greed = 0.5
				ai_boldness = 1
				ai_compassion = -0.5
			}
			modifier = { # Federal realms don't want this.
				add = -100
				government_has_flag = is_federal_government
			}
			modifier = { # Weight down for stress.
				add = -10
				has_trait = generous
			}
			modifier = { # Weight down for stress.
				add = -10
				has_trait = content
			}
			modifier = { # Weight down for stress.
				add = -10
				has_trait = just
			}
		}
	}

	option = { # Federal Sympolity
		name = thrace_decisions.0005.b

		change_government_form = { GOVERNMENT = federal_sympolity_government }

		stress_impact = {
			greedy = minor_stress_impact_gain
			arbitrary = minor_stress_impact_gain
			ambitious = minor_stress_impact_gain
		}

		ai_chance = {
			base = 100

			ai_value_modifier = {
				ai_boldness = -0.5
				ai_greed = -1
				ai_rationality = 0.5
				ai_compassion = 1
			}
			modifier = { # Hegemonies shouldn't want to give up their position so easily.
				add = -100
				OR = {
					government_has_flag = is_hegemonic_government
					government_has_flag = is_city_state_government
				}
			}
			modifier = { # Weight down for stress.
				add = -10
				has_trait = greedy
			}
			modifier = { # Weight down for stress.
				add = -10
				has_trait = arbitrary
			}
			modifier = { # Weight down for stress.
				add = -10
				has_trait = ambitious
			}
		}
	}
}

# Someone else established the Western Pontic League
thrace_decisions.0006 = {
	type = character_event
	title = thrace_decisions.0006.t
	desc = thrace_decisions.0006.desc
	theme = realm
	left_portrait = {
		character = scope:k_euonymos_pontos_founder
		animation = personality_honorable
	}

	immediate = {
	}

	option = {
		name = thrace_decisions.0006.a
	}
}

################################
# Revive the Odrysian Kingdom  #
################################

# I revived the Odrysian kingdom
thrace_decisions.0007 = {
	type = character_event
	title = thrace_decisions.0007.t
	desc = {
		desc = thrace_decisions.0007.desc
		first_valid = {
			triggered_desc = {
				trigger = {
					exists = scope:odrysian_pretender_1
					NOT = { exists = scope:odrysian_pretender_2 }
				}
				desc = thrace_decisions.0007.desc.one_pretender
			}
			triggered_desc = {
				trigger = {
					exists = scope:odrysian_pretender_1
					exists = scope:odrysian_pretender_2
				}
				desc = thrace_decisions.0007.desc.multiple_pretenders
			}
		}
		first_valid = {
			triggered_desc = {
				trigger = {
					scope:odrysian_restorer = { dynasty = dynasty:odrysiandyn001 }
					scope:odrysian_pretender_1 = { dynasty = dynasty:odrysiandyn001 }
				}
				desc = thrace_decisions.0007.desc.both_odrysian_dynasty
			}
			triggered_desc = {
				trigger = {
					NOR = {
						scope:odrysian_restorer = { dynasty = dynasty:odrysiandyn001 }
						scope:odrysian_pretender_1 = { dynasty = dynasty:odrysiandyn001 }
					}
				}
				desc = thrace_decisions.0007.desc.neither_odrysian_dynasty
			}
			triggered_desc = {
				trigger = {
					scope:odrysian_restorer = { dynasty = dynasty:odrysiandyn001 }
					NOT = {	scope:odrysian_pretender_1 = { dynasty = dynasty:odrysiandyn001 } }
				}
				desc = thrace_decisions.0007.desc.root_odrysian_dynasty
			}
			triggered_desc = {
				trigger = {
					NOT = {	scope:odrysian_restorer = { dynasty = dynasty:odrysiandyn001 } }
					scope:odrysian_pretender_1 = { dynasty = dynasty:odrysiandyn001 }
				}
				desc = thrace_decisions.0007.desc.them_odrysian_dynasty
			}
		}
		desc = thrace_decisions.0007.desc.end
	}
	theme = realm
	left_portrait = {
		character = scope:odrysian_restorer
		triggered_animation = {
			trigger = { exists = scope:odrysian_pretender_1 }
			animation = personality_vengeful
		}
		animation = personality_honorable
	}
	right_portrait = {
		trigger = { exists = scope:odrysian_pretender_1 }
		character = scope:odrysian_pretender_1
		animation = personality_callous
	}
	lower_left_portrait = {
		trigger = { exists = scope:odrysian_pretender_2 }
		character = scope:odrysian_pretender_2
	}
	lower_center_portrait = {
		trigger = { exists = scope:odrysian_pretender_3 }
		character = scope:odrysian_pretender_3
	}
	lower_right_portrait = {
		trigger = { exists = scope:odrysian_pretender_4 }
		character = scope:odrysian_pretender_4
	}

	immediate = {
		revive_odrysian_kingdom_decision_effects = yes

		# Find potential claimants
		title:e_thrace = {
			every_de_jure_county_holder = {
				limit = {
					NOT = { this = root }
					culture = {
						OR = {
							this = culture:odrysian
							any_parent_culture_or_above = { this = culture:odrysian }
						}
					}
					OR = {
						AND = {
							is_house_head = yes
							dynasty = dynasty:odrysiandyn001
						}
						AND = {
							is_independent_ruler = yes
							this.max_military_strength > {
								value = root.max_military_strength
								multiply = 0.8
							}
						}
					}
				}
				add_to_list = odrysian_pretender_candidates
			}
		}

		ordered_in_list = {
			list = odrysian_pretender_candidates
			order_by = max_military_strength
			max = 4

			revive_odrysian_kingdom_claimant_effect = yes

			if = {
				limit = {
					NOT = { exists = scope:odrysian_pretender_1 }
				}
				save_scope_as = odrysian_pretender_1
			}
			else_if = {
				limit = {
					NOT = { exists = scope:odrysian_pretender_2 }
				}
				save_scope_as = odrysian_pretender_2
			}
			else_if = {
				limit = {
					NOT = { exists = scope:odrysian_pretender_3 }
				}
				save_scope_as = odrysian_pretender_3
			}
			else_if = {
				limit = {
					NOT = { exists = scope:odrysian_pretender_4 }
				}
				save_scope_as = odrysian_pretender_4
			}
		}

		#Notify other players
		every_player = {
			limit = {
				NOT = { this = root }
				is_within_diplo_range = { CHARACTER = root }
			}
			trigger_event = thrace_decisions.0008
		}
	}

	option = {
		name = thrace_decisions.0007.a

	}
}

# Someone else revived the Odrysian kingdom
thrace_decisions.0008 = {
	type = character_event
	title = thrace_decisions.0008.t
	desc = {
		desc = thrace_decisions.0008.desc
		first_valid = {
			triggered_desc = {
				trigger = {
					scope:odrysian_restorer = { dynasty = dynasty:odrysiandyn001 }
				}
				desc = thrace_decisions.0008.desc.odrysian_dynasty
			}
			triggered_desc = {
				trigger = {
					NOT = {	scope:odrysian_restorer = { dynasty = dynasty:odrysiandyn001 } }
				}
				desc = thrace_decisions.0008.desc.not_odrysian_dynasty
			}
		}
		desc = thrace_decisions.0008.desc.b
		first_valid = {
			triggered_desc = {
				trigger = {
					has_character_flag = odrysian_pretender
				}
				desc = thrace_decisions.0008.desc.pretender
			}
			triggered_desc = {
				trigger = {
					exists = scope:odrysian_pretender_1
					NOT = { exists = scope:odrysian_pretender_2 }
				}
				desc = thrace_decisions.0008.desc.one_pretender
			}
			triggered_desc = {
				trigger = {
					exists = scope:odrysian_pretender_1
					exists = scope:odrysian_pretender_2
				}
				desc = thrace_decisions.0008.desc.multiple_pretenders
			}
			desc = thrace_decisions.0008.desc.end
		}
	}
	theme = realm
	left_portrait = {
		character = scope:odrysian_restorer
		triggered_animation = {
			trigger = { has_character_flag = odrysian_pretender }
			animation = personality_vengeful
		}
		animation = personality_honorable
	}
	right_portrait = {
		trigger = { exists = scope:odrysian_pretender_1 }
		character = scope:odrysian_pretender_1
		animation = personality_callous
	}
	lower_left_portrait = {
		trigger = { exists = scope:odrysian_pretender_2 }
		character = scope:odrysian_pretender_2
	}
	lower_center_portrait = {
		trigger = { exists = scope:odrysian_pretender_3 }
		character = scope:odrysian_pretender_3
	}
	lower_right_portrait = {
		trigger = { exists = scope:odrysian_pretender_4 }
		character = scope:odrysian_pretender_4
	}

	immediate = {
		if = {
			limit = { has_character_flag = odrysian_pretender }
			show_as_tooltip = { revive_odrysian_kingdom_claimant_effect = yes }
			play_music_cue = "mx_cue_combat_2" # cue boss music
		}
	}

	option = {
		name = thrace_decisions.0008.a
	}
}