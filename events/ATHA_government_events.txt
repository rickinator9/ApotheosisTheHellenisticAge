namespace = ATHA_government

scripted_trigger has_tribal_capital_trigger = {
	capital_province = { 
		has_holding_type = tribal_holding 
	}
}
scripted_trigger has_city_capital_trigger = {
	capital_province = { 
		has_holding_type = castle_holding 
	}
}
scripted_trigger can_preserve_feudal_government_trigger = {
	OR = {
		has_trait = intellect_good
		has_trait = shrewd
	}	
	has_trait = ambitious
	NOR = { 
		has_trait = craven
		has_trait = lazy 
	}
}
scripted_trigger has_aristocratic_culture_trigger = {
	OR = {
		has_culture = culture:cretan
		has_cultural_tradition = tradition_hereditary_hierarchy
	}
}
scripted_trigger independent_can_create_city_state_trigger = {
	NOT = {	highest_held_title_tier > tier_duchy }
	is_independent_ruler = yes	
	has_government = feudal_government
	has_city_capital_trigger = yes
}

# Event that fires for newly independent bureaucratic rulers
ATHA_government.0001 = {
	type = character_event
	title = ATHA_government.0001.t
	desc = {
		desc = ATHA_government.0001.desc
		triggered_desc = {
			trigger = {
				has_tribal_capital_trigger = no
				NOT = {	highest_held_title_tier > tier_county }
			}
			desc = ATHA_government.0001.desc_count
		}
		triggered_desc = {
			trigger = {
				has_tribal_capital_trigger = no
				highest_held_title_tier > tier_county
			}
			desc = ATHA_government.0001.desc_duke
		}
	}
	theme = realm
	left_portrait = root

	trigger = {
		government_has_flag = is_bureaucracy_government
		NOT = { has_government = feudal_government }
		is_independent_ruler = yes	
	}
	immediate = {
		if = {
			limit = { 
				has_tribal_capital_trigger = yes
			}
			change_government_form = { GOVERNMENT = clan_government }
		}
		else = {
			change_government_form = { GOVERNMENT = feudal_government }
		}
	}

	option = {
		name = {
			trigger = { 
				has_tribal_capital_trigger = yes
			}
			text = ATHA_government.0001.a
		}
		name = {
			trigger = { 
				has_tribal_capital_trigger = no
				NOT = {	highest_held_title_tier > tier_county }
			}	
			text = ATHA_government.0001.a_count
		}
		name = {
			trigger = { 
				has_tribal_capital_trigger = no
				highest_held_title_tier > tier_county
			}	
			text = ATHA_government.0001.a_duke
		}
		if = {
			limit = { has_tribal_capital_trigger = no }
			custom_tooltip = ATHA_government.0001.a.tt
		}
	}
	option = { # decide to become city-state straight away
		name = ATHA_government.0001.b

		trigger = {
			NOT = {	highest_held_title_tier > tier_duchy }
		}
		custom_tooltip = ATHA_government.city_state_select.tt
		trigger_event = ATHA_government.0003

		ai_chance = {
			base = 0
		}
	}
}

# Keep track of heirs of independent dynastic count
ATHA_government.00011 = {
	type = empty
	hidden = yes

	# Only trigger this for rulers that don't meet the conditions for preserving dynastic government
	trigger = {
		is_landed = yes

		NOT = {	highest_held_title_tier > tier_county }
		is_independent_ruler = yes	
		has_government = feudal_government
		has_city_capital_trigger = yes
	}

	immediate = {
		every_heir = {
			set_variable = {
				name = highest_tier_before_inheritance
				value = highest_held_title_tier
			}
		}
	}
}

# Independent dynastic count is forced to adopt City-State government
ATHA_government.0002 = {
	type = character_event
	title = ATHA_government.0002.t
	desc = {
		desc = ATHA_government.0002.desc
		first_valid = {
			triggered_desc = {
				trigger = { can_preserve_feudal_government_trigger = yes }
				desc = ATHA_government.0002.desc_intelligent
			}
			desc = ATHA_government.0002.desc_b
		}
	}
	theme = realm
	left_portrait = {
		character = root
		animation = stress
	}

	trigger = { 
		NOT = {	highest_held_title_tier > tier_county }
		is_independent_ruler = yes	
		has_government = feudal_government
		has_city_capital_trigger = yes

		scope:title = {
			tier > var:highest_tier_before_inheritance
		}
	}

	option = { # Tyranny
		name = ATHA_government.0002.a

		trigger = {
			NOT = { has_trait = deceitful }
			can_preserve_feudal_government_trigger = no
		}

		add_prestige = medium_prestige_gain
		add_piety = medium_piety_loss
		add_dread = medium_dread_gain

		implement_franchise_tyranny = yes

		ai_chance = {
			base = 100

			ai_value_modifier = {
				ai_greed = 2
				ai_vengefulness = 1
				ai_boldness = 1
				ai_rationality = -0.5
				ai_compassion = -1
			}
		}
	}
	option = { # Populist Tyranny
		name = ATHA_government.0002.a_deceitful
		flavor = ATHA_government.0003.a_deceitful.flavor

		trigger = {
			has_trait = deceitful
			can_preserve_feudal_government_trigger = no
		}
		trait = deceitful

		add_prestige = medium_prestige_gain
		add_piety = minor_piety_loss

		implement_franchise_tyranny_populist = yes

		ai_chance = {
			base = 200	

			ai_value_modifier = {
				ai_greed = 2
				ai_vengefulness = 1
				ai_boldness = 1
				ai_honor = -2
				ai_compassion = -0.5
			}
		}
	}
	option = { # Aristocracy
		name = ATHA_government.0002.b

		trigger = {
			can_preserve_feudal_government_trigger = no
		}

		add_prestige = minor_prestige_gain
		add_piety = minor_piety_loss

		implement_franchise_aristocracy = yes

		ai_chance = {
			base = 10 # Aristocracies should be relatively rare	

			modifier = {
				has_aristocratic_culture_trigger = yes
				add = 90
			}

			ai_value_modifier = {
				ai_greed = 0.5
				ai_honor = 0.5
				ai_boldness = 0.5
				ai_compassion = -0.5
			}
		}
	}
	option = { # Oligarchy
		name = ATHA_government.0002.c

		trigger = {
			can_preserve_feudal_government_trigger = no
		}

		add_prestige = minor_prestige_loss
		add_piety = minor_piety_gain

		implement_franchise_oligarchy = yes

		ai_chance = {
			base = 100		

			ai_value_modifier = {
				ai_honor = 0.5
				ai_rationality = 0.5
			}
		}
	}
	option = { # Democracy
		name = ATHA_government.0002.d

		trigger = {
			can_preserve_feudal_government_trigger = no
		}

		add_prestige = medium_prestige_loss
		add_piety = medium_piety_gain

		implement_franchise_democracy = yes

		ai_chance = {
			base = 100			

			ai_value_modifier = {
				ai_greed = -2
				ai_vengefulness = -1
				ai_boldness = -1
				ai_compassion = 1
			}
		}
	}
	option = { # Let the people decide
		name = ATHA_government.0002.e
		custom_tooltip = ATHA_government.0002.e.tt

		trigger = {
			can_preserve_feudal_government_trigger = no
		}

		implement_franchise_desired = yes

		ai_chance = {
			base = 0
		}
	}
	option = { # Can preserve feudal with intellect & ambition
		name = ATHA_government.0002.intelligent_a
		custom_tooltip = ATHA_government.0002.intelligent_a.tt

		trigger = {
			can_preserve_feudal_government_trigger = yes
		}
		add_internal_flag = special

		add_prestige = medium_prestige_gain

		ai_chance = {
			base = 1000
		}
	}
	option = { # Can preserve feudal, but decide to become city-state instead
		name = ATHA_government.0002.intelligent_b

		trigger = {
			can_preserve_feudal_government_trigger = yes
		}
		custom_tooltip = ATHA_government.city_state_select.tt
		trigger_event = ATHA_government.0003

		ai_chance = {
			base = 0
		}
	}
}

# Ruler decides on City-State government to adopt
ATHA_government.0003 = {
	type = character_event
	title = ATHA_government.0003.t
	desc = {
		first_valid = {
			triggered_desc = {
				trigger = { independent_can_create_city_state_trigger = yes }
				desc = ATHA_government.0003.desc
			}
			desc = ATHA_government.0003.desc_vassal
		}
	}
	theme = realm
	left_portrait = {
		character = root
		animation = personality_rational
	}
	right_portrait = {
		trigger = { independent_can_create_city_state_trigger = no }
		character = root.liege
	}
	trigger = { 
		OR = {
			independent_can_create_city_state_trigger = yes
			has_character_flag = vassal_can_create_city_state	
		}
	}

	option = { # Tyranny
		name = ATHA_government.0003.a

		trigger = {
			NOT = { has_trait = deceitful }
		}

		add_prestige = medium_prestige_gain
		add_piety = medium_piety_loss
		add_dread = medium_dread_gain

		implement_franchise_tyranny = yes

		remove_character_flag = vassal_can_create_city_state

		ai_chance = {
			base = 100

			ai_value_modifier = {
				ai_greed = 2
				ai_vengefulness = 1
				ai_boldness = 1
				ai_rationality = -0.5
				ai_compassion = -1
			}
		}
	}
	option = { # Populist Tyranny
		name = ATHA_government.0003.a_deceitful
		flavor = ATHA_government.0003.a_deceitful.flavor

		trigger = {	has_trait = deceitful }
		trait = deceitful

		add_prestige = medium_prestige_gain
		add_piety = minor_piety_loss

		implement_franchise_tyranny_populist = yes

		remove_character_flag = vassal_can_create_city_state

		ai_chance = {
			base = 200	

			ai_value_modifier = {
				ai_greed = 2
				ai_vengefulness = 1
				ai_boldness = 1
				ai_honor = -2
				ai_compassion = -0.5
			}
		}
	}
	option = { # Aristocracy
		name = ATHA_government.0003.b

		add_prestige = minor_prestige_gain
		add_piety = minor_piety_loss

		implement_franchise_aristocracy = yes

		remove_character_flag = vassal_can_create_city_state	

		ai_chance = {
			base = 10 # Aristocracies should be relatively rare	

			modifier = {
				has_aristocratic_culture_trigger = yes
				add = 90
			}

			ai_value_modifier = {
				ai_greed = 0.5
				ai_honor = 0.5
				ai_boldness = 0.5
				ai_compassion = -0.5
			}
		}
	}
	option = { # Oligarchy
		name = ATHA_government.0003.c

		add_prestige = minor_prestige_loss
		add_piety = minor_piety_gain

		implement_franchise_oligarchy = yes

		remove_character_flag = vassal_can_create_city_state


		ai_chance = {
			base = 100		

			ai_value_modifier = {
				ai_honor = 0.5
				ai_rationality = 0.5
			}
		}
	}
	option = { # Democracy
		name = ATHA_government.0003.d

		add_prestige = medium_prestige_loss
		add_piety = medium_piety_gain

		implement_franchise_democracy = yes

		remove_character_flag = vassal_can_create_city_state


		ai_chance = {
			base = 100			

			ai_value_modifier = {
				ai_greed = -2
				ai_vengefulness = -1
				ai_boldness = -1
				ai_compassion = 1
			}
		}
	}
	option = { # Let the people decide
		name = ATHA_government.0003.e
		custom_tooltip = ATHA_government.0003.e.tt

		implement_franchise_desired = yes

		ai_chance = {
			base = 0
		}
	}
	option = { # Nevermind
		name = ATHA_government.0003.f
		custom_tooltip = ATHA_government.0003.f.tt

		trigger = {
			NOT = {	has_character_flag = vassal_can_create_city_state }
		}
		ai_chance = {
			base = 0
		}
	}
}

# Liege decides on city-state government for their vassal
ATHA_government.0004 = {
	type = character_event
	title = ATHA_government.0004.t
	desc = ATHA_government.0004.desc
	theme = realm
	left_portrait = {
		character = root
		animation = personality_rational
	}
	right_portrait = scope:dependent_city_state_vassal

	option = { # Tyranny
		name = ATHA_government.0004.a

		trigger = {
			NOT = { has_trait = deceitful }
		}

		add_prestige = medium_prestige_gain
		add_piety = medium_piety_loss
		add_dread = medium_dread_gain

		scope:dependent_city_state_vassal = { 
			implement_franchise_tyranny = yes
			add_character_flag = liege_imposed_tyranny
			trigger_event = ATHA_government.0005 # Vassal is notified about newly imposed franchise
		}	

		stress_impact = {
			generous = medium_stress_impact_gain
			craven = medium_stress_impact_gain
			just = medium_stress_impact_gain
		}

		ai_chance = {
			base = 100

			ai_value_modifier = {
				ai_greed = 2
				ai_vengefulness = 1
				ai_boldness = 1
				ai_rationality = -0.5
				ai_compassion = -1
			}
		}
	}
	option = { # Populist Tyranny
		name = ATHA_government.0004.a_deceitful
		flavor = ATHA_government.0004.a_deceitful.flavor

		trigger = {	has_trait = deceitful }
		trait = deceitful

		add_prestige = medium_prestige_gain
		add_piety = minor_piety_loss

		scope:dependent_city_state_vassal = { 
			implement_franchise_tyranny_populist = yes
			add_character_flag = liege_imposed_tyranny_populist
			trigger_event = ATHA_government.0005 # Vassal is notified about newly imposed franchise
		}

		stress_impact = {
			generous = medium_stress_impact_gain
			just = medium_stress_impact_gain
		}

		ai_chance = {
			base = 200	

			ai_value_modifier = {
				ai_greed = 2
				ai_vengefulness = 1
				ai_boldness = 1
				ai_honor = -2
				ai_compassion = -0.5
			}
		}
	}
	option = { # Aristocracy
		name = ATHA_government.0004.b

		add_prestige = minor_prestige_gain
		add_piety = minor_piety_loss

		scope:dependent_city_state_vassal = { 
			implement_franchise_aristocracy = yes
			add_character_flag = liege_imposed_aristocracy
			trigger_event = ATHA_government.0005 # Vassal is notified about newly imposed franchise
		}	

		stress_impact = {
			generous = minor_stress_impact_gain
			craven = minor_stress_impact_gain
			stubborn = minor_stress_impact_gain
		}

		ai_chance = {
			base = 10 # Aristocracies should be relatively rare	

			modifier = {
				has_aristocratic_culture_trigger = yes
				add = 90
			}

			ai_value_modifier = {
				ai_greed = 0.5
				ai_honor = 0.5
				ai_boldness = 0.5
				ai_compassion = -0.5
			}
		}
	}
	option = { # Oligarchy
		name = ATHA_government.0004.c

		add_prestige = minor_prestige_loss
		add_piety = minor_piety_gain

		scope:dependent_city_state_vassal = { 
			implement_franchise_oligarchy = yes
			add_character_flag = liege_imposed_oligarchy
			trigger_event = ATHA_government.0005 # Vassal is notified about newly imposed franchise
		}	

		stress_impact = {
			greedy = minor_stress_impact_gain
			arrogant = minor_stress_impact_gain
			stubborn = minor_stress_impact_gain
			ambitious = minor_stress_impact_gain
		}

		ai_chance = {
			base = 100		

			ai_value_modifier = {
				ai_honor = 0.5
				ai_rationality = 0.5
			}
		}
	}
	option = { # Democracy
		name = ATHA_government.0004.d

		add_prestige = medium_prestige_loss
		add_piety = medium_piety_gain

		scope:dependent_city_state_vassal = { 
			implement_franchise_democracy = yes
			add_character_flag = liege_imposed_democracy
			trigger_event = ATHA_government.0005 # Vassal is notified about newly imposed franchise
		}	

		stress_impact = {
			greedy = medium_stress_impact_gain
			arrogant = medium_stress_impact_gain
			stubborn = medium_stress_impact_gain
			ambitious = medium_stress_impact_gain
		}

		ai_chance = {
			base = 100			

			ai_value_modifier = {
				ai_greed = -2
				ai_vengefulness = -1
				ai_boldness = -1
				ai_compassion = 1
			}
		}
	}
	option = { # Let the people decide
		name = ATHA_government.0004.e
		custom_tooltip = ATHA_government.0004.e.tt

		trigger = {
			scope:dependent_city_state_vassal = { 
				scope:autonomous_will_become_dependent = no
			}	
		}

		scope:dependent_city_state_vassal = { 
			implement_franchise_desired = yes
			trigger_event = ATHA_government.0005 # Vassal is notified about newly imposed franchise
		}

		ai_chance = {
			base = 0
		}
	}
	option = { # Let the vassal decide
		name = ATHA_government.0004.f
		custom_tooltip = ATHA_government.0004.f.tt

		trigger = {
			scope:dependent_city_state_vassal = { 
				scope:autonomous_will_become_dependent = no
			}	
		}

		scope:dependent_city_state_vassal = { 
			add_opinion = {
				target = ROOT
				modifier = grateful_opinion
				opinion = 10
			}
			add_character_flag = vassal_can_create_city_state
			trigger_event = {
				id = ATHA_government.0003 # Vassal decides what city-state government to adopt
				days = { 5 7 }
			}
		}

		ai_chance = {
			base = 0
		}
	}
	option = { # Keep the existing constitution
		name = ATHA_government.0004.g
		custom_tooltip = ATHA_government.0004.g.tt

		trigger = {
			scope:dependent_city_state_vassal = { 
				scope:autonomous_will_become_dependent = yes
			}	
		}

		ai_chance = {
			base = 0
		}
	}
}

# Vassal is notified about newly imposed franchise
ATHA_government.0005 = {
	type = character_event
	title = ATHA_government.0005.t
	desc = {
		desc = ATHA_government.0005.desc
		first_valid = {
			triggered_desc = {
				trigger = { scope:autonomous_will_become_dependent = no }
				desc = ATHA_government.0005_desc_new_city_state
			}
			desc = ATHA_government.0005_desc_existing_city_state
		}
		desc = ATHA_government.0005.desc_b
		first_valid = {
			triggered_desc = {
				trigger = { has_character_flag = liege_imposed_tyranny }
				desc = ATHA_government.0005.desc_tyranny
			}
			triggered_desc = {
				trigger = { has_character_flag = liege_imposed_tyranny_populist }
				desc = ATHA_government.0005.desc_tyranny_populist
			}
			triggered_desc = {
				trigger = { has_character_flag = liege_imposed_aristocracy }
				desc = ATHA_government.0005.desc_aristocracy
			}
			triggered_desc = {
				trigger = { has_character_flag = liege_imposed_oligarchy }
				desc = ATHA_government.0005.desc_oligarchy
			}
			triggered_desc = {
				trigger = { has_character_flag = liege_imposed_democracy }
				desc = ATHA_government.0005.desc_democracy
			}
			desc = ATHA_government.0005.desc_franchise
		}
	}
	theme = realm
	left_portrait = root
	right_portrait = {
		character = liege
		animation = personality_rational
	}
	option = {
		name = ATHA_government.0005.a

		if = {
			limit = { has_character_flag = liege_imposed_tyranny }
			show_as_tooltip = { implement_franchise_tyranny = yes }
			remove_character_flag = liege_imposed_tyranny
		}
		else_if = {
			limit = { has_character_flag = liege_imposed_tyranny_populist }
			show_as_tooltip = { implement_franchise_tyranny_populist = yes }
			remove_character_flag = liege_imposed_tyranny_populist
		}
		else_if = {
			limit = { has_character_flag = liege_imposed_aristocracy }
			show_as_tooltip = { implement_franchise_aristocracy = yes }
			remove_character_flag = liege_imposed_aristocracy
		}
		else_if = {
			limit = { has_character_flag = liege_imposed_oligarchy }
			show_as_tooltip = { implement_franchise_oligarchy = yes }
			remove_character_flag = liege_imposed_oligarchy
		}
		else_if = {
			limit = { has_character_flag = liege_imposed_democracy }
			show_as_tooltip = { implement_franchise_democracy = yes }
			remove_character_flag = liege_imposed_democracy
		}
		else = {
			custom_tooltip = ATHA_government.0004.e.tt
			show_as_tooltip = { implement_franchise_desired = yes }
		}
	}
}

# Newly autonomous ruler decides on City-State government to adopt
ATHA_government.0006 = {
	type = character_event
	title = ATHA_government.0006.t
	desc = ATHA_government.0006.desc
	theme = realm
	left_portrait = {
		character = root
		animation = personality_rational
	}
	right_portrait = root.liege

	option = { # Tyranny
		name = ATHA_government.0006.a

		trigger = {
			NOT = { has_trait = deceitful }
		}

		add_prestige = medium_prestige_gain
		add_piety = medium_piety_loss
		add_dread = medium_dread_gain

		implement_franchise_tyranny = yes

		remove_character_flag = vassal_can_create_city_state	

		ai_chance = {
			base = 100

			ai_value_modifier = {
				ai_greed = 2
				ai_vengefulness = 1
				ai_boldness = 1
				ai_rationality = -0.5
				ai_compassion = -1
			}
		}
	}
	option = { # Populist Tyranny
		name = ATHA_government.0006.b
		flavor = ATHA_government.0006.b.flavor

		trigger = {	has_trait = deceitful }
		trait = deceitful

		add_prestige = medium_prestige_gain
		add_piety = minor_piety_loss

		implement_franchise_tyranny_populist = yes

		remove_character_flag = vassal_can_create_city_state

		ai_chance = {
			base = 200	

			ai_value_modifier = {
				ai_greed = 2
				ai_vengefulness = 1
				ai_boldness = 1
				ai_honor = -2
				ai_compassion = -0.5
			}
		}
	}
	option = { # Aristocracy
		name = ATHA_government.0006.c

		add_prestige = minor_prestige_gain
		add_piety = minor_piety_loss

		implement_franchise_aristocracy = yes

		remove_character_flag = vassal_can_create_city_state

		ai_chance = {
			base = 10 # Aristocracies should be relatively rare	

			modifier = {
				has_aristocratic_culture_trigger = yes
				add = 90
			}

			ai_value_modifier = {
				ai_greed = 0.5
				ai_honor = 0.5
				ai_boldness = 0.5
				ai_compassion = -0.5
			}
		}
	}
	option = { # Oligarchy
		name = ATHA_government.0006.d

		add_prestige = minor_prestige_loss
		add_piety = minor_piety_gain	

		implement_franchise_oligarchy = yes

		remove_character_flag = vassal_can_create_city_state

		ai_chance = {
			base = 100

			ai_value_modifier = {
				ai_honor = 0.5
				ai_rationality = 0.5
			}
		}
	}
	option = { # Democracy
		name = ATHA_government.0006.e

		add_prestige = medium_prestige_loss
		add_piety = medium_piety_gain

		implement_franchise_democracy = yes

		remove_character_flag = vassal_can_create_city_state

		ai_chance = {
			base = 100

			ai_value_modifier = {
				ai_greed = -2
				ai_vengefulness = -1
				ai_boldness = -1
				ai_compassion = 1
			}
		}
	}
	option = { # Let the people decide
		name = ATHA_government.0006.f
		custom_tooltip = ATHA_government.0006.f.tt

		implement_franchise_desired = yes

		ai_chance = {
			base = 0
		}
	}
}

# Newly autonomous ruler decides on coalition government to adopt
ATHA_government.0007 = {
	type = character_event
	title = ATHA_government.0007.t
	desc = ATHA_government.0007.desc
	theme = realm
	left_portrait = {
		character = root
		animation = personality_rational
	}
	right_portrait = root.liege

	option = { # Federal Alliance
		name = ATHA_government.0007.a

		change_government_form = { GOVERNMENT = federal_alliance_government }	
		add_realm_law_skip_effects = crown_authority_0

		ai_chance = { # TODO
			base = 100
		}
	}
	option = { # Federal Sympolity
		name = ATHA_government.0007.b

		trigger = {
			NOT = { vassal_contract_has_flag = category_enforced_centralisation }
			culture = { has_innovation = innovation_classical_diplomatic_missions }
		}

		change_government_form = { GOVERNMENT = federal_sympolity_government }
		add_realm_law_skip_effects = crown_authority_1

		ai_chance = { # TODO
			base = 100
		}
	}
	option = { # Federal League
		name = ATHA_government.0007.c

		trigger = {
			NOT = { vassal_contract_has_flag = category_enforced_centralisation }
			culture = { has_innovation = innovation_classical_diplomatic_missions }
		}

		change_government_form = { GOVERNMENT = federal_league_government }
		add_realm_law_skip_effects = crown_authority_2

		ai_chance = { # TODO
			base = 100
		}
	}
	option = { # Amphictyony
		name = ATHA_government.0007.d

		change_government_form = { GOVERNMENT = amphictyony_government }
		add_realm_law_skip_effects = crown_authority_0

		ai_chance = { # TODO
			base = 100
		}
	}
	option = { # Hegemonic Alliance
		name = ATHA_government.0007.e

		trigger = {
			NOT = { vassal_contract_has_flag = category_enforced_federalism }
		}

		change_government_form = { GOVERNMENT = hegemonic_alliance_government }
		add_realm_law_skip_effects = crown_authority_0

		ai_chance = { # TODO
			base = 100
		}
	}
	option = { # Hegemonic Sympolity
		name = ATHA_government.0007.f

		trigger = {
			NOR = { 
				vassal_contract_has_flag = category_enforced_federalism 
				vassal_contract_has_flag = category_enforced_centralisation 
			}
			culture = { has_innovation = innovation_classical_diplomatic_missions }
		}

		change_government_form = { GOVERNMENT = hegemonic_sympolity_government }
		add_realm_law_skip_effects = crown_authority_1

		ai_chance = { # TODO
			base = 100
		}
	}
	option = { # Hegemonic League
		name = ATHA_government.0007.g

		trigger = {
			NOR = { 
				vassal_contract_has_flag = category_enforced_federalism 
				vassal_contract_has_flag = category_enforced_centralisation 
			}
			culture = { has_innovation = innovation_classical_diplomatic_missions }
		}

		change_government_form = { GOVERNMENT = hegemonic_league_government }
		add_realm_law_skip_effects = crown_authority_2

		ai_chance = { # TODO
			base = 100
		}
	}
}

# Liege decides on coalition government for newly dependent vassal
ATHA_government.0008 = {
	type = character_event
	title = ATHA_government.0008.t
	desc = ATHA_government.0008.desc
	theme = realm
	left_portrait = {
		character = root
		animation = personality_rational
	}
	right_portrait = scope:dependent_coalition_vassal

	immediate = {
		scope:dependent_coalition_vassal.capital_province.county = { save_scope_as = vassal_capital }
	}

	option = { # Federal Alliance
		name = {
			trigger = { 
				scope:dependent_coalition_vassal = {
					NOT = { vassal_contract_has_flag = category_enforced_federalism }
				}
			}
			text = ATHA_government.0008.a
		}
		name = {
			trigger = { 
				scope:dependent_coalition_vassal = {
					vassal_contract_has_flag = category_enforced_federalism
				}
			}	
			text = ATHA_government.0008.a_federal
		}

		scope:dependent_coalition_vassal = {
			if = {
				limit = { NOT = { has_government = federal_alliance_government } }
				change_government_form = { GOVERNMENT = federal_alliance_government }
			}
			if = {
				limit = { NOT = { has_realm_law = crown_authority_0 } }
				add_realm_law_skip_effects = crown_authority_0
			}
			if = {
				limit = { NOT = { vassal_contract_has_flag = has_enforced_federalism_federal } }
				vassal_contract_set_obligation_level = {
					type = enforced_federalism 
					level = obligation_level_enforced_federalism_federal
				}
			}
			if = {
				limit = { NOT = { vassal_contract_has_flag = has_enforced_centralisation_low } }
				vassal_contract_set_obligation_level = {
					type = enforced_centralisation
					level = obligation_level_enforced_centralisation_low
				}
			}
		}

		ai_chance = { # TODO
			base = 100
		}
	}
	option = { # Hegemonic Alliance
		name = ATHA_government.0008.b

		trigger = {
			scope:dependent_coalition_vassal = {
				NOT = { vassal_contract_has_flag = category_enforced_federalism }
			}
		}

		scope:dependent_coalition_vassal = {
			if = {
				limit = { NOT = { has_government = hegemonic_alliance_government } }
				change_government_form = { GOVERNMENT = hegemonic_alliance_government }
			}
			if = {
				limit = { NOT = { has_realm_law = crown_authority_0 } }
				add_realm_law_skip_effects = crown_authority_0
			}
			vassal_contract_set_obligation_level = {
				type = enforced_federalism 
				level = obligation_level_enforced_federalism_hegemonic
			}
			if = {
				limit = { NOT = { vassal_contract_has_flag = has_enforced_centralisation_low } }
				vassal_contract_set_obligation_level = {
					type = enforced_centralisation
					level = obligation_level_enforced_centralisation_low
				}
			}
		}

		ai_chance = { # TODO
			base = 100
		}
	}
	option = { # Federal Sympolity
		name = {
			trigger = { 
				scope:dependent_coalition_vassal = {
					NOT = { vassal_contract_has_flag = category_enforced_federalism }
				}
			}
			text = ATHA_government.0008.c
		}
		name = {
			trigger = { 
				scope:dependent_coalition_vassal = {
					vassal_contract_has_flag = category_enforced_federalism
				}
			}	
			text = ATHA_government.0008.c_federal
		}

		trigger = {
			scope:dependent_coalition_vassal = {
				NOT = { vassal_contract_has_flag = category_enforced_centralisation }
			}
		}

		scope:dependent_coalition_vassal = {
			if = {
				limit = { NOT = { has_government = federal_sympolity_government } }
				change_government_form = { GOVERNMENT = federal_sympolity_government }
			}
			if = {
				limit = { NOT = { has_realm_law = crown_authority_1 } }
				add_realm_law_skip_effects = crown_authority_1
			}
			if = {
				limit = { NOT = { vassal_contract_has_flag = has_enforced_federalism_federal } }
				vassal_contract_set_obligation_level = {
					type = enforced_federalism 
					level = obligation_level_enforced_federalism_federal
				}
			}
			vassal_contract_set_obligation_level = {
				type = enforced_centralisation
				level = obligation_level_enforced_centralisation_medium
			}
		}

		ai_chance = { # TODO
			base = 100
		}
	}
	option = { # Hegemonic Sympolity
		name = ATHA_government.0008.d

		trigger = {
			scope:dependent_coalition_vassal = {
				NOR = { 
					vassal_contract_has_flag = category_enforced_federalism 
					vassal_contract_has_flag = category_enforced_centralisation 
				}
			}
		}

		scope:dependent_coalition_vassal = {
			if = {
				limit = { NOT = { has_government = hegemonic_sympolity_government } }
				change_government_form = { GOVERNMENT = hegemonic_sympolity_government }
			}
			if = {
				limit = { NOT = { has_realm_law = crown_authority_1 } }
				add_realm_law_skip_effects = crown_authority_1
			}
			vassal_contract_set_obligation_level = {
				type = enforced_federalism 
				level = obligation_level_enforced_federalism_hegemonic
			}
			vassal_contract_set_obligation_level = {
				type = enforced_centralisation
				level = obligation_level_enforced_centralisation_medium
			}
		}

		ai_chance = { # TODO
			base = 100
		}
	}
	option = { # Federal League
		name = {
			trigger = { 
				scope:dependent_coalition_vassal = {
					NOT = { vassal_contract_has_flag = category_enforced_federalism }
				}
			}
			text = ATHA_government.0008.e
		}
		name = {
			trigger = { 
				scope:dependent_coalition_vassal = {
					vassal_contract_has_flag = category_enforced_federalism
				}
			}	
			text = ATHA_government.0008.e_federal
		}

		trigger = {
			scope:dependent_coalition_vassal = {
				NOT = { vassal_contract_has_flag = category_enforced_centralisation }
			}
		}

		scope:dependent_coalition_vassal = {
			if = {
				limit = { NOT = { has_government = federal_league_government } }
				change_government_form = { GOVERNMENT = federal_league_government }
			}
			if = {
				limit = { NOT = { has_realm_law = crown_authority_2 } }
				add_realm_law_skip_effects = crown_authority_2
			}
			if = {
				limit = { NOT = { vassal_contract_has_flag = has_enforced_federalism_federal } }
				vassal_contract_set_obligation_level = {
					type = enforced_federalism 
					level = obligation_level_enforced_federalism_federal
				}
			}
			vassal_contract_set_obligation_level = {
				type = enforced_centralisation
				level = obligation_level_enforced_centralisation_high
			}
		}

		ai_chance = { # TODO
			base = 100
		}
	}
	option = { # Hegemonic League
		name = ATHA_government.0008.f

		trigger = {
			scope:dependent_coalition_vassal = {
				NOR = { 
					vassal_contract_has_flag = category_enforced_federalism 
					vassal_contract_has_flag = category_enforced_centralisation 
				}
			}
		}

		scope:dependent_coalition_vassal = {
			if = {
				limit = { NOT = { has_government = hegemonic_league_government } }
				change_government_form = { GOVERNMENT = hegemonic_league_government }
			}
			if = {
				limit = { NOT = { has_realm_law = crown_authority_2 } }
				add_realm_law_skip_effects = crown_authority_2
			}
			vassal_contract_set_obligation_level = {
				type = enforced_federalism 
				level = obligation_level_enforced_federalism_hegemonic
			}
			vassal_contract_set_obligation_level = {
				type = enforced_centralisation
				level = obligation_level_enforced_centralisation_high
			}
		}

		ai_chance = { # TODO
			base = 100
		}
	}
	option = { # Amphictyony
		name = ATHA_government.0008.g

		scope:dependent_coalition_vassal = {
			if = {
				limit = { NOT = { has_government = amphictyony_government } }
				change_government_form = { GOVERNMENT = amphictyony_government }
			}
			if = {
				limit = { NOT = { has_realm_law = crown_authority_0 } }
				add_realm_law_skip_effects = crown_authority_0
			}
			if = {
				limit = { NOT = { vassal_contract_has_flag = has_enforced_federalism_federal } }
				vassal_contract_set_obligation_level = {
					type = enforced_federalism 
					level = obligation_level_enforced_federalism_federal
				}
			}
			if = {
				limit = { NOT = { vassal_contract_has_flag = has_enforced_centralisation_low } }
				vassal_contract_set_obligation_level = {
					type = enforced_centralisation
					level = obligation_level_enforced_centralisation_low
				}
			}
		}

		ai_chance = { # TODO
			base = 100
		}
	}
	option = { # Let the vassal decide
		name = ATHA_government.0008.h
		custom_tooltip = ATHA_government.0008.h.tt

		trigger = {
			scope:dependent_coalition_vassal = { 
				scope:autonomous_will_become_dependent = no
			}	
		}

		scope:dependent_coalition_vassal = { 
			add_opinion = {
				target = ROOT
				modifier = grateful_opinion
				opinion = 10
			}
			trigger_event = {
				id = ATHA_government.0007 # Vassal decides what coalition government to adopt
				days = { 5 7 }
			}
		}

		ai_chance = {
			base = 0
		}
	}
	option = { # Keep the existing coalition
		name = ATHA_government.0008.i
		custom_tooltip = ATHA_government.0008.i.tt

		trigger = {
			scope:dependent_coalition_vassal = { 
				scope:autonomous_will_become_dependent = yes
			}	
		}

		ai_chance = {
			base = 0
		}
	}
}

# A elective city state becomes a tyranny.
ATHA_government.0009 = {
	type = character_event
	title = {
		first_valid = {
			triggered_desc = {
				trigger = { exists = scope:former_aristocracy }
				desc = ATHA_government.0009.t_aristocracy
			}
			triggered_desc = {
				trigger = { exists = scope:former_oligarchy }
				desc = ATHA_government.0009.t_oligarchy
			}
			desc = ATHA_government.0009.t_democracy
		}
	}
	desc = {
		first_valid = {
			triggered_desc = {
				trigger = {
					exists = scope:former_democracy
					root = scope:new_tyrant
				}
				desc = ATHA_government.0009.desc_democratic_root
			}
			triggered_desc = {
				trigger = {
					exists = scope:former_oligarchy
					root = scope:new_tyrant
				}
				desc = ATHA_government.0009.desc_oligarchic_root
			}
			triggered_desc = {
				trigger = {
					exists = scope:former_aristocracy
					root = scope:new_tyrant
				}
				desc = ATHA_government.0009.desc_aristocratic_root
			}
			triggered_desc = {
				trigger = { exists = scope:former_democracy }
				desc = ATHA_government.0009.desc_democratic_foreign
			}
			triggered_desc = {
				trigger = { exists = scope:former_oligarchy }
				desc = ATHA_government.0009.desc_oligarchic_foreign
			}
			triggered_desc = {
				trigger = { exists = scope:former_aristocracy }
				desc = ATHA_government.0009.desc_aristocratic_foreign
			}
		}
		triggered_desc = {
			trigger = { root = scope:new_tyrant }
			desc = ATHA_government.0009.desc_outro_fp
		}
	}
	theme = realm
	left_portrait = {
		character = scope:new_tyrant
		animation = personality_callous
	}

	option = {
		name = {
			trigger = { root = scope:new_tyrant }
			text = ATHA_government.0009.a_root
		}
		name = {
			trigger = {
				NOT = { root = scope:new_tyrant }
				OR = {
					has_government = feudal_government
					has_government = clan_government
					has_government = tribal_government
					has_government = city_state_tyrannical_government
					has_government = city_state_spartan_government
				}
			}
			text = ATHA_government.0009.a_dynastic
		}
		name = {
			trigger = {
				NOR = {
					root = scope:new_tyrant
					has_government = feudal_government
					has_government = clan_government
					has_government = tribal_government
					has_government = city_state_tyrannical_government
					has_government = city_state_spartan_government
				}
			}
			text = ATHA_government.0009.a_liberal
		}
		show_as_tooltip = {
			scope:new_tyrant = {
				change_government_form_to_tyranny = yes
			}
		}
	}
}

# A elective city state becomes a tyranny.
ATHA_government.0010 = {
	type = character_event
	title = ATHA_government.0010.t
	desc = {
		first_valid = {
			triggered_desc = {
				trigger = { exists = scope:new_oligarchy }
				desc = ATHA_government.0010.desc_oligarchic
			}
			triggered_desc = {
				trigger = { exists = scope:new_aristocracy }
				desc = ATHA_government.0010.desc_aristocratic
			}
			desc = ATHA_government.0010.desc_democratic
		}
	}
	theme = realm
	left_portrait = {
		character = scope:former_tyrant
		animation = personality_rational
	}

	option = {
		name = ATHA_government.0010.a
		if = {
			limit = { exists = scope:new_democracy }
			show_as_tooltip = {
				scope:former_tyrant = { change_government_form_to_democracy = yes }
			}
		} else_if = {
			limit = { exists = scope:new_oligarchy }
			show_as_tooltip = {
				scope:former_tyrant = { change_government_form_to_oligarchy = yes }
			}
		} else_if = {
			limit = { exists = scope:new_aristocracy }
			show_as_tooltip = {
				scope:former_tyrant = { change_government_form_to_aristocracy = yes }
			}
		}
	}
}

# The government of the character changes; try setting the initial corruption value.
ATHA_government.0100 = {
	type = empty
	hidden = yes

	trigger = {
		government_has_flag = is_city_state_government
	}

	immediate = {
		# Initialize any values we need.
		assign_initial_corruption_value = yes
		assign_initial_franchise_value = yes
	}
}

# An unlanded character is granted land. Set the government based on their capital barony.

# Triggered by on_title_granted_to_unlanded.
# 	root, scope:grantee = the character the titles were granted to.
# 	scope:granter = the character who granted the titles.
# 	scope:highest_tier_title = the title with the highest tier that was granted.
ATHA_government.0200 = {
	type = empty
	hidden = yes

	trigger = {
		scope:highest_tier_title.tier = tier_barony
	}

	immediate = {
		scope:highest_tier_title.title_province = {
			if = {
				limit = {
					OR = {
						has_building_with_flag = colony
						has_building_with_flag = fort
					}
				}

				scope:grantee = {
					change_government_form = { GOVERNMENT = bureaucracy_military_government }
				}
			} else_if = {
				limit = { has_building_with_flag = castle }

				scope:grantee = {
					change_government_form = { GOVERNMENT = bureaucracy_civil_government }
				}
			} else_if = {
				limit = { has_building_with_flag = city }

				scope:grantee = {
					change_government_form = { GOVERNMENT = republic_government }
				}
			} else_if = {
				limit = { has_building_with_flag = temple }

				scope:grantee = {
					change_government_form = { GOVERNMENT = theocracy_government }
				}
			}
		}
	}
}

# An unlanded character is granted a county or above by a clan or tribal liege. Set the government based on their capital barony.

# Triggered by on_title_granted_to_unlanded.
# 	root, scope:grantee = the character the titles were granted to.
# 	scope:granter = the character who granted the titles.
# 	scope:highest_tier_title = the title with the highest tier that was granted.
ATHA_government.0201 = {
	type = empty
	hidden = yes

	trigger = {
		scope:highest_tier_title.tier > tier_barony
		scope:granter = {
			OR = {
				has_government = tribal_government
				has_government = clan_government
			}
		}
	}

	immediate = {
		scope:grantee.capital_province = {
			if = {
				limit = { has_holding_type = tribal_holding }
				scope:grantee = { land_tribal_government = yes }
			} else_if = {
				limit = {
					OR = {
						has_holding_type = colony_holding
						has_holding_type = fort_holding
					}
				}
				scope:grantee = { land_military_government = yes }
			} else_if = {
				limit = { has_holding_type = castle_holding }
				scope:grantee = { land_clan_government = yes }
			} else_if = {
				limit = { has_holding_type = city_holding }
				scope:grantee = { land_dynastic_government = yes }
			}
		}
	}
}

# An unlanded character is granted a county or above by a alliance, sympolity or amphictyony liege. Set the government based on their capital barony.

# Triggered by on_title_granted_to_unlanded.
# 	root, scope:grantee = the character the titles were granted to.
# 	scope:granter = the character who granted the titles.
# 	scope:highest_tier_title = the title with the highest tier that was granted.
ATHA_government.0202 = {
	type = empty
	hidden = yes

	trigger = {
		scope:highest_tier_title.tier > tier_barony
		scope:granter = {
			OR = {
				government_has_flag = is_alliance_government
				government_has_flag = is_sympolity_government
			}
		}
	}

	immediate = {
		scope:grantee.capital_province = {
			if = {
				limit = { has_holding_type = tribal_holding }
				scope:grantee = { land_clan_government = yes }
			} else_if = {
				limit = {
					OR = {
						has_holding_type = colony_holding
						has_holding_type = fort_holding
					}
				}
				scope:grantee = { land_military_government = yes }
			} else_if = {
				limit = {
					has_holding_type = castle_holding
					scope:grantee.highest_held_title_tier = tier_county
				}
				scope:grantee = {
					change_government_form_to_democracy = yes
					vassal_contract_set_obligation_level = { type = vassal_role level = 2 }
				}
			} else_if = {
				limit = {
					has_holding_type = castle_holding
					scope:grantee.highest_held_title_tier > tier_county
				}

				scope:grantee = {
					change_government_form_to_characters = { CHAR = scope:granter }
					vassal_contract_set_obligation_level = { type = vassal_role level = 2 }
				}
			} else_if = {
				limit = { has_holding_type = city_holding }
				scope:grantee = { land_dynastic_government = yes }
			}
		}
	}
}

# An unlanded character is granted a county or above by a city-state/league liege. Set the government based on their capital barony.

# Triggered by on_title_granted_to_unlanded.
# 	root, scope:grantee = the character the titles were granted to.
# 	scope:granter = the character who granted the titles.
# 	scope:highest_tier_title = the title with the highest tier that was granted.
ATHA_government.0203 = {
	type = empty
	hidden = yes

	trigger = {
		scope:highest_tier_title.tier > tier_barony
		scope:granter = {
			OR = {
				is_city_state = yes
				government_has_flag = is_league_government
			}
		}
	}

	immediate = {
		scope:grantee.capital_province = {
			if = {
				limit = { has_holding_type = tribal_holding }
				scope:grantee = { land_clan_government = yes }
			} else_if = {
				limit = {
					OR = {
						has_holding_type = colony_holding
						has_holding_type = fort_holding
					}
				}
				scope:grantee = { land_military_government = yes }
			} else_if = {
				limit = {
					OR = {
						has_holding_type = castle_holding
						has_holding_type = city_holding
					}
				}
				scope:grantee = { land_civil_bureaucracy_government = yes }
			}
		}
	}
}

# An unlanded character is granted a county or above by a dynastic/bureaucratic liege. Set the government based on their capital barony.

# Triggered by on_title_granted_to_unlanded.
# 	root, scope:grantee = the character the titles were granted to.
# 	scope:granter = the character who granted the titles.
# 	scope:highest_tier_title = the title with the highest tier that was granted.
ATHA_government.0204 = {
	type = empty
	hidden = yes

	trigger = {
		scope:highest_tier_title.tier > tier_barony
		scope:granter = {
			OR = {
				has_government = feudal_government
				government_has_flag = is_bureaucracy_government
			}
		}
	}

	immediate = {
		scope:grantee.capital_province = {
			if = {
				limit = { has_holding_type = tribal_holding }
				scope:grantee = { land_clan_government = yes }
			} else_if = {
				limit = {
					OR = {
						has_holding_type = colony_holding
						has_holding_type = fort_holding
					}
				}
				scope:grantee = { land_military_government = yes }
			} else_if = {
				limit = {
					has_holding_type = castle_holding
				}
				scope:grantee = { land_civil_bureaucracy_government = yes }
			} else_if = {
				limit = {
					has_holding_type = city_holding
				}
				scope:grantee = { land_dynastic_government = yes }
			}
		}
	}
}

# Triggered by on_rank_up. Assigns a elective succession law if the character is a duke or above and they do not have an elective succession law.
ATHA_government.0301 = {
	type = character_event
	title = ATHA_government.0301.t
	desc = ATHA_government.0301.desc
	theme = crown
	left_portrait = {
		character = root
		animation = personality_rational
	}

	trigger = {
		highest_held_title_tier >= tier_duchy
		is_city_state_elective_type = yes
		NOT = {
			any_held_title = {
				OR = {
					has_title_law = democratic_succession_law
					has_title_law = oligarchic_succession_law
					has_title_law = aristocratic_succession_law
				}
			}
		}
	}

	immediate = {
		if = {
			limit = { has_government = city_state_democratic_government }
			primary_title = { add_title_law = democratic_succession_law }
		} else_if = {
			limit = { has_government = city_state_oligarchic_government }
			primary_title = { add_title_law = oligarchic_succession_law }
		} else_if = {
			limit = { has_government = city_state_aristocratic_government }
			primary_title = { add_title_law = aristocratic_succession_law }
		}
	}

	option = {
		name = ATHA_government.0301.a
	}
}