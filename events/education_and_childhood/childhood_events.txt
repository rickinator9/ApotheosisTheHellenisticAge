# Events for children centering around the relationships bully/crush/friend

namespace = childhood

##################################################

# 0000-0999:	- Child gains relationship status events
# 0010-0012:	- Response events for crush/bully/friend
# 0900-0999:	- Crush + bully relationship into opinion modifiers on adulthood
# 1000-1999:	- Events related to the relationships crush/bully/friend/ward
# 1015-1019:	- Child studies with friend/crush
# 2000-2999:	- Random events

##################################################

##################################################
#
# Child gains relationship status events
# by Linnéa Thimrén
#
##################################################

# Find crush character
# by Linnéa Thimrén
childhood.0001 = {
	type = character_event
	hidden = yes

	trigger = {
		age > childhood_education_start_age
		is_adult = no
		trigger_if = { #To gate the event so it doesn't tank performance as much
			limit = { is_ai = yes }
			OR = {
				highest_held_title_tier = tier_barony
				any_parent = {
					highest_held_title_tier = tier_barony
				}
			}
		}
		NOT = {
			any_relation = {
				type = crush
				count >= 1
			}
		}
		OR = {
			any_vassal = {
				save_good_crush_character_trigger_check = yes
			}
			any_vassal = {
				any_child = {
					save_good_crush_character_trigger_check = yes
				}
			}
			any_courtier_or_guest = {
				save_good_crush_character_trigger_check = yes
			}
			trigger_if = {
				limit = {
					is_independent_ruler = no
				}
				exists = liege
				liege = {
					any_vassal = {
						any_child = {
							save_good_crush_character_trigger_check = yes
						}
					}
				}
				liege = {
					any_courtier_or_guest = {
						any_child = {
							save_good_crush_character_trigger_check = yes
						}
					}
				}
			}
		}
	}

	weight_multiplier = {
		base = 1
		modifier = {
			factor = -0.2
			any_relation = { type = crush count = 1 }
		}
		modifier = {
			factor = -0.4
			any_relation = { type = crush count >= 2 }
		}
	}

	immediate = {
		if = {
			limit = {
				has_sexuality = none
				any_relation = { type = crush count = 0 }
			}
			#To give tooltip
			save_scope_value_as = {
				name = assigned_sexuality
				value = yes
			}
			# Assign random sexuality as there's no crush to adhere to
			hidden_effect = {
				random_list = {
					0 = {
						modifier = { add = heterosexuality_chance }
						set_sexuality = heterosexual
					}
					0 = {
						modifier = { add = bisexuality_chance }
						set_sexuality = bisexual
					}
					0 = {
						modifier = { add = homosexuality_chance }
						set_sexuality = homosexual
					}
					0 = {
						modifier = { add = asexuality_chance }
						set_sexuality = asexual
					}
				}
			}
		}
		if = {
			limit = {
				any_relation = { type = crush count >= 1 }
			}
			random_relation = {
				type = crush
				save_scope_as = crush
			}
			# FAIL SAFE: Assign sexuality that adheres to the sex of their crush
			# Most, if not all, events that set crushes also set a sexuality beforehand
			if = {
				limit = {
					has_sexuality = none
				}
				hidden_effect = {
					random_list = {
						0 = {
							modifier = { 
								scope:crush = { sex_opposite_of = root }
								add = heterosexuality_chance 
							}
							set_sexuality = heterosexual
						}
						0 = {
							modifier = { add = bisexuality_chance } #Can always be bi
							set_sexuality = bisexual
						}
						0 = {
							modifier = { 
								scope:crush = { sex_same_as = root }
								add = homosexuality_chance 
							}
							set_sexuality = homosexual
						}
						0 = {
							modifier = { add = asexuality_chance } #Can always be asex
							set_sexuality = asexual
						}
					}
				}
			}
			save_good_character_effect = {
				RELATION = crush
				SCOPE = crush
			}
			
			if = {
				limit = {
					exists = scope:crush
				}
				trigger_event = childhood.0002
			}
		}
	}
}

# Child gets a crush
# by Linnéa Thimrén
childhood.0002 = {
	type = character_event
	title = childhood.0002.t
	desc = {
		desc = childhood.0002.opening
		first_valid = {
			random_valid = {
				triggered_desc = {
					trigger = {
						scope:crush = {
							OR = {
								has_trait = bossy
								has_trait = curious
								has_trait = rowdy
								has_trait = charming
							}
						}
					}
					desc = childhood.0002.loud
				}
				triggered_desc = {
					trigger = {
						scope:crush = {
							has_trait = pensive
						}
					}
					desc = childhood.0002.quiet
				}
			}
			desc = childhood.0002.fallback
		}
	}

	theme = seduction
	left_portrait = scope:crush

	trigger = {
		scope:crush = {
			is_alive = yes
		}
	}

	immediate = {
		play_music_cue = "mx_cue_touching_moment"
		if = { #To show tooltip
			limit = {
				exists = scope:assigned_sexuality
			}
			if = {
				limit = {
					has_sexuality = homosexual
				}
				show_as_tooltip = { set_sexuality = homosexual }
			}
			else_if = {
				limit = {
					has_sexuality = bisexual
				}
				show_as_tooltip = { set_sexuality = bisexual }
			}
			else_if = {
				limit = {
					has_sexuality = heterosexual
				}
				show_as_tooltip = { set_sexuality = heterosexual }
			}
			else_if = {
				limit = {
					has_sexuality = asexual
				}
				show_as_tooltip = { set_sexuality = asexual }
			}
		}
	}

	option = {
		name = childhood.0002.a
		set_relation_crush = scope:crush
	}
	after = {
		save_scope_as = crush_holder
		scope:crush = {
			trigger_event = {
				id = childhood.0012
				days = 3
			}
		}
	}
}

# Find character for friend
# by Linnéa Thimrén
childhood.0003 = {
	type = character_event
	hidden = yes

	trigger= {
		is_adult = no
		trigger_if = { # To gate the event so it doesn't tank performance as much
			limit = { is_ai = yes }
			OR = {
				highest_held_title_tier = tier_barony
				any_parent = {
					highest_held_title_tier = tier_barony
				}
			}
		}
		OR = {
			any_vassal = {
				save_good_friend_character_trigger_check = yes
			}
			any_vassal = {
				any_child = {
					save_good_friend_character_trigger_check = yes
				}
			}
			any_courtier_or_guest = {
				save_good_friend_character_trigger_check = yes
			}
			trigger_if = {
				limit = {
					is_independent_ruler = no
				}
				exists = liege
				liege = {
					any_vassal = {
						any_child = {
							save_good_friend_character_trigger_check = yes
						}
					}
				}
				liege = {
					any_courtier_or_guest = {
						any_child = {
							save_good_friend_character_trigger_check = yes
						}
					}
				}
			}
		}
	}

	weight_multiplier = {
		base = 1
		modifier = {
			factor = -0.2
			any_relation = { type = friend count = 1 }
		}
		modifier = {
			factor = -0.4
			any_relation = { type = friend count >= 2 }
		}
		modifier = {
			add = 2
			has_sexuality = asexual
		}
	}

	immediate = {
		if = {
			limit = {
				any_relation = { type = friend count >= 1 }
			}
			random_relation = {
				type = friend
				save_scope_as = friend
			}
		}
		save_good_character_effect = {
			RELATION = friend
			SCOPE = friend
		}

		if = {
			limit = {
				exists = scope:friend
			}
			trigger_event = {
				id = childhood.0004
			}
		}
	}
}

# Child gets a friend
# by Linnéa Thimrén
childhood.0004 = {
	type = character_event
	title = childhood.0004.t
	desc = {
		first_valid = {
			triggered_desc = {
				trigger = {
					exists = scope:friend
					age <= 4
				}
				desc = childhood.0004.desc1
			}
			triggered_desc = {
				trigger = {
					exists = scope:friend
					age > 4
					age <= 10
				}
				desc = childhood.0004.desc2
			}
			triggered_desc = {
				trigger = {
					exists = scope:friend
					age > 10
					is_adult = no
				}
				desc = {
					desc = childhood.0004.desc3
					first_valid = {
						triggered_desc = {
							trigger= {
								scope:friend = {
									has_trait = rowdy
								}
							}
							desc = childhood_0004.desc3_rowdy
						}
						triggered_desc = {
							trigger= {
								scope:friend = {
									has_trait = charming
								}
							}
							desc = childhood_0004.desc3_charming
						}
						triggered_desc = {
							trigger= {
								scope:friend = {
									has_trait = curious
								}
							}
							desc = childhood_0004.desc3_curious
						}
						triggered_desc = {
							trigger= {
								scope:friend = {
									has_trait = pensive
								}
							}
							desc = childhood_0004.desc3_pensive
						}
						triggered_desc = {
							trigger= {
								scope:friend = {
									has_trait = bossy
								}
							}
							desc = childhood_0004.desc3_bossy
						}
						desc = childhood_0004.desc3_fallback
					}
				}
			}
		}
	}
	theme = friendly
	left_portrait = scope:friend

	trigger = {
		scope:friend = {
			is_alive = yes
		}
	}

	immediate = {
		play_music_cue = "mx_cue_touching_moment"
		scope:friend = {
			set_favorite_toy_effect = yes
		}
	}


	option = {
		name = childhood.0004.a
		trigger = {
			exists = scope:friend
			age <= 4
		}
		if = {
			limit = {
				can_set_relation_friend_trigger = { CHARACTER = scope:friend }
			}
			set_relation_friend = scope:friend
		}
	}
	option = {
		name = childhood.0004.b
		trigger = {
			exists = scope:friend
			age > 4
			age <= 10
		}
		if = {
			limit = {
				can_set_relation_friend_trigger = { CHARACTER = scope:friend }
			}
			set_relation_friend = scope:friend
		}
	}
	option = {
		name = childhood.0004.c
		trigger = {
			exists = scope:friend
			age > 10
			is_adult = no
		}
		if = {
			limit = {
				can_set_relation_friend_trigger = { CHARACTER = scope:friend }
			}
			set_relation_friend = scope:friend
		}
	}
	after = {
		save_scope_as = child
		scope:friend = {
			trigger_event = {
				id = childhood.0013
			}
		}
	}
}

# Find bully character
# by Linnéa Thimrén
childhood.0005 = {
	type = character_event
	hidden = yes

	trigger = {
		age >= 2
		is_adult = no
		trigger_if = { # To gate the event so it doesn't tank performance as much
			limit = { is_ai = yes }
			OR = {
				highest_held_title_tier = tier_barony
				any_parent = {
					highest_held_title_tier = tier_barony
				}
			}
		}
		OR = {
			any_vassal = {
				save_good_bully_character_trigger_check = yes
			}
			any_vassal = {
				any_child = {
					save_good_bully_character_trigger_check = yes
				}
			}
			any_courtier_or_guest = {
				save_good_bully_character_trigger_check = yes
			}
			AND = {
				exists = liege
				liege = {
					OR = {
						any_vassal = {
							any_child = {
								save_good_bully_character_trigger_check = yes
							}
						}
						any_courtier_or_guest = {
							any_child = {
								save_good_bully_character_trigger_check = yes
							}
						}
					}
				}
			}
		}
	}

	weight_multiplier = {
		base = 1
		modifier = {
			factor = -0.2
			any_relation = { type = bully count = 1 }
		}
		modifier = {
			factor = -0.4
			any_relation = { type = bully count >= 2 }
		}
	}
	
	immediate = {
		if = {
			limit = {
				any_relation = { type = bully count >= 1 }
			}
			random_relation = {
				type = bully
				save_scope_as = bully
			}
		}
		save_good_character_effect = {
			RELATION = bully
			SCOPE = bully
		}

		if = {
			limit = {
				exists = scope:bully
			}
			trigger_event = childhood.0006
		}
	}
}

# Child gets a bully
# by Linnéa Thimrén
childhood.0006 = {
	type = character_event
	title = childhood.0006.t
	 desc = {
		desc = childhood.0006.opening
		first_valid = {
			random_valid = {
				triggered_desc = {
					trigger = {
						scope:bully = {
							childhood_mean_child_trigger = yes
						}
					}
					desc = childhood.0006.mean
				}
				triggered_desc = {
					trigger = {
						scope:bully = {
							childhood_loud_child_trigger = yes
						}
					}
					desc = childhood.0006.loud
				}
				triggered_desc = {
					trigger = {
						scope:bully = {
							childhood_quiet_child_trigger = yes
						}
					}
					desc = childhood.0006.quiet
				}
				triggered_desc = {
					trigger = {
						scope:bully = {
							childhood_nice_child_trigger = yes
						}
					}
					desc = childhood.0006.nice
				}
			}
			desc = childhood.0006.fallback
		}
		desc = childhood.0006.end
	}
	theme = unfriendly
	left_portrait = scope:bully

	trigger = {
		scope:bully = {
			is_alive = yes
		}
	}

	immediate = {
		play_music_cue = "mx_cue_prison"
		save_scope_as = victim
		set_favorite_toy_effect = yes
		if = {
			limit = {
				NOT = { has_relation_bully = scope:bully }
			}
			set_relation_bully = scope:bully
		}
		scope:bully = {
			trigger_event = childhood.0010
		}
	}

	option = {
		name = childhood.0006.a
	}
}

# Find victim for child to bully
# by Linnéa Thimrén
childhood.0007 = {
	type = character_event
	hidden = yes
	
	trigger = {
		age >= 2
		is_adult = no
		trigger_if = { # To gate the event so it doesn't tank performance as much
			limit = { is_ai = yes }
			OR = {
				highest_held_title_tier = tier_barony
				any_parent = {
					highest_held_title_tier = tier_barony
				}
			}
		}
		OR = {
			any_vassal = {
				save_good_victim_character_trigger_check = yes
			}
			any_vassal = {
				any_child = {
					save_good_victim_character_trigger_check = yes
				}
			}
			any_courtier_or_guest = {
				save_good_victim_character_trigger_check = yes
			}
			trigger_if = {
				limit = {
					is_independent_ruler = no
				}
				exists = liege
				liege = {
					any_vassal = {
						any_child = {
							save_good_victim_character_trigger_check = yes
						}
					}
				}
				liege = {
					any_courtier_or_guest = {
						any_child = {
							save_good_victim_character_trigger_check = yes
						}
					}
				}
			}
		}
	}

	weight_multiplier = {
		base = 1
		modifier = {
			factor = -0.2
			any_relation = { type = victim count = 1 }
		}
		modifier = {
			factor = -0.4
			any_relation = { type = victim count >= 2 }
		}
	}
	
	immediate = {
		if = {
			limit = {
				any_relation = { type = victim count >= 1 }
			}
			random_relation = {
				type = victim
				save_scope_as = victim
			}
		}
		save_good_character_effect = {
			RELATION = victim
			SCOPE = victim
		}

		if = {
			limit = {
				exists = scope:victim
			}
			trigger_event = childhood.0008
		}
	}
}

# Child becomes a bully?
# by Linnéa Thimrén
childhood.0008 = {
	type = character_event
	title = childhood.0008.t
	desc = {
		desc = childhood.0008.desc
		first_valid = {
			random_valid = {
				triggered_desc = {
					trigger = {
						scope:victim = {
							childhood_mean_child_trigger = yes
						}
					}
					desc = childhood.0008.mean
				}
				triggered_desc = {
					trigger = {
						scope:victim = {
							childhood_loud_child_trigger = yes
						}
					}
					desc = childhood.0008.loud
				}
				triggered_desc = {
					trigger = {
						scope:victim = {
							childhood_quiet_child_trigger = yes
						}
					}
					desc = childhood.0008.quiet
				}
				triggered_desc = {
					trigger = {
						scope:victim = {
							 childhood_nice_child_trigger = yes
						}
					}
					desc = childhood.0008.nice
				}
			}
			desc = childhood.0008.fallback
		}
	}
	theme = unfriendly
	left_portrait = scope:victim

	immediate = {
		play_music_cue = "mx_cue_stress"
	}

	option = {
		name = childhood.0008.a
		save_scope_as = bully
		if = {
			limit = {
				NOT = { has_relation_victim = scope:victim }
			}
			set_relation_victim = scope:victim
		}
		scope:victim = {
			trigger_event = childhood.0011
		}
		trigger_event = {
			id = childhood.0009
			days = { 30 60 }
		}
		ai_chance = {
			base = 50
			modifier = {
				add = 10
				has_personality_malicious_trigger = yes
			}
		}
		stress_impact = {
			calm = medium_stress_impact_gain
			compassionate = medium_stress_impact_gain
			wrathful = medium_stress_impact_loss
			sadistic = medium_stress_impact_loss
		}

		change_nickname_weight_effect = { NICKNAME = nick_the_cruel CHANGE = nickname_weight_small_increase }
		change_nickname_weight_effect = { NICKNAME = nick_the_good CHANGE = nickname_weight_small_decrease }
	}

	option = {
		name = childhood.0008.b
		scope:victim = {
			add_opinion = {
				modifier = friendly_interaction
				target = root
			}
		}
		ai_chance = {
			base = 50
			modifier = {
				add = 50
				OR = {
					has_trait = calm
					has_trait = compassionate
				}
			}
		}
		stress_impact = {
			base = minor_stress_gain
			calm = medium_stress_impact_loss
			compassionate = medium_stress_impact_loss
			wrathful = medium_stress_impact_gain
			sadistic = medium_stress_impact_gain
			vengeful = medium_stress_impact_gain
		}

		change_nickname_weight_effect = { NICKNAME = nick_the_cruel CHANGE = nickname_weight_small_decrease }
	}
}

# Child is now a bully
# by Linnéa Thimrén
childhood.0009 = {
	type = character_event
	title = childhood.0009.t
	desc = {
		desc = childhood.0009.opening
		first_valid = {
			random_valid = {
				triggered_desc = {
					trigger = {
						has_trait = rowdy
					}
					desc = childhood.0009.desc1
				}
				triggered_desc = {
					trigger = {
						OR = {
							has_trait = bossy
							has_trait = curious
						}
					}
					desc = childhood.0009.desc2
				}
				triggered_desc = {
					trigger = {
						OR = {
							has_trait = charming
							has_trait = pensive
							has_trait = bossy
						}
					}
					desc = childhood.0009.desc3
				}
			}
			desc = childhood.0009.fallback
		}
	}
	theme = unfriendly
	left_portrait = scope:victim

	trigger = {
		scope:victim = {
			is_alive = yes
		}
	}

	immediate = {
		scope:victim = {
			set_favorite_toy_effect = yes
		}
	}

	option = {
		name = childhood.0009.a
	}
}

# Response event for character that becomes a bully
# by Linnéa Thimrén
childhood.0010 = {
	type = character_event
	title = childhood.0008.t
	desc = {
		desc = childhood.0008.desc
		first_valid = {
			random_valid = {
				triggered_desc = {
					trigger = {
						scope:victim = {
							childhood_mean_child_trigger = yes
						}
					}
					desc = childhood.0008.mean
				}
				triggered_desc = {
					trigger = {
						scope:victim = {
							childhood_loud_child_trigger = yes
						}
					}
					desc = childhood.0008.loud
				}
				triggered_desc = {
					trigger = {
						scope:victim = {
							childhood_quiet_child_trigger = yes
						}
					}
					desc = childhood.0008.quiet
				}
				triggered_desc = {
					trigger = {
						scope:victim = {
							childhood_nice_child_trigger = yes
						}
					}
					desc = childhood.0008.nice
				}
			}
			desc = childhood.0008.fallback
		}
	}
	theme = unfriendly
	left_portrait = scope:victim

	option = {
		name = childhood.0008.a
	}
}

# Response event for character that becomes a victim
# by Linnéa Thimrén
childhood.0011 = {
	type = character_event
	title = childhood.0006.t
	 desc = {
		desc = childhood.0006.opening
		first_valid = {
			random_valid = {
				triggered_desc = {
					trigger = {
						scope:bully = {
							childhood_mean_child_trigger = yes
						}
					}
					desc = childhood.0006.mean
				}
				triggered_desc = {
					trigger = {
						scope:bully = {
							childhood_loud_child_trigger = yes
						}
					}
					desc = childhood.0006.loud
				}
				triggered_desc = {
					trigger = {
						scope:bully = {
							childhood_quiet_child_trigger = yes
						}
					}
					desc = childhood.0006.quiet
				}
				triggered_desc = {
					trigger = {
						scope:bully = {
							childhood_nice_child_trigger = yes
						}
					}
					desc = childhood.0006.nice
				}
			}
			desc = childhood.0006.fallback
		}
		desc = childhood.0006.end
	}
	theme = unfriendly
	left_portrait = scope:bully

	immediate = {
		save_scope_as = victim
		set_favorite_toy_effect = yes
	}

	option = {
		name = childhood.0006.a
	}
}

# Response event for crush
# by Linnéa Thimrén
childhood.0012 = {
	type = character_event
	title = childhood.0012.t
	desc = childhood.0012.desc
	theme = friendly
	left_portrait = scope:crush_holder

	trigger = {
		is_alive = yes
		scope:crush_holder = {
			is_alive = yes
		}
	}

	immediate = {
		scope:crush_holder = {
			save_scope_as = crushed_crush
		}
		# To give a sexuality if they don't have one
		hidden_effect = {
			if = {
				limit = {
					has_sexuality = none
				}

				random_list = {
					0 = {
						trigger = { sex_same_as = scope:crush_holder }
						modifier = { add = heterosexuality_chance }
						save_scope_value_as = {
							name = sexuality_heterosexual
							value = yes
						}
					}
					0 = {
						modifier = { add = bisexuality_chance }
						save_scope_value_as = {
							name = sexuality_bisexual
							value = yes
						}
					}
					0 = {
						trigger = { sex_same_as = scope:crush_holder }
						modifier = { add = homosexuality_chance }
						save_scope_value_as = {
							name = sexuality_homosexual
							value = yes
						}
					}
					0 = {
						modifier = { add = asexuality_chance }
						save_scope_value_as = {
							name = sexuality_asexual
							value = yes
						}
					}
				}
			}
		}
	}

	option = {
		name = childhood.0012.a
		if = {
			limit = {
				NOT = { has_relation_crush = scope:crush_holder }
			}
		}
		set_relation_crush = scope:crush_holder
		if = {
			limit = {
				has_sexuality = none
			}
			if = {
				limit = {
					exists = scope:sexuality_homosexual
				}
				set_sexuality = homosexual
			}
			else_if = {
				limit = {
					exists = scope:sexuality_bisexual
				}
				set_sexuality = bisexual
			}
			else_if = {
				limit = {
					exists = scope:sexuality_heterosexual
				}
				set_sexuality = heterosexual
			}
			else_if = {
				limit = {
					exists = scope:sexuality_asexual
				}
				set_sexuality = asexual
			}
		}
		ai_chance = {
			base = 50
		}
	}
	option = {
		name = childhood.0012.b
		trigger = {
			NOT = {
				has_relation_crush = scope:crush_holder
			}
		}
		set_variable = {
			name = unrequited_crush
			value = scope:crushed_crush
		}
		ai_chance = {
			base = 50
		}
	}
}

# Response event for friend
# by Linnéa Thimrén
childhood.0013 = {
	type = character_event
	title = childhood.0013.t
	desc = {
		desc = childhood.0013.desc
		first_valid = {
			triggered_desc = {
				trigger = {
					scope:child = {
						age <= 4
					}
				}
				desc = childhood.0013.desc1
			}
			triggered_desc = {
				trigger = {
					scope:child = {
						age > 4
						age <= 10
					}
				}
				desc = childhood.0013.desc2
			}
			triggered_desc = {
				trigger = {
					scope:child = {
						age > 10
						is_adult = no
					}
				}
				desc = {
					first_valid = {
						triggered_desc = {
							trigger= {
								has_trait = rowdy
							}
							desc = childhood.0013.desc3_rowdy
						}
						triggered_desc = {
							trigger= {
								has_trait = charming
							}
							desc = childhood.0013.desc3_charming
						}
						triggered_desc = {
							trigger= {
								has_trait = curious
							}
							desc = childhood.0013.desc3_curious
						}
						triggered_desc = {
							trigger= {
								has_trait = pensive
							}
							desc = childhood.0013.desc3_pensive
						}
						triggered_desc = {
							trigger= {
								has_trait = bossy
							}
							desc = childhood.0013.desc3_bossy
						}
						desc = childhood.0013.desc_fallback
					}
				}
			}
		}
		desc = childhood.0013.desc_end
	}
	theme = friendly
	left_portrait = scope:child
	
	option = {
		name = childhood.0013.a
	}
}


##################################################
#
# Crush + bully relationship into opinion modifiers on adulthood
# by Linnéa Thimrén
#
##################################################

# victim transforms into opinion modifier on adulthood
# by Linnéa Thimrén
childhood.0900 = {
	type = character_event
	hidden = yes
	
	trigger = {
		any_relation = { type = victim count >= 1 }
	}

	immediate = {
		if = {
			limit = {
				any_relation = { type = victim count >= 1 }
			}
			random_relation = { type = victim save_scope_as = victim }
			if = {
				limit = {
					is_ai = no
				}
				set_variable = {
					name = had_childhood_victim_variable
					value = scope:victim
				}
			}
		}
		add_opinion = {
			modifier = childhood_victim
			target = scope:victim
		}
		if = {
			limit = {
				NOT = { has_relation_potential_rival = scope:victim }
			}
			hidden_effect = {
				set_relation_potential_rival = scope:victim
			}
		}
		if = {
			limit = {
				any_relation = { type = victim count >= 1 }
			}
			remove_relation_victim = scope:victim
		}
		save_scope_as = bully
		scope:victim = {
			trigger_event = childhood.0901
		}
	}
}

# Response event for victim, bully is now an adult
# by Linnéa Thimrén
childhood.0901 = {
	type = character_event
	title = childhood.0910.t
	desc = {
		desc = childhood.0910.opening
		first_valid = {
			triggered_desc = {
				trigger = {
					NOT = { has_character_flag = bully_destroyed_toy }
				}
				desc = childhood.0910.desc1
			}
			triggered_desc = {
				trigger = {
					has_character_flag = bully_destroyed_toy
				}
				desc = childhood.0910.desc2
			}
		}
	}
	theme = unfriendly
	left_portrait = scope:bully

	immediate = {
		if = {
			limit = {
				is_ai = no
			}
			set_variable = {
				name = had_childhood_bully_variable
				value = scope:bully
			}
		}
	}

	option = {
		name = childhood.0910.a
		add_opinion = {
			modifier = childhood_bully
			target = scope:bully
		}
		if = {
			limit = {
				NOT = { has_relation_potential_rival = scope:bully }
			}
			hidden_effect = {
				set_relation_potential_rival = scope:bully
			}
		}
	}
}


# bully transforms into opinion modifier on adulthood
# by Linnéa Thimrén
childhood.0910 = {
	type = character_event
	hidden = yes
	
	trigger = {
		any_relation = { type = bully count >= 1 }	
	}

	immediate = {
		if = {
			limit = {
				any_relation = { type = bully count >= 1 }
			}
			random_relation = { type = bully save_scope_as = bully }
		}
		if = {
			limit = {
				is_ai = no
			}
			set_variable = {
				name = had_childhood_bully_variable
				value = scope:bully
			}
		}
		add_opinion = {
			modifier = childhood_bully
			target = scope:bully
		}
		if = {
			limit = {
				NOT = { has_relation_potential_rival = scope:bully }
			}
			hidden_effect = {
				set_relation_potential_rival = scope:bully
			}
		}
		if = {
			limit = {
				any_relation = { type = bully count >= 1 }
			}
			remove_relation_bully = scope:bully
		}
		save_scope_as = victim
		scope:bully = {
			trigger_event = childhood.0911
		}
	}
}


# Response event for bully, victim is now an adult
# by Linnéa Thimrén
childhood.0911 = {
	type = character_event
	title = childhood.0911.t
	desc = {
		first_valid = {
			triggered_desc = {
				trigger = {
					scope:victim = {
						has_relation_rival = prev
					}
				}
				desc = childhood.0911.desc_rival
			}
			triggered_desc = {
				trigger = {
					scope:victim = {
						NOT = { has_relation_rival = prev }
					}
				}
				desc = {
					desc = childhood.0911.opening
					triggered_desc = {
						trigger = {
							scope:victim = {
								NOT = { has_character_flag = bully_destroyed_toy }
							}
						}
						desc = childhood.0911.desc1
					}
					triggered_desc = {
						trigger = {
							scope:victim = {
								has_character_flag = bully_destroyed_toy
							}
						}
						desc = childhood.0911.desc2
					}
				}
			}
		}
	}
	theme = unfriendly
	left_portrait = scope:victim

	immediate = {
		if = {
			limit = {
				is_ai = no
			}
			set_variable = {
				name = had_childhood_victim_variable
				value = scope:victim
			}
		}
	}

	option = {
		name = childhood.0911.a
		add_opinion = {
			modifier= childhood_victim
			target = scope:victim
		}
		if = {
			limit = {
				NOT = { has_relation_potential_rival = scope:victim }
			}
			hidden_effect = {
				set_relation_potential_rival = scope:victim
			}
		}
	}
}

# crush transforms into opinion modifier on adulthood
# by Linnéa Thimrén
childhood.0998 = {
	type = character_event
	hidden = yes

	
	trigger = {
		OR = {
			any_relation = { type = crush count >= 1 }
			exists = var:unrequited_crush
		}
	}

	immediate = {
		if = {
			limit = {
				exists = var:unrequited_crush
			}
			var:unrequited_crush = {
				save_scope_as = crushed_crush
			}
			scope:crushed_crush = {
				if = {
					limit = {
						is_ai = no
					}
					set_variable = {
						name = had_childhood_crush_variable
						value = root
					}
				}
			}
		}
		if = {
			limit = {
				any_relation = { type = crush count >= 1 }
			}
			random_relation = {
				type = crush
				save_scope_as = crush
			}
			if = {
				limit = {
					is_ai = no
				}
				set_variable = {
					name = had_childhood_crush_variable
					value = scope:crush
				}
			}
		}
		if = {
			limit = {
				exists = scope:crush
			}
			save_scope_as = root_crush
			scope:crush = {
				if = {
					limit = {
						has_relation_crush = root
					}
					add_character_flag = crush_over
					trigger_event = {
						id = childhood.0999
					}
				}
			}
		}
		if = {
			limit = {
				exists = var:unrequited_crush
			}
			save_scope_as = root_crush
			scope:crushed_crush = {
				if = {
					limit = {
						has_relation_crush = root
					}
					add_character_flag = crush_over
					add_character_flag = unrequited_crush
					trigger_event = {
						id = childhood.0999
					}
				}
			}
		}
		if = {
			limit = {
				exists = scope:crush
			}
			add_opinion = {
				modifier = childhood_crush
				target = scope:crush
			}
		}
		if = {
			limit = {
				any_relation = { type = crush count >= 1 }
			}
			remove_relation_crush = scope:crush
		}
	}
}

# Response event for crush
# by Linnéa Thimrén
childhood.0999 = {
	type = character_event
	title = childhood.0999.t
	desc = {
		desc = childhood.0999.desc
		triggered_desc = {
			trigger = {
				has_character_flag = unrequited_crush
			}
			desc = childhood.0999.desc_unrequited
		}
	}
	theme = friendly
	left_portrait = scope:root_crush
	
	trigger = {
		has_character_flag = crush_over	
	}

	immediate = {
		if = {
			limit = {
				NOT = { has_character_flag = unrequited_crush }
			}
			if = {
				limit = {
					is_ai = no
				}
				set_variable = {
					name = had_childhood_crush_variable
					value = scope:root_crush
				}
			}
		}
	}

	option = {
		name = childhood.0999.a
		add_opinion = {
			modifier = childhood_crush
			target = scope:root_crush
		}
		if = {
			limit = {
				has_relation_crush = scope:root_crush
			}
			remove_relation_crush = scope:root_crush
		}
	}
	after = {
		remove_character_flag = crush_over
		remove_character_flag = unrequited_crush
	}
}


##################################################
#
# Events related to the relationships crush/bully/friend/guardian
# by Linnéa Thimrén
#
##################################################

# Your friendship can turn into a crush
# by Linnéa Thimrén
scripted_trigger childhood_1000_friend_sexuality_trigger = {
	NOT = { root = { has_relation_crush = prev } }
	reverse_opinion = {
		target = root
		value >= low_positive_opinion
	}
	is_close_family_of_root_trigger = no
	save_temporary_scope_as = child_check
	OR = {
		matching_gender_and_sexuality_trigger = {
			CHARACTER_1 = scope:child_check
			CHARACTER_2 = root
		}
		AND = {
			root = { has_sexuality = none }
			has_sexuality = none
		}
		AND = {
			root = { has_sexuality = none }
			is_attracted_to_gender_of = root
		}
		AND = {
			has_sexuality = none
			root = { is_attracted_to_gender_of = scope:child_check }
		}
	}
}

childhood.1000 = {
	type = character_event
	title = childhood.1000.t
	desc = childhood.1000.desc
	theme = friendly
	left_portrait = scope:friend_to_crush
	
	trigger = {
		NOT = { has_sexuality = asexual }
		any_relation = {
			type = friend
			childhood_1000_friend_sexuality_trigger = yes
		}
		NOT = { has_character_flag = had_event_childhood_1000 }
	}

	immediate = {
		add_character_flag = {
			flag = had_event_childhood_1000
			years = 5
		}
		random_relation = {
			type = friend
			limit = {
				childhood_1000_friend_sexuality_trigger = yes
			}
			save_scope_as = friend_to_crush
			hidden_effect = {
				if = { # To fix the right tooltip
					limit = {
						root = { has_sexuality = none }
					}
					random_list = {
						0 = {
							trigger = { sex_opposite_of = root }
							modifier = { add = heterosexuality_chance }
							save_scope_value_as = {
								name = sexuality_heterosexual
								value = yes
							}
						}
						0 = {
							modifier = { add = bisexuality_chance }
							save_scope_value_as = {
								name = sexuality_bisexual
								value = yes
							}
						}
						0 = {
							trigger = { sex_same_as = root }
							modifier = { add = homosexuality_chance }
							save_scope_value_as = {
								name = sexuality_homosexual
								value = yes
							}
						}
					}
				}
			}
			root = {
				if = { # To actually show the tooltip
					limit = {
						has_sexuality = none
					}
					if = {
						limit = {
							exists = scope:sexuality_homosexual
						}
						set_sexuality = homosexual
					}
					else_if = {
						limit = {
							exists = scope:sexuality_bisexual
						}
						set_sexuality = bisexual
					}
					else_if = {
						limit = {
							exists = scope:sexuality_heterosexual
						}
						set_sexuality = heterosexual
					}
				}
			}
		}
	}
		option = {
		name = childhood.1000.a
		ai_chance = {
			base = 80
			modifier = {
				add = 10
				opinion = {
					target = scope:friend_to_crush
					value > low_positive_opinion
				}
			}
		}
		set_relation_crush = scope:friend_to_crush
		remove_relation_friend = scope:friend_to_crush
	}
	option = {
		name = childhood.1000.c
		ai_chance = {
			base = 20
		}
	}
}

# You make your bully stop being such a bully
# by Linnéa Thimrén
childhood.1001 = {
	type = character_event
	title = childhood.1001.t
	desc = {
		desc = childhood.1001.opening
		first_valid = {
			random_valid = {
				triggered_desc = {
					trigger = {
						OR = {
							diplomacy >= scope:bully.diplomacy
							martial >= scope:bully.martial
						}
						exists = scope:bully
					}
					desc = childhood.1001.desc
				}
			}
			desc = childhood.1001.fallback	
		}
	}
	theme = unfriendly
	left_portrait = scope:bully

	
	trigger = {
		any_relation = {
			type = bully
			count >= 1
			save_temporary_scope_as = bully
		}
		OR = {
			martial >= scope:bully.martial
			diplomacy >= scope:bully.diplomacy
		}
		NOT = { has_character_flag = had_event_childhood_1001 }
	}

	weight_multiplier = {
		base = 1
		modifier = {
			add = 0.2
			has_trait = brave
		}
	}

	immediate = {
		play_music_cue = "mx_cue_stress"
		add_character_flag = {
			flag = had_event_childhood_1001
			years = 5
		}
		random_relation = {
			type = bully
			save_scope_as = bully
		}
	}

	option = {
		name = childhood.1001.a
		trigger = {
			martial >= scope:bully.martial
		}
		duel = {
			skill = martial
			target = scope:bully
			8 = {
				desc = childhood.1001.a.success
				compare_modifier = {
					value = scope:duel_value
				}
				send_interface_toast = {
					left_icon = scope:bully
					title = childhood.1001.a.success
					show_as_tooltip = { remove_relation_bully = scope:bully }
				}
				add_character_flag = martial_win
			}
			4 = {
				desc = childhood.1001.a.failure
				send_interface_toast = {
					left_icon = scope:bully
					title = childhood.1001.a.failure
					increase_wounds_effect = { REASON = fight }
				}
			}
		}
	}
	option = {
		name = childhood.1001.b
		trigger = {
			diplomacy >= scope:bully.diplomacy
		}
		duel = {
			skill = diplomacy
			#value = 12
			target = scope:bully
			8 = {
				desc = childhood.1001.b.success
				compare_modifier = {
					value = scope:duel_value
				}
				send_interface_toast = {
					left_icon = scope:bully
					title = childhood.1001.b.success
					show_as_tooltip = { remove_relation_bully = scope:bully }
				}
				add_character_flag = diplomacy_win
			}
			4 = {
				desc = childhood.1001.a.failure
				send_interface_toast = {
					title = childhood.1001.a.failure
					left_icon = scope:bully
					increase_wounds_effect = { REASON = fight }
				}
			}
		}
	}
	option = {
		name = childhood.1001.c
		stress_impact = {
			base = medium_stress_gain
		}
		trigger = {
			AND = {
				diplomacy < scope:bully.diplomacy
				martial < scope:bully.martial
			}
		}
	}
	after = {
		if = {
			limit = {
				OR = {
					has_character_flag = martial_win
					has_character_flag = diplomacy_win
				}
			}
			hidden_effect = {
				remove_relation_bully = scope:bully
			}
		}
		remove_character_flag = martial_win
		remove_character_flag = diplomacy_win
	}
}

# Parent is your educator, "supportive_parent" opinion_modifier
# by Linnéa Thimrén
childhood.1002 = {
	type = character_event
	title = childhood.1002.t
	desc = {
		first_valid = {
			triggered_desc = {
				trigger = {
					age <= 8
					exists = scope:friend
					exists = scope:guardian_parent
				}
				desc = childhood.1002.desc1
			}
			triggered_desc = {
				trigger = {
					exists = scope:guardian_parent
					age <= 8
				}
				desc = childhood.1002.desc2
			}
			triggered_desc = {
				trigger = {
					exists = scope:guardian_parent
					age > 8
				}
				desc = childhood.1002.desc3
			}
		}
	}
	theme = family
	left_portrait = scope:guardian_parent
	
	trigger = {
		any_parent = {
			is_alive = yes
			any_relation = { type = ward this = root }
		}
		number_of_personality_traits < personality_trait_limit # No gaining extra personality traits!

		NAND = { # Event is not interesting if child already has the traits that the event can give
			OR = {
				has_trait = diligent
				has_trait = lazy
			}
			OR = {	
				has_trait = brave
				has_trait = craven
			}
		}
		NOT = { has_character_flag = had_event_childhood_1002 }
	}

	weight_multiplier = {
		base = 1
		modifier = {
			any_parent = {
				is_alive = yes
				any_relation = { type = ward this = root }
				opinion = {
					value > medium_positive_opinion
					target = root
				}
			}			
			factor = 2
		}

		modifier = {
			OR = { 
				has_trait = diligent
				has_trait = brave
			}
			factor = 0.5 # Event is not interesting if child already has the traits that the event can give
		}
	}

	immediate = {
		add_character_flag = {
			flag = had_event_childhood_1002
			years = 5
		}
		random_relation = {
			type = friend
			limit = {
				is_in_the_same_court_as = root
			}
			save_scope_as = friend
		}
		random_parent = {
			limit = {
				is_alive = yes
				any_relation = { type = ward this = root }
			}
			save_scope_as = guardian_parent
		}
		set_favorite_toy_effect = yes
	}

	option = {
		name = childhood.1002.a
		ai_chance = {
			base = 100
		}
		if = {
			limit = {
				is_ai = yes
			}
			save_scope_as = child
			scope:guardian_parent = {
				trigger_event = {
					id = childhood.1003
				}
			}
		}
		add_opinion = {
			modifier = supportive_parent
			target = scope:guardian_parent
		}
	}

	option = {
		name = childhood.1002.b
		if = {
			limit = {
				age <= 8
			}
			random_list = {
				40 = {
					desc = childhood.1002.b_2
					send_interface_toast = {
						title = childhood.1002.b_2
						add_trait = brave
					}
				}
				60 = {
					desc = childhood.1002.b_1
					send_interface_toast = {
						title = childhood.1002.b_1
						stress_impact = {
							base = minor_stress_gain
						}
					}
				}
			}
		}
		if = {
			limit = {
				age > 8
			}
			random_list = {
				40 = {
					desc = childhood.1002.b_2
					send_interface_toast = {
						title = childhood.1002.b_2
						add_trait = diligent
					}
				}
				60 = {
					desc = childhood.1002.b_1
					send_interface_toast = {
						title = childhood.1002.b_1
						stress_impact = {
							base = minor_stress_gain
						}
					}
				}
			}
		}
		ai_chance = {
			base = 0
		}
	}
}

# Parent response
# by Linnéa Thimrén
childhood.1003 = {
	type = character_event
	title = childhood.1003.t
	desc = {
		first_valid = {
			triggered_desc = {
				trigger = {
					exists = scope:child
					scope:child = {
						age <= 8
						exists = scope:friend
					}
				}
				desc = childhood.1003.desc1
			}
			triggered_desc = {
				trigger = {
					exists = scope:child
					scope:child = {
						age <= 8
					}
				}
				desc = childhood.1003.desc2
			}
			triggered_desc = {
				trigger = {
					exists = scope:child
					scope:child = {
						age > 8
					}
				}
				desc = childhood.1003.desc3
			}
		}
	}
	theme = family
	left_portrait = scope:child

	option = {
		name = childhood.1003.a
		add_opinion = {
			modifier = supportive_parent
			target = scope:child
		}
	}
}

# Guardian parent reduces stress
# by Linnéa Thimrén
childhood.1004 = {
	type = character_event
	title = childhood.1004.t
	desc = childhood.1004.desc
	theme = education
	left_portrait = scope:guardian_parent
	
	trigger = {
		stress > lower_than_baseline_stress
		any_parent = {
			is_alive = yes
			any_relation = { type = ward this = root }
			stress < high_stress
		}
		NOT = { has_character_flag = had_event_childhood_1004 }
	}

	weight_multiplier = {
		base = 1
		compare_modifier = {
			value = stress
			offset = -25
			multiplier = 0.01
		}
	}

	immediate = {
		add_character_flag = {
			flag = had_event_childhood_1004
			years = 5
		}
		random_parent = {
			limit = {
				is_alive = yes
				any_relation = { type = ward this = root }
			}
			save_scope_as = guardian_parent
		}
	}

	option = {
		name = childhood.1004.a
		stress_impact = {
			base = minor_stress_loss
		}
	}
}

# Guardian parent gives stress
# by Linnéa Thimrén
childhood.1005 = {
	type = character_event
	title = childhood.1005.t
	desc = childhood.1005.desc
	theme = education
	left_portrait = scope:guardian_parent
	
	trigger = {
		any_parent = {
			is_alive = yes
			any_relation = { type = ward this = root }
			stress > high_medium_stress
		}
		NOT = { has_character_flag = had_event_childhood_1005 }
	}

	immediate = {
		add_character_flag = {
			flag = had_event_childhood_1005
			years = 5
		}
		random_parent = {
			limit = {
				is_alive = yes
				any_relation = { type = ward this = root }
			}
			save_scope_as = guardian_parent
		}
	}

	option = {
		name = childhood.1005.a
		stress_impact = {
			base = minor_stress_gain
		}
	}
	option = {
		name = childhood.1005.b
		trigger = {
			has_trait = lazy
		}
		trait = lazy
		ai_chance = {
			base = 50
			modifier = {
				add = 10
				has_trait = lazy
			}
		}
	}
}

# Guardian parent (diligent) gives stress to lazy child
# by Linnéa Thimrén
childhood.1006 = {
	type = character_event
	title = childhood.1006.t
	desc = childhood.1006.desc
	theme = education
	left_portrait = scope:guardian_parent
	
	trigger = {
		has_trait = lazy
		any_parent = {
			is_alive = yes
			has_trait = diligent
			any_relation = { type = ward this = root }
			stress > high_medium_stress
		}
		NOT = { has_character_flag = had_event_childhood_1006 }
	}

	immediate = {
		add_character_flag = {
			flag = had_event_childhood_1006
			years = 5
		}
		random_parent = {
			limit = {
				is_alive = yes
				any_relation = { type = ward this = root }
			}
			save_scope_as = guardian_parent
		}
	}

	option = {
		name = childhood.1006.a
		stress_impact = {
			base = 0
			lazy = medium_stress_gain
		}
	}
}

# Bully gives you stress
# by Linnéa Thimrén
childhood.1007 = {
	type = character_event
	title = childhood.1007.t
	desc = {
		desc = childhood.1007.opening
		first_valid = {
			random_valid = {
				triggered_desc = {
					trigger = {
						exists = scope:bully
						scope:bully = {
							has_personality_malicious_trigger = yes
						}
						age < childhood_education_start_age
					}
					desc = childhood.1007.young_malicious
				}
				triggered_desc = {
					trigger = {
						exists = scope:bully
						scope:bully = {
							has_personality_dominant_trigger = yes
						}
						age < childhood_education_start_age
					}
					desc = childhood.1007.young_dominant
				}
				triggered_desc = {
					trigger = {
						exists = scope:bully
						scope:bully = {
							has_personality_extroverted_trigger = yes
						}
						age < childhood_education_start_age
					}
					desc = childhood.1007.young_extroverted
				}
				triggered_desc = {
					trigger = {
						exists = scope:bully
						scope:bully = {
							has_personality_emotional_trigger = yes
						}
						age < childhood_education_start_age
					}
					desc = childhood.1007.young_emotional
				}
				triggered_desc = {
					trigger = {
						exists = scope:bully
						scope:bully = {
							has_personality_malicious_trigger = yes
						}
						age >= childhood_education_start_age
					}
					desc = childhood.1007.malicious
				}
				triggered_desc = {
					trigger = {
						exists = scope:bully
						scope:bully = {
							has_personality_dominant_trigger = yes
						}
						age >= childhood_education_start_age
					}
					desc = childhood.1007.dominant
				}
				triggered_desc = {
					trigger = {
						exists = scope:bully
						scope:bully = {
							has_personality_extroverted_trigger = yes
						}
						age >= childhood_education_start_age
					}
					desc = childhood.1007.extroverted
				}
			}
			triggered_desc = {
				trigger = {
				exists = scope:bully
				}
				desc = childhood.1007.fallback
			}
		}
		desc = childhood.1007.end
	}
	theme = unfriendly
	left_portrait = {
		character = scope:bully
		animation = anger
	}

	
	trigger = {
		any_relation = { type = bully count >= 1 }
		NOT = { has_character_flag = had_event_childhood_1007 }
	}

	immediate = {
		add_character_flag = {
			flag = had_event_childhood_1007
			years = 5
		}
		random_relation = {
			type = bully
			save_scope_as = bully
		}
		set_favorite_toy_effect = yes
	}

	option = {
		name = childhood.1007.a
		stress_impact = {
			base = medium_stress_gain
		}
	}
}

# To have a victim while malicious reduces stress
# by Linnéa Thimrén
childhood.1008 = {
	type = character_event
	title = childhood.1008.t
	desc = {
		desc = childhood.1008.opening
		first_valid = {
			random_valid = {
				triggered_desc = {
					trigger = {
						OR = {
							has_trait = rowdy
							has_trait = charming
						}
					}
					desc = childhood.1008.1
				}
				triggered_desc = {
					trigger = {
						OR = {
							has_trait = pensive
							has_trait = curious
							has_trait = bossy
						}
					}
					desc = childhood.1008.2
				}
				triggered_desc = {
					trigger = {
						OR = {
							has_trait = bossy
							has_trait = rowdy
						}
					}
					desc = childhood.1008.3
				}
			}
		}
	}
	theme = unfriendly
	left_portrait = {
		character = scope:victim
		animation = sadness
	}
	
	trigger = {
		stress > lower_than_baseline_stress
		has_personality_malicious_trigger = yes
		any_relation = { type = victim count >= 1 }
		NOT = { has_character_flag = had_event_childhood_1008 }
	}

	weight_multiplier = {
		base = 1
		compare_modifier = {
			value = stress
			offset = -25
			multiplier = 0.01
		}
	}

	immediate = {
		add_character_flag = {
			flag = had_event_childhood_1008
			years = 5
		}
		random_relation = {
			type = victim
			save_scope_as = victim
		}
	}

	option = {
		name = childhood.1008.a
		stress_impact = {
			base = medium_stress_loss
		}
	}
}

# Your friend reduces your stress
# by Linnéa Thimrén
childhood.1009 = {
	type = character_event
	title = childhood.1009.t
	desc = {
		desc = childhood.1009.opening
		random_valid = {
			desc = childhood.1009.1
			desc = childhood.1009.2
			desc = childhood.1009.3
		}
		desc = childhood.1009.end
	}
	theme = friendly
	left_portrait = scope:friend
	
	trigger = {
		stress > normal_baseline_stress
		any_relation = { type = friend count >= 1 }
		NOT = { has_character_flag = had_event_childhood_1009 }
	}

	weight_multiplier = {
		base = 1
		compare_modifier = {
			value = stress
			offset = -25
			multiplier = 0.01
		}
	}

	immediate = {
		add_character_flag = {
			flag = had_event_childhood_1009
			years = 5
		}
		random_relation = {
			type = friend
			save_scope_as = friend
		}
	}

	option = {
		name = childhood.1009.a
		stress_impact = {
			base = medium_stress_loss
		}
	}
}

# Crush gives/reduces stress
# by Linnéa Thimrén
childhood.1010 = {
	type = character_event
	title = childhood.1010.t
	desc = {
		desc = childhood.1010.opening
		first_valid = {
			triggered_desc = {
				trigger = {
					exists = scope:crush
					has_character_flag = returned_crush
				}
				desc = childhood.1010.returned
			}
			triggered_desc = {
				trigger = {
					exists = scope:crush
					NOT = { has_character_flag = returned_crush }
				}
				desc = childhood.1010.not_returned
			}
		}
	}
	theme = seduction
	left_portrait = scope:crush
	
	trigger = {
		any_relation = { type = crush count >= 1 }
		NOT = { has_character_flag = had_event_childhood_1010 }
	}

	immediate = {
		add_character_flag = {
			flag = had_event_childhood_1010
			years = 5
		}
		random_relation = {
			type = crush
			save_scope_as = crush
		}
		if = {
			limit = {
				scope:crush = {
					any_relation = { type = crush this = root }
				}
			}
			add_character_flag = returned_crush
		}
	}

	option = {
		name = childhood.1010.a
		trigger = {
			has_character_flag = returned_crush
		}
		stress_impact = {
			base = medium_stress_loss
		}
	}

	option = {
		name = childhood.1010.b
		trigger = {
			NOT = { has_character_flag = returned_crush }
		}
		stress_impact = {
			base = medium_stress_gain
		}
	}
	after = {
		remove_character_flag = returned_crush
	}
}

# Child might return an existing crush
# by Linnéa Thimrén
childhood.1011 = {
	type = character_event
	title = childhood.1011.t
	desc = {
		desc = childhood.1011.opening
		first_valid = {
			triggered_desc = {
				trigger = {
					exists = scope:crush_returned
					has_character_flag = returning_crush
				}
				desc = childhood.1011.returned
			}
			triggered_desc = {
				trigger = {
					exists = scope:crush_returned
					NOT = { has_character_flag = returning_crush }
				}
				desc = childhood.1011.not_returned
			}
		}
	}
	theme = education
	left_portrait = scope:crush_returned
	
	trigger = {
		exists = liege
		liege = {
			any_courtier_or_guest = {
				has_relation_crush = root
				save_temporary_scope_as = crush_check
			}
		}
		NOT = {
			has_relation_crush = scope:crush_check
		}
		NOT = { has_character_flag = had_event_childhood_1011 }
	}

	immediate = {
		add_character_flag = {
			flag = had_event_childhood_1011
			years = 5
		}
		liege = {
			random_courtier_or_guest = {
				limit = {
					has_relation_crush = root
				}
				save_scope_as = crush_returned
			}
		}
		hidden_effect = {
			# Is the crush returned?
			if = {
				limit = {
					OR = {
						has_sexuality = none
						is_attracted_to_gender_of = scope:crush_returned
					}
					opinion = {
						target = scope:crush_returned
						value > low_positive_opinion
					}
				}
				add_character_flag = returning_crush
			}
			# To give a sexuality if they don't have one
			if = {
				limit = {
					has_sexuality = none
				}
				random_list = {
					0 = {
						trigger = { NOT = { sex_same_as = scope:crush_holder } }
						modifier = { add = heterosexuality_chance }
						save_scope_value_as = {
							name = sexuality_heterosexual
							value = yes
						}
					}
					0 = {
						modifier = { add = bisexuality_chance }
						save_scope_value_as = {
							name = sexuality_bisexual
							value = yes
						}
					}
					0 = {
						trigger = { sex_same_as = scope:crush_holder }
						modifier = { add = homosexuality_chance }
						save_scope_value_as = {
							name = sexuality_homosexual
							value = yes
						}
					}
				}
			}
		}
	}

	option = {
		name = childhood.1011.a
		#To actually show the sexuality
		if = {
			limit = {
				has_sexuality = none
			}
			if = {
				limit = {
					exists = scope:sexuality_homosexual
				}
				set_sexuality = homosexual
			}
			else_if = {
				limit = {
					exists = scope:sexuality_bisexual
				}
				set_sexuality = bisexual
			}
			else_if = {
				limit = {
					exists = scope:sexuality_heterosexual
				}
				set_sexuality = heterosexual
			}
		}
		if = {
			limit = {
				NOT = { has_relation_crush = scope:crush_returned }
			}
			set_relation_crush = scope:crush_returned
		}
	}

	option = {
		name = childhood.1011.b
		scope:crush_returned = {
			add_opinion = {
				target = root
				modifier = refusal_opinion
				opinion = -10
			}
		}
	}
	after = {
		remove_character_flag = returning_crush
	}
}

# Cruel parent take child's toy away
# by Linnéa Thimrén
scripted_trigger childhood_1012_parent_trigger = {
	is_alive = yes
	any_relation = { type = ward this = root }
	has_personality_malicious_trigger = yes
}

childhood.1012 = {
	type = character_event
	title = childhood.1012.t
	desc = {
		desc = childhood.1012.desc
		first_valid = {
			triggered_desc = {
				trigger= {
					scope:guardian_parent = {
						has_trait = callous
					}
				}
				desc = childhood.1012.desc2
			}
			triggered_desc = {
				trigger= {
					scope:guardian_parent = {
						has_trait = sadistic
					}
				}
				desc =	childhood.1012.desc3
			}
		}
	}
	theme = education
	left_portrait = scope:guardian_parent

	trigger = {
		any_parent = {
			childhood_1012_parent_trigger = yes
		}
		NOT = { has_character_flag = had_event_childhood_1012 }
	}

	weight_multiplier = {
		base = 1
		modifier = {
			any_parent = {
				AND = {
					has_trait = callous
					has_trait = sadistic
				}
			}
			factor = 2
		}
		compare_modifier = {
			target = scope:guardian_parent
			value = stress
			offset = -25
			multiplier = 0.02
		}
	}

	immediate = {
		add_character_flag = {
			flag = had_event_childhood_1012
			years = 5
		}
		set_favorite_toy_effect = yes
		random_parent = {
			limit = {
				childhood_1012_parent_trigger = yes
			}
			save_scope_as = guardian_parent
		}
	}

	option = {
		name = childhood.1012.a
		add_stress = medium_stress_gain

		scope:guardian_parent = {
			change_nickname_weight_effect = { NICKNAME = nick_the_cruel CHANGE = nickname_weight_small_increase }
		}
	}
}

# You destroy your victims toy
# by Linnéa Thimrén
childhood.1013 = {
	type = character_event
	title = childhood.1013.t
	desc = childhood.1013.desc
	theme = unfriendly
	left_portrait = scope:victim
	
	trigger = {
		any_relation = {
			type = victim
			count >= 1
		}
		NOT = { has_character_flag = had_event_childhood_1013 }
	}

	immediate = {
		add_character_flag = {
			flag = had_event_childhood_1013
			years = 5
		}
		random_relation = { type = victim save_scope_as = victim }
		scope:victim = {
			set_favorite_toy_effect = yes
		}
	}

	option = {
		name = childhood.1013.a
		add_stress = medium_stress_loss
		scope:victim = {
			add_opinion = {
				target = root
				modifier = cruelty_opinion
				opinion = -10
			}
		}
		scope:victim = {
			trigger_event = childhood.1014
		}
	}
}

# Bully destroys your toy
# by Linnéa Thimrén
childhood.1014 = {
	type = character_event
	title = childhood.1014.t
	desc = childhood.1014.desc
	theme = unfriendly
	left_portrait = scope:bully
	
	immediate = {
		add_character_flag = bully_destroyed_toy
		random_relation = { type = bully save_scope_as = bully }
	}

	option = {
		name = childhood.1014.a
		add_stress = minor_stress_gain
		scope:bully = {
			add_opinion = {
				target = root
				modifier = respect_opinion
				opinion = -10
			}
		}
	}
}


##################################################
#
# You have the same focus as a friend/crush, study together!
# by Linnéa Thimrén
#
##################################################

# Study diplomacy
# by Linnéa Thimrén
scripted_trigger childhood_1015_relation_trigger = {
	has_focus = education_diplomacy
	is_ai = yes
	is_in_the_same_court_as_or_guest = root
}

childhood.1015 = {
	type = character_event
	title = childhood.1015.t
	desc = childhood.1015.desc
	theme = education
	left_portrait = scope:educator
	right_portrait = scope:province_holder
	lower_center_portrait = scope:study_friend
	
	trigger = {
		has_focus = education_diplomacy
		OR = {
			any_relation = {
				type = friend
				childhood_1015_relation_trigger = yes
			}
			any_relation = {
				type = crush
				childhood_1015_relation_trigger = yes
			}
		}
		exists = liege
		liege = { is_ai = yes }
		OR = {
			NOT = { any_relation = { type = guardian always = yes } }
			any_relation = { type = guardian is_ai = yes }
		}
		NOT = { has_character_flag = had_event_childhood_1015 }
	}

	immediate = {
		add_character_flag = {
			flag = had_event_childhood_1015
			years = 5
		}
		liege = {
			save_scope_as = liege
			random_sub_realm_county = {
				limit = {
					holder = {
						NOT = {
							this = scope:liege
						}
					}
				}
				save_scope_as = province
				holder = {
					save_scope_as = province_holder
				}
			}
		}
		random_relation = {
			type = friend
			limit = {
				childhood_1015_relation_trigger = yes
			}
			save_scope_as = study_friend
		}
		if = {
			limit = {
				NOT = { exists = scope:study_friend }
			}
			random_relation = {
				type = crush
				limit = {
					childhood_1015_relation_trigger = yes
				}
				save_scope_as = study_friend
			}
		}
		if = {
			limit = {
				any_relation = { type = guardian count >= 1 }
			}
			random_relation = {
				type = guardian
				save_scope_as = educator
			}
		}
		else = {
			scope:liege = {
				save_scope_as = educator
			}
		}
	}

	option = {
		name = childhood.1015.a
		scope:liege = {
			add_opinion = {
				target = root
				modifier = amused_opinion
				opinion = 10
			}
		}
		scope:province_holder = {
			add_opinion = {
				target = root
				modifier = amused_opinion
				opinion = 10
			}
		}
		ai_chance = {
			base = 50
		}
	}

	option = {
		name = childhood.1015.b
		custom_tooltip = childhood.1015.b.tt
		hidden_effect = {
			education_point_acquisition_effect = yes
			scope:study_friend = {
				education_point_acquisition_effect = yes
			}
		}
		ai_chance = {
			base = 50
		}
	}
}

# Study martial
# by Linnéa Thimrén
scripted_trigger childhood_1016_relation_trigger = {
	has_focus = education_martial
	is_ai = yes
	is_in_the_same_court_as_or_guest = root
}

childhood.1016 = {
	type = character_event
	title = childhood.1016.t
	desc = childhood.1016.desc
	theme = education
	left_portrait = scope:study_friend
	
	trigger = {
		has_focus = education_martial
		OR = {
			any_relation = {
				type = friend
				childhood_1016_relation_trigger = yes
			}
			any_relation = {
				type = crush
				childhood_1016_relation_trigger = yes
			}
		}
		liege = { is_ai = yes }
		OR = {
			NOT = { any_relation = { type = guardian always = yes } }
			any_relation = { type = guardian is_ai = yes }
		}
		NOT = { has_character_flag = had_event_childhood_1016 }
	}

	immediate = {
		add_character_flag = {
			flag = had_event_childhood_1016
			years = 5
		}
		liege = {
			random_knight = {
				save_scope_as = commander
			}
		}
		random_relation = {
			type = friend
			limit = {
				childhood_1016_relation_trigger = yes
			}
			save_scope_as = study_friend
		}
		if = {
			limit = {
				NOT = { exists = scope:study_friend }
			}
			random_relation = {
				type = crush
				limit = {
					childhood_1016_relation_trigger = yes
				}
				save_scope_as = study_friend
			}
		}
		if = {
			limit = {
				any_relation = { type = guardian count >= 1 }
			}
			random_relation = {
				type = guardian
				save_scope_as = educator
			}
		}
		else = {
			liege = {
				save_scope_as = educator
			}
		}
	}

	option = {
		name = childhood.1016.a
		liege = {
			add_opinion = {
				target = root
				modifier = amused_opinion
				opinion = 10
			}
		}
		scope:commander = {
			add_opinion = {
				target = root
				modifier = amused_opinion
				opinion = 10
			}
		}
		ai_chance = {
			base = 50
		}
	}

	option = {
		name = childhood.1016.b
		custom_tooltip = childhood.1016.b.tt
		hidden_effect = {
			education_point_acquisition_effect = yes
			scope:study_friend = {
				education_point_acquisition_effect = yes
			}
		}
		ai_chance = {
			base = 50
		}
	}
}

# Study stewardship
# by Linnéa Thimrén
scripted_trigger childhood_1017_relation_trigger = {
	has_focus = education_stewardship
	is_ai = yes
	is_in_the_same_court_as_or_guest = root
}

childhood.1017 = {
	type = character_event
	title = childhood.1017.t
	desc = childhood.1017.desc
	theme = education
	left_portrait = scope:study_friend
	right_portrait = scope:province_holder
	
	trigger = {
		has_focus = education_stewardship
		OR = {
			any_relation = {
				type = friend
				childhood_1017_relation_trigger = yes
			}
			any_relation = {
				type = crush
				childhood_1017_relation_trigger = yes
			}
		}
		liege = { is_ai = yes }
		OR = {
			NOT = { any_relation = { type = guardian always = yes } }
			any_relation = { type = guardian is_ai = yes }
		}
		NOT = { has_character_flag = had_event_childhood_1017 }
	}

	immediate = {
		add_character_flag = {
			flag = had_event_childhood_1017
			years = 5
		}
		liege = {
			random_sub_realm_county = {
				limit = {
					holder = {
						NOT = {
							this = scope:liege
						}
					}
				}
				save_scope_as = province
				holder = {
					save_scope_as = province_holder
				}
			}
		}
		random_relation = {
			type = friend
			limit = {
				childhood_1017_relation_trigger = yes
			}
			save_scope_as = study_friend
		}
		if = {
			limit = {
				NOT = { exists = scope:study_friend }
			}
			random_relation = {
				type = crush
				limit = {
					childhood_1017_relation_trigger = yes
				}
				save_scope_as = study_friend
			}
		}
		if = {
			limit = {
				any_relation = { type = guardian count >= 1 }
			}
			random_relation = {
				type = guardian
				save_scope_as = educator
			}
		}
		else = {
			liege = {
				save_scope_as = educator
			}
		}
	}

	option = {
		name = childhood.1017.a
		custom_tooltip = childhood.1017.a.tt
		hidden_effect = {
			education_point_acquisition_effect = yes
			scope:study_friend = {
				education_point_acquisition_effect = yes
			}
		}
		ai_chance = {
			base = 50
		}
	}

	option = {
		name = childhood.1017.b
		scope:province = {
			add_county_modifier = {
				modifier = governance_good_guidance_modifier
				years = 5
			}
		}
		ai_chance = {
			base = 50
		}
	}
}

# Study intrigue
# by Linnéa Thimrén
scripted_trigger childhood_1018_relation_trigger = {
	has_focus = education_intrigue
	is_ai = yes
	is_in_the_same_court_as_or_guest = root
}

childhood.1018 = {
	type = character_event
	title = childhood.1018.t
	desc = childhood.1018.desc
	theme = education
	left_portrait = scope:study_friend
	right_portrait = scope:province_holder
	
	trigger = {
		has_focus = education_intrigue
		or = {
			any_relation = {
				type = friend
				childhood_1018_relation_trigger = yes
			}
			any_relation = {
				type = crush
				childhood_1018_relation_trigger = yes
			}
		}
		liege = { is_ai = yes }
		OR = {
			NOT = { any_relation = { type = guardian always = yes } }
			any_relation = { type = guardian is_ai = yes }
		}
		NOT = { has_character_flag = had_event_childhood_1018 }
	}

	immediate = {
		add_character_flag = {
			flag = had_event_childhood_1018
			years = 5
		}
		liege = {
			random_sub_realm_county = {
				limit = {
					holder = {
						NOT = {
							this = scope:liege
						}
					}
				}
				save_scope_as = province
				holder = {
					save_scope_as = province_holder
				}
			}
		}
		random_relation = {
			type = friend
			limit = {
				childhood_1018_relation_trigger = yes
			}
			save_scope_as = study_friend
		}
		if = {
			limit = {
				NOT = { exists = scope:study_friend }
			}
			random_relation = {
				type = crush
				limit = {
					childhood_1018_relation_trigger = yes
				}
				save_scope_as = study_friend
			}
		}
		if = {
			limit = {
				any_relation = { type = guardian count >= 1 }
			}
			random_relation = {
				type = guardian
				save_scope_as = educator
			}
		}
		else = {
			liege = {
				save_scope_as = educator
			}
		}
	}

	option = {
		name = childhood.1018.a
		hidden_effect = {
			education_point_acquisition_effect = yes
			scope:study_friend = {
				education_point_acquisition_effect = yes
			}
		}
		custom_tooltip = childhood.1018.a.tt
		ai_chance = {
			base = 50
		}
	}

	option = {
		name = childhood.1018.b
		scope:province = {
			add_county_modifier = {
				modifier = governance_lenient_tax_policy_modifier
				years = 5
			}
		}
		ai_chance = {
			base = 50
		}
	}
}

# Study learning
# by Linnéa Thimrén
scripted_trigger childhood_1019_relation_trigger = {
	has_same_focus_as = root
	is_ai = yes
	is_in_the_same_court_as_or_guest = root
}

childhood.1019 = {
	type = character_event
	title = childhood.1019.t
	desc = childhood.1019.desc
	theme = education
	left_portrait = scope:study_friend
	
	trigger = {
		or = {
			has_focus = education_learning
			has_focus = education_stewardship
		}
		or = {
			any_relation = {
				type = friend
				childhood_1019_relation_trigger = yes
			}
			any_relation = {
				type = crush
				childhood_1019_relation_trigger = yes
			}
		}
		liege = { is_ai = yes }
		OR = {
			NOT = { any_relation = { type = guardian always = yes } }
			any_relation = { type = guardian is_ai = yes }
		}
		NOT = { has_character_flag = had_event_childhood_1019 }
	}

	weight_multiplier = {
		base = 1
		modifier = {
			add = 0.5
			has_focus = education_learning
		}
	}

	immediate = {
		add_character_flag = {
			flag = had_event_childhood_1019
			years = 5
		}
		liege = {
			random_sub_realm_county = {
				save_scope_as = province
			}
		}
		random_relation = {
			type = friend
			limit = {
				childhood_1019_relation_trigger = yes
			}
			save_scope_as = study_friend
		}
		if = {
			limit = {
				NOT = { exists = scope:study_friend }
			}
			random_relation = {
				type = crush
				limit = {
					childhood_1019_relation_trigger = yes
				}
				save_scope_as = study_friend
			}
		}
		if = {
			limit = {
				any_relation = { type = guardian count >= 1 }
			}
			random_relation = {
				type = guardian
				save_scope_as = educator
			}
		}
		else = {
			liege = {
				save_scope_as = educator
			}
		}
	}

	option = {
		name = childhood.1019.a
		if = {
			limit = {
				has_focus = education_learning
			}
			custom_tooltip = childhood.1019.a.tt1
		}
		else = {
			custom_tooltip = childhood.1019.a.tt2
		}
		hidden_effect = {
			education_point_acquisition_effect = yes
			scope:study_friend = {
				education_point_acquisition_effect = yes
			}
		}
		ai_chance = {
			base = 50
		}
	}

	option = {
		name = childhood.1019.b
		scope:province = {
			add_county_modifier = {
				modifier = governance_good_guidance_modifier
				years = 5
			}
		}
		ai_chance = {
			base = 50
		}
	}
}


#####################
#
# Random events
# by Linnéa Thimrén
#
#####################

# Get a pet cat!
# by Linnéa Thimrén
childhood.2001 = {
	type = character_event
	title = childhood.2001.t
	desc = {
		first_valid = {
			triggered_desc = {
				trigger = {
					exists = scope:educator
				}
				desc = childhood.2001.desc_educator
			}
			desc = childhood.2001.desc
		}
		desc = childhood.2001.desc_ending
	}
	theme = friendly
	left_portrait = scope:educator
	
	trigger = {
		NOT = { #No cats around already
			any_owned_story = {
				story_type = story_cycle_pet_cat
			}
		}
		NOT = { has_character_flag = had_event_childhood_2001 }
	}

	immediate = {
		add_character_flag = {
			flag = had_event_childhood_2001
			years = 5
		}
		save_scope_as = ward
		if = {
			limit = { #A friend is with you?
				OR = {
					any_vassal = {
						save_good_friend_character_trigger_check = yes
					}
					any_vassal = {
						any_child = {
							save_good_friend_character_trigger_check = yes
						}
					}
					trigger_if = {
						limit = {
							is_independent_ruler = no
						}
						exists = liege
						liege = {
							any_vassal = {
								any_child = {
									save_good_friend_character_trigger_check = yes
								}
							}
						}
						liege = {
							any_courtier_or_guest = {
								any_child = {
									save_good_friend_character_trigger_check = yes
								}
							}
						}
					}
				}
			}
			if = {
				limit = {
					any_relation = { type = friend count >= 1 }
				}
				random_relation = {
					type = friend
					save_scope_as = friend
				}
			}
			save_good_character_effect = {
				RELATION = friend
				SCOPE = friend
			}
		}
		if = {
			limit = {
				any_relation = {
					type = guardian
					is_ai = yes
					NOT = {
						any_owned_story = {
							story_type = story_cycle_pet_cat
						}
					}
				}
			}
			random_relation = {
				type = guardian
				save_scope_as = educator
			}
		}
		play_music_cue = "mx_cue_low_key_positive"
	}

	option = { #Keep it!
		name = childhood.2001.a
		start_cat_story_cycle_effect = yes
		ai_chance = {
			base = 50
		}
	}

	option = { #Give it to educator
		name = childhood.2001.b
		trigger = {
			exists = scope:educator
			scope:educator = {
				NOT = { #No cats around already
					any_owned_story = {
						story_type = story_cycle_pet_cat
					}
				}
			}
		}
		scope:educator = {
			trigger_event = childhood.2002
		}
		ai_chance = {
			base = 50
		}

		change_nickname_weight_effect = { NICKNAME = nick_the_cruel CHANGE = nickname_weight_small_decrease }
	}

	option = { #Give it to friend
		name = childhood.2003.b
		trigger = {
			exists = scope:friend
			scope:friend = {
				NOT = {  #No cats around already
					any_owned_story = {
						story_type = story_cycle_pet_cat
					}
				}
			}
		}
		if = {
			limit = {
				can_set_relation_friend_trigger = { CHARACTER = scope:friend }
			}
			show_as_tooltip = {
				set_relation_friend = scope:friend
			}
		}
		scope:friend = {
			trigger_event = childhood.2006
		}
		ai_chance = {
			base = 50
		}

		change_nickname_weight_effect = { NICKNAME = nick_the_cruel CHANGE = nickname_weight_small_decrease }
	}

	option = { #Kill it
		name = childhood.2001.c
		trigger = {
			has_trait = sadistic
		}
		trait = sadistic
		add_learning_skill = 1

		ai_chance = {
			base = 0
		}

		change_nickname_weight_effect = { NICKNAME = nick_the_cruel CHANGE = nickname_weight_small_increase }
	}
}

# Ward has found cat, gives it to you
# by Linnéa Thimrén
childhood.2002 = {
	type = character_event
	title = childhood.2001.t
	desc = childhood.2002.desc
	theme = education
	left_portrait = scope:ward

	option = { #Accept it
		name = childhood.2002.a
		start_cat_story_cycle_effect = yes
		ai_chance = {
			base = 100
		}
	}

	option = { #Decline it
		name = childhood.2002.b
		ai_chance = {
			base = 0
		}
	}

	option = { #Convince them they owe you for the kitty
		name = childhood.2002.c
		trigger = {
			scope:ward = { is_ai = yes }
			has_trait = deceitful
			can_add_hook = {
				target = scope:ward
				type = favor_hook
			}
		}
		trait = deceitful
		scope:ward = {
			start_cat_story_cycle_effect = yes
		}
		add_hook = {
			type = favor_hook
			target = scope:ward
			days = default_favor_duration
		}
		ai_chance = {
			base = 100
			modifier = {
				add = 50
				has_trait = deceitful
			}
			ai_value_modifier = {
				ai_honor = -0.75
			}
		}
	}
}

# Get a pet dog!
# by Linnéa Thimrén
childhood.2003 = {
	type = character_event
	title = childhood.2003.t
	desc = {
		first_valid = {
			triggered_desc = {
				trigger = {
					exists = scope:educator
				}
				desc = childhood.2003.desc_educator
			}
			triggered_desc = {
				trigger = {
					exists = scope:friend
				}
				desc = childhood.2003.desc_friend
			}
			desc = childhood.2003.desc
		}
		desc = childhood.2003.desc_ending
	}
	theme = friendly
	left_portrait = scope:educator
	right_portrait = scope:friend

	trigger = {
		NOT = { #No dogs around already
			any_owned_story = {
				story_type = story_cycle_pet_dog
			}
		}
		NOT = { has_character_flag = had_event_childhood_2003 }
	}

	immediate = {
		add_character_flag = {
			flag = had_event_childhood_2003
			years = 5
		}
		save_scope_as = ward
		if = {
			limit = { #A friend is with you?
				OR = {
					any_vassal = {
						save_good_friend_character_trigger_check = yes
					}
					any_vassal = {
						any_child = {
							save_good_friend_character_trigger_check = yes
						}
					}
					trigger_if = {
						limit = {
							is_independent_ruler = no
						}
						exists = liege
						liege = {
							any_vassal = {
								any_child = {
									save_good_friend_character_trigger_check = yes
								}
							}
						}
						liege = {
							any_courtier_or_guest = {
								any_child = {
									save_good_friend_character_trigger_check = yes
								}
							}
						}
					}
				}
			}
			if = {
				limit = {
					any_relation = { type = friend count >= 1 }
				}
				random_relation = {
					type = friend
					save_scope_as = friend
				}
			}
			save_good_character_effect = {
				RELATION = friend
				SCOPE = friend
			}
		}
		if = {
			limit = {
				any_relation = {
					type = guardian
					NOT = {
						any_owned_story = {
							story_type = story_cycle_pet_dog
						}
					}
				}
			}
			random_relation = {
				type = guardian
				save_scope_as = educator
			}
		}
		play_music_cue = "mx_cue_low_key_positive"
	}

	option = { #Keep it!
		name = childhood.2003.a
		start_dog_story_cycle_effect = yes
		ai_chance = {
			base = 50
		}
	}

	option = { #Give it to friend
		name = childhood.2003.b
		trigger = {
			exists = scope:friend
			scope:friend = {
				NOT = {  #No cats around already
					any_owned_story = {
						story_type = story_cycle_pet_dog
					}
				}
			}
		}
		if = {
			limit = {
				can_set_relation_friend_trigger = { CHARACTER = scope:friend }
			}
			show_as_tooltip = {
				set_relation_friend = scope:friend
			}
		}
		scope:friend = {
			trigger_event = childhood.2005
		}
		ai_chance = {
			base = 50
		}

		change_nickname_weight_effect = { NICKNAME = nick_the_cruel CHANGE = nickname_weight_small_decrease }
	}

	option = { #Give it to educator
		name = childhood.2003.c
		trigger = {
			exists = scope:educator
			scope:educator = {
				NOT = { #No cats around already
					any_owned_story = {
						story_type = story_cycle_pet_dog
					}
				}
			}
		}
		scope:educator = {
			trigger_event = childhood.2004
		}
		ai_chance = {
			base = 50
		}

		change_nickname_weight_effect = { NICKNAME = nick_the_cruel CHANGE = nickname_weight_small_decrease }
	}

	option = { #Kill it
		name = childhood.2003.d
		trigger = {
			has_trait = sadistic
		}
		trait = sadistic
		add_learning_skill = 1
		
		ai_chance = {
			base = 0
		}

		change_nickname_weight_effect = { NICKNAME = nick_the_cruel CHANGE = nickname_weight_small_increase }
	}
}

# Ward has found dog, gives it to you
# by Linnéa Thimrén
childhood.2004 = {
	type = character_event
	title = childhood.2003.t
	desc = childhood.2004.desc
	theme = education
	left_portrait = scope:ward

	option = { #Accept it
		name = childhood.2002.a
		start_dog_story_cycle_effect = yes
		ai_chance = {
			base = 100
		}
	}

	option = { #Decline it
		name = childhood.2002.b
		ai_chance = {
			base = 0
		}
	}

	option = { #Convince them they owe you for the puppy
		name = childhood.2002.c
		trigger = {
			scope:ward = { is_ai = yes }
			has_trait = deceitful
			can_add_hook = {
				target = scope:ward
				type = favor_hook
			}
		}
		trait = deceitful
		scope:ward = {
			start_dog_story_cycle_effect = yes
		}
		add_hook = {
			type = favor_hook
			target = scope:ward
			days = default_favor_duration
		}
		ai_chance = {
			base = 100
			modifier = {
				add = 50
				has_trait = deceitful
			}
			ai_value_modifier = {
				ai_honor = -0.75
			}
		}
	}
}

# Other child has found puppy, gives it to you
# by Linnéa Thimrén
childhood.2005 = {
	type = character_event
	title = childhood.2003.t
	desc = childhood.2005.desc
	theme = education
	left_portrait = scope:ward

	option = { #Accept it
		name = childhood.2005.a
		start_dog_story_cycle_effect = yes
		ai_chance = {
			base = 100
		}
	}

	option = { #Decline it
		name = childhood.2005.b
		ai_chance = {
			base = 0
		}
	}
}

# Other child has found kitten, gives it to you
# by Linnéa Thimrén
childhood.2006 = {
	type = character_event
	title = childhood.2001.t
	desc = childhood.2006.desc
	theme = education
	left_portrait = scope:ward

	option = { #Accept it
		name = childhood.2006.a
		start_cat_story_cycle_effect = yes
		ai_chance = {
			base = 100
		}
	}

	option = { #Decline it
		name = childhood.2006.b
		ai_chance = {
			base = 0
		}
	}
}

# Convince ward they owe you
# by Linnéa Thimrén
scripted_trigger childhood_2010_ward_trigger = {
	age >= 4
	root = {
		can_add_hook = {
			target = prev
			type = favor_hook
		}
	}
}

childhood.2010 = {
	type = character_event
	title = childhood.2010.t
	desc = {
		desc = childhood.2010.desc_opening
		first_valid = {
			triggered_desc = {
			    trigger = {
					has_personality_introverted_trigger = yes
			    }
			    desc = childhood.2010.desc_shy
			}
			triggered_desc = {
			    trigger = {
					has_personality_malicious_trigger = yes
			    }
			    desc = childhood.2010.desc_mean
			}
			triggered_desc = {
			    trigger = {
					has_personality_dominant_trigger = yes
			    }
			    desc = childhood.2010.desc_proud
			}
			desc = childhood.2010.desc_fallback
		}
	}
	theme = education
	left_portrait = scope:ward
	
	trigger = {
		any_relation = {
			type = ward
			childhood_2010_ward_trigger = yes
		}
		NOT = { has_character_flag = had_event_childhood_2010 }
	}

	weight_multiplier = {
		base = 0.5
		modifier = {
			add = 0.5
			has_personality_malicious_trigger = yes
		}
	}

	immediate = {
		add_character_flag = {
			flag = had_event_childhood_2010
			years = 5
		}
		save_scope_as = guardian #For ward's event
		random_relation = {
			type = ward
			limit = {
				childhood_2010_ward_trigger = yes
			}
			save_scope_as = ward
		}
	}

	option = { #I'll get a hook pls!
		name = childhood.2010.a
		add_hook = {
			type = favor_hook
			target = scope:ward
			days = default_favor_duration
		}
		scope:ward = {
			trigger_event = childhood.2011
		}
		ai_chance = {
			base = 100
		}
	}

	option = { #I am a good person thank you very much
		name = childhood.2010.b
		progress_towards_friend_effect = {
			CHARACTER = scope:ward
			OPINION = yes
		}
		ai_chance = {
			base = 0
		}
	}
}

# Event for ward about them now owing a hook to guardian
# by Linnéa Thimrén
childhood.2011 = {
	type = character_event
	title = childhood.2010.t
	desc = childhood.2011.desc
	theme = education
	left_portrait = scope:guardian

	immediate = {
		show_as_tooltip = {
			scope:guardian = {
				add_hook = {
					type = favor_hook
					target = root
					days = default_favor_duration
				}
			}
		}
		hidden_effect = {
			education_point_acquisition_effect = yes
		}
		custom_tooltip = childhood.2011.tt
	}

	option = { #Sounds legit
		name = childhood.2011.a
	}
}

