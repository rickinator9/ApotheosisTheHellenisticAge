namespace = ATHA_game_start

# Assign spartan dual monarch correctly.
ATHA_game_start.1 = {
	type = empty
	hidden = yes

    immediate = {
        character:spartan00241 = {
            liege = {
				assign_councillor_type = {
					type = councillor_spartan_dual_monarch
					target = PREV
				}
            }
        }
    }
}

# Assign city state values.
ATHA_game_start.2 = {
	type = empty
	hidden = yes

	immediate = {
		every_ruler = {
			limit = {
				highest_held_title_tier >= tier_county
				government_has_flag = is_city_state_government
			}

			assign_initial_corruption_value = yes
			assign_initial_franchise_value = yes

			if = {
				limit = { 
					highest_held_title_tier >= tier_duchy
					has_government = city_state_democratic_government
				}

				primary_title = { add_title_law = democratic_succession_law }
			}
			if = {
				limit = { 
					highest_held_title_tier >= tier_duchy
					has_government = city_state_oligarchic_government
				}

				primary_title = { add_title_law = oligarchic_succession_law }
			}
			if = {
				limit = { 
					highest_held_title_tier >= tier_duchy
					has_government = city_state_aristocratic_government
				}

				primary_title = { add_title_law = aristocratic_succession_law }
			}
		}
	}
}

# Assign starting vassal contracts
ATHA_game_start.3 = {
	type = empty
	hidden = yes

	immediate = {
		every_ruler = {
			limit = {
				highest_held_title_tier >= tier_county
				NOT = { is_independent_ruler = yes }
			}
			if = {
				limit = {
					government_has_flag = is_city_state_government
					should_start_with_dependent_role = no
				}
				vassal_contract_set_obligation_level = {
					type = vassal_role
					level = vassal_role_city_state_autonomous
				}
				vassal_contract_set_obligation_level = {
					type = coinage_rights
					level = coinage_rights_granted
				}
				vassal_contract_set_obligation_level = {
					type = religious_rights
					level = religious_rights_protected
				}
				vassal_contract_set_obligation_level = {
					type = title_revocation_rights
					level = title_revocation_rights_protected
				}
			}
			else_if = {
				limit = {
					government_has_flag = is_city_state_government
					should_start_with_dependent_role = yes	
				}
				vassal_contract_set_obligation_level = {
					type = vassal_role
					level = vassal_role_city_state_dependent
				}
			}
			else_if = {
				limit = {
					government_has_flag = is_coalition_government
					should_start_with_dependent_role = no
				}
				vassal_contract_set_obligation_level = {
					type = vassal_role
					level = vassal_role_coalition_autonomous
				}
				vassal_contract_set_obligation_level = {
					type = coinage_rights
					level = coinage_rights_granted
				}
				vassal_contract_set_obligation_level = {
					type = religious_rights
					level = religious_rights_protected
				}
				vassal_contract_set_obligation_level = {
					type = title_revocation_rights
					level = title_revocation_rights_protected
				}
			}
			else_if = {
				limit = {
					government_has_flag = is_coalition_government
					should_start_with_dependent_role = yes
				}
				vassal_contract_set_obligation_level = {
					type = vassal_role
					level = vassal_role_coalition_dependent
				}
			}
			else_if = {
				limit = {
					has_government = bureaucracy_civil_government
				}
				vassal_contract_set_obligation_level = {
					type = vassal_role
					level = vassal_role_bureaucracy_civil
				}
			}
			else_if = {
				limit = {
					has_government = bureaucracy_military_government
				}
				vassal_contract_set_obligation_level = {
					type = vassal_role
					level = vassal_role_bureaucracy_military
				}
			}
			else_if = {
				limit = {
					has_government = feudal_government
				}
				vassal_contract_set_obligation_level = {
					type = vassal_role
					level = vassal_role_bureaucracy_feudal
				}
			}
			if = {
				limit = {
					OR = {
						should_start_with_colony_rights = yes
						has_character_flag = has_colony_rights
					}	
				}
				vassal_contract_set_obligation_level = {
					type = colony_rights
					level = colony_rights_granted
				}
			}
			if = {
				limit = {
					has_character_flag = has_coinage_rights
				}
				vassal_contract_set_obligation_level = {
					type = coinage_rights
					level = coinage_rights_granted
				}
			}
			if = {
				limit = {
					has_character_flag = has_gift_estate_rights
				}
				vassal_contract_set_obligation_level = {
					type = gift_estate_rights
					level = gift_estate_rights_granted
				}
				save_temporary_scope_as = gift_estate_vassal
				liege = {
					add_hook = {
						type = vassal_contract_weak_hook
						target = scope:gift_estate_vassal
					}	
				}
			}
		}
	}
}

# Add/subtract building slots from certain holding types
ATHA_game_start.4 = {
	type = empty
	hidden = yes

	immediate = {
		every_province = {
			if = {
				limit = { has_holding_type = fort_holding }

				add_building_slot = -1
			}
			else_if = {
				limit = { has_holding_type = castle_holding }

				add_building_slot = 1
			}
		}
	}
}

# Distribute modifiers for corruption level
ATHA_game_start.5 = {
	type = empty
	hidden = yes

	immediate = {
		every_ruler = {
			limit = { is_city_state = yes }

			invoke_corruption_change_effect = yes
		}
	}
}

# Set centralisation laws for governments
ATHA_game_start.6 = {
	type = empty
	hidden = yes

	immediate = {
		every_ruler = {
			if = {
				limit = {
					OR = {
						government_has_flag = is_sympolity_government
						government_has_flag = is_bureaucracy_government
					}
					NOT = { government_has_flag = is_alliance_government } # Amphictyonies should have lower centralisation
				}
				add_realm_law_skip_effects = crown_authority_1
			}
			if = {
				limit = {
					OR = {
						government_has_flag = is_league_government
						government_has_flag = is_city_state_government
					}
				}
				add_realm_law_skip_effects = crown_authority_2
			}
		}
	}
}