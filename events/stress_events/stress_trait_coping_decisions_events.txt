namespace = stress_trait_coping_decisions

#Drunkard
#Hashishiyah
#Rakish
#Reclusive
#Irritable
#Flagellant
#Profligate
#Improvident
#Contrite
#Comfort Eater
#Inappetetic
#Journaller
#Confider
#Athletic





###############
#	DRUNKARD
###############

#Basic event
#by Linnéa Thimrén
stress_trait_coping_decisions.1001 = {
	type = character_event
	title = stress_trait_coping_decisions.1001.t
	desc = stress_trait_coping_decisions.1001.desc
	theme = mental_break
	override_background = { event_background = tavern }
	left_portrait = {
		character = root
		animation = personality_irrational
	}

	option = {
		name = stress_trait_coping_decisions.1001.a
		trait = drunkard
		add_prestige = medium_prestige_loss
		add_stress = medium_stress_loss
	}
}


#Vassal/liege is also drunkard! Bond
#by Linnéa Thimrén
stress_trait_coping_decisions.1002 = {
	type = character_event
	title = stress_trait_coping_decisions.1002.t
	desc = stress_trait_coping_decisions.1002.desc
	theme = mental_break
	override_background = { event_background = tavern }
	left_portrait = {
		character = root
		animation = personality_irrational
	}
	right_portrait = {
		character = scope:fellow_drunkard
		animation = personality_irrational
	}

	trigger = {
		OR = {
			any_vassal = {
				NOT = { has_relation_rival = root }
				has_trait = drunkard
				is_ai = yes
			}
			AND = {
				exists = liege
				NOT = { this = liege }
				NOT = { has_relation_rival = root }
				has_trait = drunkard
				is_ai = yes
			}
		}
	}

	weight_multiplier = {
		base = 1

		modifier = { #Less likely if you have many friends already
			add = -0.75
			any_relation = {
				type = friend
				count >= 2
			}
		}

		modifier = { #More likely if they're a potential friend already
			add = 0.25
			OR = {
				any_vassal = {
					NOT = { has_relation_rival = root }
					has_trait = drunkard
					is_ai = yes
					has_relation_potential_friend = root
				}
				AND = {
					exists = liege
					NOT = { this = liege }
					NOT = { has_relation_rival = root }
					has_trait = drunkard
					is_ai = yes
					has_relation_potential_friend = root
				}
			}
		}
	}

	immediate = {
		save_scope_as = original_drunkard
		if = {
			limit = {
				exists = liege
				NOT = { this = liege }
				NOT = { has_relation_rival = root }
				has_trait = drunkard
				is_ai = yes
			}
			liege = {
				save_scope_as = fellow_drunkard
			}
		}
		else = {
			random_vassal = {
				limit = {
					NOT = { has_relation_rival = root }
					has_trait = drunkard
					is_ai = yes
				}
				save_scope_as = fellow_drunkard
			}
		}

		#To clear out any bad blood between you
		hidden_effect = {
			if = {
				limit = {
					has_relation_potential_rival = scope:fellow_drunkard
				}
				remove_relation_potential_rival = scope:fellow_drunkard
			}
		}
	}

	option = {
		name = stress_trait_coping_decisions.1002.a
		trait = drunkard
		add_prestige = medium_prestige_loss
		add_stress = medium_stress_loss
		show_as_tooltip = {
			if = {
				limit = {
					has_relation_friend = scope:fellow_drunkard
				}
				scope:fellow_drunkard = {
					add_opinion = {
						target = root
						modifier = friendliness_opinion
						opinion = 20
					}
				}
			}
			else = {
				set_relation_friend = scope:fellow_drunkard
			}
		}
		#Response event for your fellow drunkard
		scope:fellow_drunkard = {
			trigger_event = stress_trait_coping_decisions.1003
		}
	}
}

#Response event for your fellow drunkard
stress_trait_coping_decisions.1003 = {
	type = character_event
	title = stress_trait_coping_decisions.1003.t
	desc = stress_trait_coping_decisions.1003.desc
	theme = mental_break
	left_portrait = {
		character = root
		animation = personality_irrational
	}
	right_portrait = {
		character = scope:original_drunkard
		animation = personality_irrational
	}

	immediate = {
		if = {
			limit = {
				has_relation_friend = scope:original_drunkard
			}
			scope:original_drunkard = {
				add_opinion = {
					target = root
					modifier = friendliness_opinion
					opinion = 20
				}
			}
		}
		else = {
			set_relation_friend = scope:original_drunkard
		}
	}

	option = {
		name = stress_trait_coping_decisions.1002.a
		trait = drunkard
		add_stress = medium_stress_loss
	}
}


#Hmm... You wake up with sheep
#by Linnéa Thimrén
stress_trait_coping_decisions.1004 = {
	type = character_event
	title = stress_trait_coping_decisions.1004.t
	desc = stress_trait_coping_decisions.1004.desc
	theme = mental_break
	override_background = {
		reference = terrain_scope
	}
	left_portrait = {
		character = root
		animation = disbelief
	}

	option = {
		name = stress_trait_coping_decisions.1004.a
		trait = drunkard
		add_stress = medium_stress_loss
	}
}

###############
#	HASHISHIYAH
###############

#Basic event
#by Linnéa Thimrén
stress_trait_coping_decisions.1501 = {
	type = character_event
	title = stress_trait_coping_decisions.1501.t
	desc = stress_trait_coping_decisions.1501.desc
	theme = mental_break
	left_portrait = {
		character = root
		animation = personality_irrational
	}

	option = {
		name = stress_trait_coping_decisions.1501.a
		trait = hashishiyah
		add_character_modifier = {
			modifier = stress_hashish_stupor
			years = 2
		}
		add_stress = medium_stress_loss
	}
}


###############
#	RAKISH
###############

#Basic event
#by Linnéa Thimrén
stress_trait_coping_decisions.2001 = {
	type = character_event
	title = stress_trait_coping_decisions.2001.t
	desc = {
		first_valid = {
			triggered_desc = {
				trigger = {
					is_female = yes
				}
				desc = stress_trait_coping_decisions.2001.desc_woman
			}
			desc = stress_trait_coping_decisions.2001.desc_man
		}
		desc = stress_trait_coping_decisions.2001.desc_ending
	}
	theme = mental_break
	override_background = { event_background = tavern }
	left_portrait = {
		character = root
		animation = personality_bold
	}

	option = {
		name = stress_trait_coping_decisions.2001.a
		trait = rakish
		remove_short_term_gold = minor_gold_value
		rakish_brothel_night_effect = yes
	}
}


#Your stuff got stolen by a person in a brothel!
#by Linnéa Thimrén
stress_trait_coping_decisions.2002 = {
	type = character_event
	title = stress_trait_coping_decisions.2002.t
	desc = {
		first_valid = {
			triggered_desc = {
				trigger = {
					is_female = yes
				}
				desc = stress_trait_coping_decisions.2002.desc_woman
			}
			desc = stress_trait_coping_decisions.2002.desc_man
		}
		desc = stress_trait_coping_decisions.2002.desc
		desc = {
			first_valid = {
				triggered_desc = {
					trigger = {
						exists = scope:rival
					}
					desc = stress_trait_coping_decisions.2002.desc_ending_rival
				}
				desc = stress_trait_coping_decisions.2002.desc_ending
			}
		}
	}
	theme = mental_break
	override_background = { event_background = tavern }
	left_portrait = {
		character = root
		animation = shock
		triggered_outfit = {
			remove_default_outfit = yes
			outfit_tags = { no_clothes }
		}
	}
	right_portrait = {
		character = scope:rival
		animation = schadenfreude
	}

	trigger = {
		short_term_gold >= 20
		OR = {
			exists = scope:from_stress_loss_decision
			has_trait = lustful
		}
	}

	weight_multiplier = {
		base = 1
		modifier = { #More likely if you have a rival and it's triggered from the yearly pulse
			add = 2
			NOT = { exists = scope:from_stress_loss_decision }
			any_relation = {
				type = rival
				is_ai = yes
			}
		}
	}

	immediate = {
		hidden_effect = {
			if = {
				limit = {
					any_relation = {
						type = rival
						is_ai = yes
					}
				}
				random_relation = {
					type = rival
					limit = {
						is_ai = yes
					}
					save_scope_as = rival
				}
			}
		}
	}

	option = {
		name = stress_trait_coping_decisions.2002.a
		trigger = {
			NOR = { 
				exists = scope:rival
				has_trait = lustful
			}
		}
		trait = rakish
		hidden_effect = {
			rakish_brothel_night_effect = yes
		}
		remove_short_term_gold = 20
		add_prestige = minor_prestige_loss
	}

	option = {
		name = stress_trait_coping_decisions.2002.a
		trigger = {
			NOT = { exists = scope:rival }
			NOT = { has_trait = rakish }
			has_trait = lustful
		}
		trait = lustful
		hidden_effect = {
			rakish_brothel_night_effect = yes
		}
		remove_short_term_gold = 20
		add_prestige = minor_prestige_loss
	}

	option = {
		name = stress_trait_coping_decisions.2002.b
		trigger = {
			exists = scope:rival
		}
		trait = rakish
		hidden_effect = {
			rakish_brothel_night_effect = yes
		}
		remove_short_term_gold = 20
		add_prestige = minor_prestige_loss
	}
}


###############
#	RECLUSIVE
###############

#Basic event
#by Linnéa Thimrén
stress_trait_coping_decisions.2501 = {
	type = character_event
	title = stress_trait_coping_decisions.2501.t
	desc = stress_trait_coping_decisions.2501.desc
	theme = mental_break
	left_portrait = {
		character = root
		animation = personality_content
	}

	option = {
		name = stress_trait_coping_decisions.2501.a
		trait = reclusive
		add_prestige = medium_prestige_loss
		add_stress = medium_stress_loss
	}
}


###############
#	IRRITABLE
###############

#Basic event
#by Linnéa Thimrén
stress_trait_coping_decisions.3001 = {
	type = character_event
	title = stress_trait_coping_decisions.3001.t
	desc = {
		first_valid = {
			triggered_desc = {
				trigger = {
					exists = scope:vassal_opinion
				}
				desc = stress_trait_coping_decisions.3001.desc_vassal
			}
			desc = {
				first_valid = {
					triggered_desc = {
						trigger = {
							exists = scope:vassal
							exists = scope:vassal_2
						}
						desc = stress_trait_coping_decisions.3001.desc_has_vassals
					}
					desc = {
						first_valid = {
							triggered_desc = {
								trigger = {
									exists = scope:vassal
								}
								desc = stress_trait_coping_decisions.3001.desc_has_vassal
							}
							desc = stress_trait_coping_decisions.3001.desc
						}
					}
				}
			}
		}
	}
	theme = mental_break
	left_portrait = {
		character = root
		animation = schadenfreude
	}
	right_portrait = scope:vassal
	lower_right_portrait = scope:vassal_2

	immediate = {
		get_quirk_character_effect = yes
		hidden_effect = {
			random_list = {
				50 = {
					trigger = {
						any_vassal = {
							count >= 1
						}
					}
					#Pick vassal to insult. Preferably not a friend
					save_scope_value_as = {
						name = vassal_opinion
						value = yes
					}
					random_vassal = {
						limit = {
							NOR = {
								has_relation_friend = root
								has_relation_potential_friend = root
							}
						}
						alternative_limit = {
							NOT = { has_relation_friend = root }
						}
						alternative_limit = {
							is_alive = yes
						}
						save_scope_as = vassal
					}
				}
				50 = {
					if = {
						limit = {
							any_vassal = {
								count >= 2
							}
						}
						#Pick vassals to start insulting. Preferably not friends
						random_vassal = {
							limit = {
								NOR = {
									has_relation_friend = root
									has_relation_potential_friend = root
								}
							}
							alternative_limit = {
								NOT = { has_relation_friend = root }
							}
							alternative_limit = {
								is_alive = yes
							}
							save_scope_as = vassal
						}
						random_vassal = {
							limit = {
								NOT = { this = scope:vassal }
								NOR = {
									has_relation_friend = root
									has_relation_potential_friend = root
								}
							}
							alternative_limit = {
								NOT = { this = scope:vassal }
								NOT = { has_relation_friend = root }
							}
							alternative_limit = {
								NOT = { this = scope:vassal }
							}
							save_scope_as = vassal_2
						}
					}
					else_if = {
						limit = {
							any_vassal = {
								count = 1
							}
						}
						#Pick vassal to start insulting. Preferably not a friend
						random_vassal = {
							limit = {
								NOR = {
									has_relation_friend = root
									has_relation_potential_friend = root
								}
							}
							alternative_limit = {
								NOT = { has_relation_friend = root }
							}
							alternative_limit = {
								is_alive = yes
							}
							save_scope_as = vassal
						}
					}
					else = {
						save_scope_value_as = {
							name = courtiers
							value = yes
						}
					}
				}
			}
		}
	}

	option = {
		name = {
			trigger = {
				exists = scope:vassal_opinion
			}
			text = stress_trait_coping_decisions.3001.a_vassal
		}
		name = {
			trigger = {
				NOT = { exists = scope:vassal_opinion }
			}
			text = stress_trait_coping_decisions.3001.a
		}
		trait = irritable
		if = {
			limit = {
				exists = scope:vassal_opinion
			}
			scope:vassal = {
				add_opinion = {
					modifier = insult_opinion
					opinion = medium_negative_opinion
					target = root
				}
			}
		}
		else_if = {
			limit = {
				exists = scope:courtiers
			}
			add_character_modifier = {
				modifier = irritating_everyone_courtier_modifier
				years = 1
			}
		}
		else = {
			add_character_modifier = {
				modifier = irritating_everyone_modifier
				years = 1
			}
		}
		add_stress = medium_stress_loss
	}
}


###############
#	FLAGELLANT
###############

#Basic event
#by Linnéa Thimrén
stress_trait_coping_decisions.3501 = {
	type = character_event
	title = stress_trait_coping_decisions.3501.t
	desc = stress_trait_coping_decisions.3501.desc
	theme = mental_break
	left_portrait = {
		character = root
		animation = pain
	}

	option = {
		name = stress_trait_coping_decisions.3501.a
		trait = flagellant
		increase_wounds_effect = { REASON = whipping }
		add_stress = major_stress_loss
	}
}


###############
#	PROFLIGATE
###############

#Basic event
#by Linnéa Thimrén
stress_trait_coping_decisions.4001 = {
	type = character_event
	title = stress_trait_coping_decisions.4001.t
	desc = stress_trait_coping_decisions.4001.desc
	theme = mental_break
	override_background = {
		event_background = market
	}
	left_portrait = {
		character = root
		animation = personality_greedy
	}

	immediate = {
		capital_county = {
			save_scope_as = county
		}
	}

	option = {
		name = stress_trait_coping_decisions.4001.a
		trait = profligate
		remove_short_term_gold = medium_gold_value
		add_stress = medium_stress_loss
	}
}


###############
#	IMPROVIDENT
###############

#Basic event
#by Linnéa Thimrén
stress_trait_coping_decisions.4501 = {
	type = character_event
	title = stress_trait_coping_decisions.4501.t
	desc = stress_trait_coping_decisions.4501.desc
	theme = mental_break
	override_background = {
		event_background = alley_day
	}
	left_portrait = {
		character = root
		animation = personality_compassionate
	}

	option = {
		name = stress_trait_coping_decisions.4501.a
		trait = improvident
		remove_short_term_gold = medium_gold_value
		add_stress = medium_stress_loss

		change_city_state_corruption = { AMOUNT_ARG = corruption_minor_decrease }
	}
}


###############
#	CONTRITE
###############

#Basic event
#by Linnéa Thimrén
stress_trait_coping_decisions.5001 = {
	type = character_event
	title = stress_trait_coping_decisions.5001.t
	desc = {
		desc = stress_trait_coping_decisions.5001.desc_opening
		first_valid = {
			triggered_desc = {
				trigger = {
					exists = scope:secret
				}
				desc = stress_trait_coping_decisions.5001.desc_secret
			}
			desc = {
				first_valid = {
					triggered_desc = {
						trigger = {
							num_sinful_traits >= 1
						}
						desc = stress_trait_coping_decisions.5001.desc_sin
					}
					desc = stress_trait_coping_decisions.5001.desc
				}
			}
		}
		desc = stress_trait_coping_decisions.5001.desc_ending
	}
	theme = mental_break
	left_portrait = {
		character = root
		animation = shame
	}

	immediate = {
		if = {
			limit = {
				any_secret = {
					can_be_exposed_by = root
				}
			}
			random_secret = {
				limit = {
					can_be_exposed_by = root
				}
				save_scope_as = secret
			}
		}
	}

	option = {
		name = stress_trait_coping_decisions.5001.a
		trait = contrite
		if = {
			limit = {
				exists = scope:secret
			}
			scope:secret = {
				expose_secret = root
			}
		}
		else = {
			add_character_modifier = {
				modifier = stress_disturbing_confession
				years = 2
			}
		}
		add_stress = medium_stress_loss

		change_city_state_corruption = { AMOUNT_ARG = corruption_minor_decrease }
	}
}


#Confess someone else's secret
#by Linnéa Thimrén
stress_trait_coping_decisions.5002 = {
	type = character_event
	title = stress_trait_coping_decisions.5001.t
	desc = {
		desc = stress_trait_coping_decisions.5001.desc_opening
		desc = stress_trait_coping_decisions.5002.desc
	}
	theme = mental_break
	left_portrait = {
		character = root
		animation = shame
	}
	right_portrait = {
		character = scope:secret_character
		animation = shock
	}

	trigger = {
		OR = {
			has_trait = dull
			has_trait_rank = {
				trait = intellect_bad
				rank >= 1
			}
		}
		OR = {
			any_courtier = {
				any_secret = {
					is_known_by = root
				}
			}
			any_vassal = {
				any_secret = {
					is_known_by = root
				}
			}
		}
	}

	weight_multiplier = {
		base = 1
		modifier = { #More likely if you're very dumb
			add = 0.75
			has_trait_rank = {
				trait = intellect_bad
				rank >= 2
			}
		}
	}

	immediate = {
		hidden_effect = {
			random_list = {
				50 = {
					trigger = {
						any_courtier = {
							any_secret = {
								is_known_by = root
							}
						}
					}
					random_courtier = {
						limit = {
							any_secret = {
								is_known_by = root
							}
						}
						save_scope_as = secret_character
					}
				}
				50 = {
					trigger = {
						any_vassal = {
							any_secret = {
								is_known_by = root
							}
						}
					}
					random_vassal = {
						limit = {
							any_secret = {
								is_known_by = root
							}
						}
						save_scope_as = secret_character
					}
				}
			}
		}
		scope:secret_character = {
			random_secret = {
				limit = {
					is_known_by = root
				}
				save_scope_as = secret
				expose_secret = root
			}
			add_opinion = {
				target = root
				modifier = hate_opinion
				opinion = -10
			}
		}
	}

	option = {
		name = stress_trait_coping_decisions.5002.a
		trait = contrite
		trait = dull
		trait = intellect_bad_1
		trait = intellect_bad_2
		trait = intellect_bad_3

		add_stress = medium_stress_loss
	}
}

###############
#	COMFORT EATER
###############

#Basic event
#by Linnéa Thimrén
stress_trait_coping_decisions.5501 = {
	type = character_event
	title = stress_trait_coping_decisions.5501.t
	desc = stress_trait_coping_decisions.5501.desc
	theme = mental_break
	override_background = {
		event_background = feast
	}
	left_portrait = {
		character = root
		animation = personality_greedy
	}

	immediate = {
		set_favorite_treat_effect = yes

		#weight change
		if = {
			limit = {
				has_variable = character_weight_variable
			}
			change_variable = {
				name = character_weight_variable
				add = 4
			}
		}
	}

	option = {
		name = stress_trait_coping_decisions.5501.a
		trait = comfort_eater
		remove_short_term_gold = medium_gold_value
		add_stress = medium_stress_loss

		change_nickname_weight_effect = { NICKNAME = nick_the_fat CHANGE = nickname_weight_small_increase }
	}
}

#Cannibal
#by Linnéa Thimrén
stress_trait_coping_decisions.5502 = {
	type = character_event
	title = stress_trait_coping_decisions.5502.t
	desc = stress_trait_coping_decisions.5502.desc
	theme = mental_break
	override_background = {
		event_background = feast
	}
	left_portrait = {
		character = root
		animation = personality_greedy
	}

	trigger = {
		is_cannibal_trigger = yes
	}

	immediate = {
		#weight change
		if = {
			limit = {
				has_variable = character_weight_variable
			}
			change_variable = {
				name = character_weight_variable
				add = 4
			}
		}
		else = {
			set_variable = {
				name = character_weight_variable
				value = 4
			}
		}
	}

	option = {
		name = stress_trait_coping_decisions.5502.a
		trait = comfort_eater
		trait = cannibal
		remove_short_term_gold = medium_gold_value
		add_stress = medium_stress_loss

		change_nickname_weight_effect = { NICKNAME = nick_the_devourer CHANGE = nickname_weight_medium_increase }
	}
}

###############
#	INAPPETETIC
###############

#Basic event
#by Linnéa Thimrén
stress_trait_coping_decisions.6001 = {
	type = character_event
	title = stress_trait_coping_decisions.6001.t
	desc = stress_trait_coping_decisions.6001.desc
	theme = mental_break
	left_portrait = {
		character = root
		animation = personality_content
	}

	immediate = {

		#weight change
		if = {
			limit = {
				has_variable = character_weight_variable
			}
			change_variable = {
				name = character_weight_variable
				add = -4
			}
		}
		else = {
			set_variable = {
				name = character_weight_variable
				value = -4
			}
		}
	}

	option = {
		name = stress_trait_coping_decisions.6001.a
		trait = inappetetic
		inappetetic_advance_starvation_effect = yes
		add_stress = medium_stress_loss
	}
}


###############
#	JOURNALLER
###############

#Basic event
#by Linnéa Thimrén
stress_trait_coping_decisions.6501 = {
	type = character_event
	title = stress_trait_coping_decisions.6501.t
	desc = stress_trait_coping_decisions.6501.desc
	theme = mental_break
	left_portrait = {
		character = root
		animation = personality_rational
	}

	option = {
		name = stress_trait_coping_decisions.6501.a
		trait = journaller
		add_character_modifier = {
			modifier = stress_busy_writing
			years = 1
		}
		add_stress = medium_stress_loss
	}
}


###############
#	CONFIDER
###############

#Basic event - I have confidant-friend
#by Linnéa Thimrén
stress_trait_coping_decisions.7001 = {
	type = character_event
	title = stress_trait_coping_decisions.7001.t
	desc = {
		desc = stress_trait_coping_decisions.7001.desc
		desc = stress_trait_coping_decisions.7001.desc_ending
	}
	theme = mental_break
	left_portrait = {
		character = root
		animation = personality_compassionate
	}

	trigger = {
		any_relation = {
			type = friend
			has_relation_flag = {
				target = root
				relation = friend
				flag = has_been_confided_in
			}
		}
	}

	option = {
		name = stress_trait_coping_decisions.7001.a
		trait = confider
		every_courtier = {
			limit = {
				NOT = {
					any_relation = {
						type = friend
						has_relation_flag = {
							target = root
							relation = friend
							flag = has_been_confided_in
						}
					}
				}
			}
			add_opinion = {
				target = root
				modifier = friendliness_opinion
				opinion = -10
			}
		}
		random_relation = {
			type = friend
			limit = {
				has_relation_flag = {
					target = root
					relation = friend
					flag = has_been_confided_in
				}
			}
			add_opinion = {
				target = root
				modifier = friendliness_opinion
				opinion = 5
			}
		}
		add_stress = medium_stress_loss
	}
}

#Basic event - I DON'T have confidant-friend
#by Linnéa Thimrén
stress_trait_coping_decisions.7002 = {
	type = character_event
	title = stress_trait_coping_decisions.7001.t
	desc = {
		first_valid = {
			triggered_desc = {
				trigger = {
					exists = scope:confidant
				}
				desc = stress_trait_coping_decisions.7001.desc
			}
			desc = stress_trait_coping_decisions.7002.desc
		}
		desc = stress_trait_coping_decisions.7001.desc_ending
	}
	theme = mental_break
	left_portrait = {
		character = root
		animation = personality_compassionate
	}
	right_portrait = scope:confidant

	trigger = {
		NOT = {
			any_relation = {
				type = friend
				has_relation_flag = {
					target = root
					relation = friend
					flag = has_been_confided_in
				}
			}
		}
	}

	immediate = {
		if = {
			limit = {
				any_courtier = {
					is_adult = yes
					NOR = {
						has_relation_rival = root
						has_relation_potential_rival = root
					}
				}
			}
			random_courtier = {
				limit = {
					is_adult = yes
					has_relation_friend = root
				}
				alternative_limit = {
					is_adult = yes
					has_relation_potential_friend = root
				}
				alternative_limit = {
					is_adult = yes
					NOR = {
						has_relation_rival = root
						has_relation_potential_rival = root
					}
				}
				weight = {
					base = 1
					opinion_modifier = {
						opinion_target = root
						multiplier = 2
					}
				}
				save_scope_as = confidant
			}
		}
	}

	option = {
		name = stress_trait_coping_decisions.7001.a
		trait = confider
		scope:confidant = {
			if = {
				limit = {
					has_relation_friend = root
				}
				random_relation = {
					type = friend
					limit = {
						this = root
					}
					add_relation_flag = {
						target = root
						relation = friend
						flag = has_been_confided_in
					}
				}
			}
			else = {
				set_relation_friend = root
				random_relation = {
					type = friend
					limit = {
						this = root
					}
					add_relation_flag = {
						target = root
						relation = friend
						flag = has_been_confided_in
					}
				}
			}
		}
		every_courtier = {
			custom = all_courtiers_except_confidant
			limit = {
				NOT = {
					any_relation = {
						type = friend
						has_relation_flag = {
							target = root
							relation = friend
							flag = has_been_confided_in
						}
					}
				}
				NOT = { this = scope:confidant }
			}
			add_opinion = {
				target = root
				modifier = friendliness_opinion
				opinion = -10
			}
		}
		add_stress = medium_stress_loss
	}
}


###############
#	ATHLETIC
###############

#Basic event
#by Linnéa Thimrén
stress_trait_coping_decisions.7501 = {
	type = character_event
	title = stress_trait_coping_decisions.7501.t
	desc = stress_trait_coping_decisions.7501.desc
	theme = mental_break
	left_portrait = {
		character = root
		animation = personality_bold
	}

	option = {
		name = stress_trait_coping_decisions.7501.a
		trait = athletic
		add_character_modifier = {
			modifier = stress_smelling_of_sweat
			years = 1
		}
		add_stress = medium_stress_loss
	}
}
