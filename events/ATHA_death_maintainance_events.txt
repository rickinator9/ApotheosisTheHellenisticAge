namespace = ATHA_death_maintainance

##		##
# SPARTA #
##		##

# On death, flag the next heir to become the second spartan monarch.
ATHA_death_maintainance.0001 = {
	type = character_event
	hidden = yes

	trigger = {
		exists = liege
		liege = {
			exists = cp:councillor_spartan_dual_monarch
			cp:councillor_spartan_dual_monarch = { this = root }
		}
	}

	immediate = {

		# If this character is landed, the player heir is unlanded and can command, they are a fine candidate.
		if = {
			limit = {
				is_landed = yes
				player_heir = {
					OR = {
						is_landed = no
						liege = {
							this = root.liege
						}
					}
					can_be_combatant_based_on_gender_trigger = { ARMY_OWNER = root.liege }
				}
			}

			player_heir = {
				set_variable = {
					name = will_be_next_spartan_dual_monarch
					value = yes
				}
			}
		}

		# TODO: Needs some extra cases in a later release (focussing on Sparta perhaps?):
		# - What happens when the heir is already landed elsewhere?
		# - What happens when the heir is unlanded and in someone elses court when this character is also unlanded?
		# - In the last resort, we will just have to yank a random dynasty member from elsewhere to become the spartan monarch. Perhaps this could be tied into the flavour to create a Leonidas_II who was criticised from his non-spartan manners?
	}
}

# On title inheritance, try to assign the spartan monarch title to the inheritor.
ATHA_death_maintainance.0002 = {
	type = character_event
	hidden = yes

	trigger = {
		has_variable = will_be_next_spartan_dual_monarch
		liege = {
			has_government = city_state_spartan_government
		}
	}

	immediate = {
		liege = {
			assign_councillor_type = {
				type = councillor_spartan_dual_monarch
				target = root
			}
		}

		remove_variable = will_be_next_spartan_dual_monarch
	}
}

##				##
# FEMALE ORACLES #
##				##

# If a female oracle dies, generate a new one to prevent a male priest from taking over.
ATHA_death_maintainance.0010 = {
	type = character_event
	hidden = yes

	trigger = {
		is_landed = yes
		primary_title = { this = title:d_pythia }
	}

	immediate = {
		# Create a new oracle character.
		create_character = {
			location = root.capital_province
			template = female_oracle_character
			save_scope_as = new_oracle
		}

		# Transfer the titles.
		create_title_and_vassal_change = {
			type = granted
			save_scope_as = change
		}		
		every_held_title = {
			change_title_holder = {
				holder = scope:new_oracle
				change = scope:change
			}
		}
		resolve_title_and_vassal_change = scope:change
	}
}

##     ##
# TOMBS #
##     ##

ATHA_death_maintainance.0020 = {
	type = character_event
	hidden = yes

	trigger = {
		has_variable = tomb_location
	}

	immediate = {
		save_temporary_scope_as = tomb_builder
		var:tomb_location = {
			set_primary_occupant_of_tomb_effect = { OCCUPANT = scope:tomb_builder }
			deposit_gold_in_tomb_effect = { GOLD = 50 } # Grave goods.
		}
	}
}

##           ##
# Headhunting #
##           ##

ATHA_death_maintainance.0030 = {
	type = character_event
	hidden = yes

	trigger = {
		exists = scope:killer
		scope:killer = {
			culture = { has_cultural_parameter = unlock_headhunting }
		}
	}

	immediate = {
		save_scope_as = headless_victim
		scope:killer = {
			trigger_event = { 
				id = ATHA_death_maintainance.0031
				days = 1
			}
		}
	}
}

ATHA_death_maintainance.0031 = {
	type = character_event
	title = ATHA_death_maintainance.0031.t
	desc = ATHA_death_maintainance.0031.desc
	theme = death
	left_portrait = root

	trigger = { 
		scope:headless_victim = {
			had_headhunted_death_trigger = yes
		} 
	}

	option = { # Keep the head as an artifact
		name = ATHA_death_maintainance.0031.a

		create_artifact_hunted_head_effect = { OWNER = scope:target }
		save_friends_and_family_effect = yes
		every_in_list = {
			list = friends_and_family
			add_personal_artifact_claim = scope:newly_created_artifact
		}
	}
	option = { # Gift to the gods
		name = ATHA_death_maintainance.0031.b

		if = {
			limit = { scope:headless_victim = { highest_held_title_tier = tier_empire } }
			add_piety = { value = massive_piety_gain }
		}
		if = {
			limit = { scope:headless_victim = { highest_held_title_tier = tier_kingdom } }
			add_piety = { value = major_piety_gain }
		}
		if = {
			limit = { scope:headless_victim = { highest_held_title_tier = tier_duchy } }
			add_piety = { value = medium_piety_gain }
		}
		if = {
			limit = { scope:headless_victim = { highest_held_title_tier = tier_county } }
			add_piety = { value = minor_piety_gain }
		}
		if = {
			limit = { scope:headless_victim = { highest_held_title_tier = tier_barony } }
			add_piety = { value = miniscule_piety_gain }
		}
		else = {
			add_piety = { value = 10 }
		}
	}
	option = { # Randsom the head
		name = ATHA_death_maintainance.0031.c

		if = {
			limit = { scope:headless_victim = { highest_held_title_tier = tier_empire } }
			add_gold = { value = 350 }
		}
		if = {
			limit = { scope:headless_victim = { highest_held_title_tier = tier_kingdom } }
			add_gold = { value = 200 }
		}
		if = {
			limit = { scope:headless_victim = { highest_held_title_tier = tier_duchy } }
			add_gold = { value = 100 }
		}
		if = {
			limit = { scope:headless_victim = { highest_held_title_tier = tier_county } }
			add_gold = { value = 50 }
		}
		if = {
			limit = { scope:headless_victim = { highest_held_title_tier = tier_barony } }
			add_gold = { value = 20 }
		}
		else = {
			add_piety = { value = 10 }
		}
	}
	option = { # Return the corpse
		name = ATHA_death_maintainance.0031.d

		save_friends_and_family_effect = yes
		every_in_list = {
			list = friends_and_family
			trigger_event = {
				id = ATHA_death_maintainance.0032
				days = 2 #So you don't get spammed
			}
			add_opinion = {
				target = root
				modifier = loved_one_corpse_returned_opinion
				opinion = 15
			}
		}
	}
}

ATHA_death_maintainance.0032 = { #Corpse returned message
	type = character_event
	title = ATHA_death_maintainance.0032.t
	desc = ATHA_death_maintainance.0032.desc
	theme = death
	left_portrait = root

	option = { #Close the notification
		name = ATHA_death_maintainance.0032.a
	}
}