#City-state Maintenance events

namespace = city_state_maintenance

#Set the corruption value of all top tier titles to match the value of the primary title
city_state_maintenance.0001 = {
    hidden = yes

    trigger = {
        OR = {
            has_government = city_state_democratic_government
            has_government = city_state_tyrannical_government
            has_government = city_state_oligarchic_government
            has_government = city_state_aristocratic_government
            has_government = city_state_spartan_government
        }
    }

    immediate = {     
        every_held_title = {
            limit = {
                tier = root.primary_title.tier
            }

            set_variable = {
                name = city_state_corruption
                value = root.primary_title.var:city_state_corruption
            }
        }
    }
}

#Debug event to check if other titles have the correct corruption value
city_state_maintenance.0002 = {
    type = character_event
    title = city_state_maintenance.0002.t
    desc = city_state_maintenance.0002.desc

    theme = corruption
    left_portrait = {
        character = root
        animation = happiness
    }

    immediate = {
        random_held_title = {
            limit = {
                tier = tier_duchy
            }
            save_scope_as = random_title
        }
    }

    option = {
    }
}

#Debug event to add or subtract corruption
city_state_maintenance.0003 = {
    type = character_event
    title = city_state_maintenance.0003.t
    desc = city_state_maintenance.0003.desc

    theme = corruption
    left_portrait = {
        character = root
        animation = happiness
    }

    option = {
        change_city_state_corruption = { AMOUNT_ARG = corruption_massive_increase }

        trigger_event = {
            on_action = on_corruption_gain
        }
    }

    option = {
        change_city_state_corruption = { AMOUNT_ARG = corruption_massive_decrease }

        trigger_event = {
            on_action = on_corruption_loss
        }
    }
}

#Corruption is inherited when a character dies
city_state_maintenance.0004 = {
    type = character_event
    hidden = yes

    trigger = {
        OR = {
            has_government = city_state_democratic_government
            has_government = city_state_tyrannical_government
            has_government = city_state_oligarchic_government
            has_government = city_state_aristocratic_government
            has_government = city_state_spartan_government
        }
    }

    immediate = {     
        primary_heir = {
            set_variable = {
                name = city_state_corruption
                value = root.primary_title.var:city_state_corruption
            }

            trigger_event = { 
                id = city_state_maintenance.0007
                days = 1
            }
        }

        every_heir = {
            set_variable = {
                name = city_state_corruption
                value = root.primary_title.var:city_state_corruption
            }

            trigger_event = { 
                id = city_state_maintenance.0007
                days = 1
            }
        }
    }
}

#Triggered by on_rank_up and on_rank_down, it preserves the city-state's current corruption value on the title holder
city_state_maintenance.0005 = {
    hidden = yes

    trigger = {
        OR = {
            has_government = city_state_democratic_government
            has_government = city_state_tyrannical_government
            has_government = city_state_oligarchic_government
            has_government = city_state_aristocratic_government
            has_government = city_state_spartan_government
        }
    }

    immediate = {     
        set_variable = {
            name = rank_change_corruption
            value = scope:title.var:city_state_corruption
        }

        trigger_event = city_state_maintenance.0006
    }
}

#Applies saved corruption from city_state_maintenance.0005
city_state_maintenance.0006 = {
    hidden = yes

    immediate = {
        every_held_title = {
            limit = {
                tier = root.primary_title.tier
            }

            set_variable = {
                name = city_state_corruption
                value = root.var:rank_change_corruption
            }
        }

        remove_variable = rank_change_corruption
    }
}

#Restores the corruption to the heir after leader death
city_state_maintenance.0007 = {
    hidden = yes

    immediate = {
        primary_title = {
            set_variable = {
                name = city_state_corruption
                value = root.var:city_state_corruption
            }
        }
    }
}

#Adds the corruption modifier to the heir after death
city_state_maintenance.0008 = {
    hidden = yes

    immediate = {
        primary_heir = {
            update_corruption_modifier_after_death_effect = yes
        }

        every_heir = {
            update_corruption_modifier_after_death_effect = yes
        }
	}
}