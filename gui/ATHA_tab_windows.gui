types ATHA_city_state_windows 
{
	type city_state_window = widget {
		name = "city_state_window"
		parentanchor = top|right
		layer = windows_layer
		alwaystransparent = no
		
		using = Window_Size_MainTab
		
		datacontext = "[GetScriptedGui('city_state_gui_toggle')]"
		visible = "[ScriptedGui.IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
		
		state = {
			name = _show
			using = Animation_FadeIn_Quick
			using = Sound_WindowShow_Standard
			using = Window_Position_MainTab
			
			on_start = "[GetVariableSystem.Set( 'right_window_open', 'true' )]"
		}
		
		state = {
			name = _hide
			using = Animation_FadeOut_Quick
			using = Sound_WindowHide_Standard
			using = Window_Position_MainTab_Hide
			
			on_start = "[GetVariableSystem.Clear( 'right_window_open')]"
		}

		background = {
			texture = "gfx/interface/component_tiles/tile_window_background_no_edge.dds"
			spriteType = Corneredtiled
			spriteborder = { 18 0 }
			texture_density = 2
	
			modify_texture = {
				texture = "gfx/interface/component_overlay/overlay_effect.dds"
				blend_mode = overlay
			}

			margin_left = -30
		}

		margin_widget = {
			size = { 100% 100% }
			
			vbox = {
				size = { 100% 100% }
				using = Window_Background
				using = Window_Margins
					
				# Header
				vbox = {
					layoutpolicy_horizontal = expanding

					background = {
						texture = "gfx/interface/component_tiles/tile_title_big_top_01.dds"
						margin_bottom = 10
						spriteType = Corneredtiled
						spriteborder = { 0 18 }
						texture_density = 2
		
						modify_texture = {
							name = "mask"
							texture = "gfx/interface/component_masks/mask_title_big_top.dds"
							spriteType = Corneredtiled
							spriteborder = { 160 0 }
							blend_mode = alphamultiply
							alpha = 0.5
						}
		
						modify_texture = {
							name = "overlay"
							texture = "gfx/interface/component_overlay/overlay_title_big_top.dds"
							spriteType = Corneredstretched
							spriteborder = { 0 0 }
							blend_mode = overlay
						}
					}
		
					hbox = { # Header if Player is City-State.
						layoutpolicy_horizontal = expanding
						margin_top = 32 # Aligns the title roughly at the same height as the other windows.
						visible = "[Not(GetScriptedGui('city_state_gui_is_vassal').IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End))]"

						# Current ruler left column
						vbox = {
							layoutpolicy_vertical = expanding
							margin_left = 12

							portrait_head = { datacontext = "[GetPlayer]" }

							text_single = {
								text = "CITY_STATE_GUI_CURRENT_RULER"
								default_format = "#low"
							}
					
							expand = {}
						}
		
						# Title name center column
						vbox = {
							layoutpolicy_horizontal = expanding
							layoutpolicy_vertical = expanding
							margin_bottom = 40

							text_multi = {
								text = "[GetPlayer.GetPrimaryTitle.GetNameNoTooltip|U]"
								max_width = 380
								autoresize = yes

								using = Font_Type_Flavor
								using = Font_Size_Big
							}
		
							text_single = {
								layoutpolicy_horizontal = expanding
								align = center
								text = "CITY_STATE_GUI_GOVERNMENT"
								fontsize = 14
							}
					
							expand = {}

							button_standard_select_arrow = {
								visible = "[GetScriptedGui('city_state_gui_is_elective').IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
								onclick = "[OpenSuccessionElectionWindowForTitle(GetPlayer.GetPrimaryTitle)]"
								
								blockoverride "button_text"{
									text = "MY_REALM_WINDOW_VOTE"
								}
								
								tooltip = "MY_REALM_WINDOW_VOTE_TOOLTIP"
							}
						}

						# COA right column
						vbox = {
							layoutpolicy_vertical = expanding
				
							coa_realm_big_crown = {
								datacontext = "[GetPlayer]"

								blockoverride "coa_button"
								{
									tooltip = "[GetPlayer.GetDefaultRealmFlagTooltipPrimaryTitleClickInfo]"
									onclick = "[DefaultOnCoatOfArmsClick(GetPlayer.GetPrimaryTitle.GetID)]"
								}
							}

							vbox = {
								margin_top = 12
							}
						}

						# Close button
						vbox = {
							layoutpolicy_vertical = expanding
							margin_right = 8

							button_close = {
								name = "button_close"
								shortcut = "close_window"
								tooltip = "CLOSE_TOOLTIP"
								clicksound = "event:/SFX/UI/Generic/sfx_ui_generic_close"
					
								using = Animation_ShowHide_Standard

								datacontext = "[GetScriptedGui('city_state_gui_toggle')]"
								onclick = "[ScriptedGui.Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
							}

							expand = { }
						}
					}
		
					hbox = { # Header is Player is vassal of a city state.
						layoutpolicy_horizontal = expanding
						margin_top = 32 # Aligns the title roughly at the same height as the other windows.
						visible = "[GetScriptedGui('city_state_gui_is_vassal').IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"

						# Current ruler left column
						vbox = {
							layoutpolicy_vertical = expanding
							margin_left = 12

							portrait_head = { datacontext = "[GetPlayer.GetLiege]" }

							text_single = {
								text = "CITY_STATE_GUI_CURRENT_RULER"
								default_format = "#low"
							}
					
							expand = {}
						}
		
						# Title name center column
						vbox = {
							layoutpolicy_horizontal = expanding
							layoutpolicy_vertical = expanding
							margin_bottom = 40

							text_multi = {
								text = "[GetPlayer.GetLiege.GetPrimaryTitle.GetNameNoTooltip|U]"
								max_width = 380
								autoresize = yes

								using = Font_Type_Flavor
								using = Font_Size_Big
							}
		
							text_single = {
								layoutpolicy_horizontal = expanding
								align = center
								text = "CITY_STATE_GUI_LIEGE_GOVERNMENT"
								fontsize = 14
							}
					
							expand = {}

							button_standard_select_arrow = {
								visible = "[GetScriptedGui('city_state_gui_is_elective').IsShown(GuiScope.SetRoot(GetPlayer.GetLiege.MakeScope).End)]"
								onclick = "[OpenSuccessionElectionWindowForTitle(GetPlayer.GetLiege.GetPrimaryTitle)]"
								
								blockoverride "button_text"{
									text = "MY_REALM_WINDOW_VOTE"
								}
								
								tooltip = "MY_REALM_WINDOW_VOTE_TOOLTIP"
							}
						}

						# COA right column
						vbox = {
							layoutpolicy_vertical = expanding
				
							coa_realm_big_crown = {
								datacontext = "[GetPlayer.GetLiege]"

								blockoverride "coa_button"
								{
									tooltip = "[GetPlayer.GetLiege.GetDefaultRealmFlagTooltipPrimaryTitleClickInfo]"
									onclick = "[DefaultOnCoatOfArmsClick(GetPlayer.GetLiege.GetPrimaryTitle.GetID)]"
								}
							}

							vbox = {
								margin_top = 12
							}
						}

						# Close button
						vbox = {
							layoutpolicy_vertical = expanding
							margin_right = 8

							button_close = {
								name = "button_close"
								shortcut = "close_window"
								tooltip = "CLOSE_TOOLTIP"
								clicksound = "event:/SFX/UI/Generic/sfx_ui_generic_close"
					
								using = Animation_ShowHide_Standard

								datacontext = "[GetScriptedGui('city_state_gui_toggle')]"
								onclick = "[ScriptedGui.Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
							}

							expand = { }
						}
					}
				}

				divider_light = {
					layoutpolicy_horizontal = expanding
				}

				# Main content
				vbox = {
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding

					background = {
						texture = "gfx/interface/illustrations/government_types/city_state_oligarchic_government.dds"
						margin = { -5 0 }
						fittype = end
						alpha = 0.5
						framesize = { 1100 440 }

						modify_texture = {
							texture = "gfx/interface/component_masks/mask_fade_vertical_up.dds"
							blend_mode = alphamultiply
						}
					}

					vbox = {
						layoutpolicy_horizontal = expanding
						layoutpolicy_vertical = expanding
						margin_top = 12
						margin_left = 8
						margin_right = 8 
						spacing = 8

						# Government overview
						vbox = {
							layoutpolicy_horizontal = expanding
							spacing = 4
	
							text_label_center = {
								layoutpolicy_horizontal = expanding
								text = "CITY_STATE_GOVERNMENT_OVERVIEW"
							}
	
							# Franchise
							hbox = {
								layoutpolicy_horizontal = expanding
	
								background = { using = Background_Area }
	
								# Left icon
								vbox = {
									margin = { 6 6 }
	
									vbox = {
										margin = { 14 14 }
	
										background = { 
											using = Background_Area
											using = Color_Red_Transparent
											
											visible = "[Not(GetScriptedGui('city_state_gui_ideal_franchise').IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End))]"
										}
	
										icon_flat_standard = {
											texture = "gfx/interface/icons/flat_icons/election_vote_strength.dds"
											size = { 72 72 }
										}
									}
								}
	
								vbox = {
									layoutpolicy_horizontal = expanding
									layoutpolicy_vertical = expanding
									margin_top = 16
									spacing = 4
	
									# Desired Franchise text.
									hbox = {
										layoutpolicy_horizontal = expanding
										text_single = {
											margin_left = 4
											text = "CITY_STATE_DESIRED_FRANCHISE"
											align = left
										}
	
										expand = { }
	
										text_single = {
											text = "CITY_STATE_FRANCHISE_PERCENTAGE"
										}
									}
	
									# Progress bar
									widget = {
										progressbar_standard = {
											size = { 100% 30 }
											value = "[FixedPointToFloat(GetPlayer.GetPrimaryTitle.MakeScope.Var('city_state_franchise').GetValue)]"
											noprogresstexture = "gfx/interface/progressbars/progress_blue_bg.dds"
											visible = "[And(GetScriptedGui('city_state_gui_ideal_franchise').IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End), Not(GetScriptedGui('city_state_gui_is_vassal').IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End)))]"
										}

										progressbar_red = {
											size = { 100% 30 }
											value = "[FixedPointToFloat(GetPlayer.GetPrimaryTitle.MakeScope.Var('city_state_franchise').GetValue)]"
											noprogresstexture = "gfx/interface/progressbars/progress_blue_bg.dds"
											visible = "[And(Not(GetScriptedGui('city_state_gui_ideal_franchise').IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End)), Not(GetScriptedGui('city_state_gui_is_vassal').IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End)))]"
										}
	
										progressbar_standard = {
											size = { 100% 30 }
											value = "[FixedPointToFloat(GetPlayer.GetLiege.GetPrimaryTitle.MakeScope.Var('city_state_franchise').GetValue)]"
											noprogresstexture = "gfx/interface/progressbars/progress_blue_bg.dds"
											visible = "[And(GetScriptedGui('city_state_gui_ideal_franchise').IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End), GetScriptedGui('city_state_gui_is_vassal').IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End) )]"
										}
	
										progressbar_red = {
											size = { 100% 30 }
											value = "[FixedPointToFloat(GetPlayer.GetLiege.GetPrimaryTitle.MakeScope.Var('city_state_franchise').GetValue)]"
											noprogresstexture = "gfx/interface/progressbars/progress_blue_bg.dds"
											visible = "[And(Not(GetScriptedGui('city_state_gui_ideal_franchise').IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End)), GetScriptedGui('city_state_gui_is_vassal').IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End))]"
										}
									
										progress_threshold = {
											parentanchor = right
											size = { 5 30 }
											visible = "[GetScriptedGui('city_state_gui_is_democratic').IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
										}
										
										progress_threshold = {
											parentanchor = right
											position = { -107 0 } # Approx 75%
											size = { 5 30 }
											visible = "[Or(GetScriptedGui('city_state_gui_is_democratic').IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End), GetScriptedGui('city_state_gui_is_oligarchic').IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End))]"
										}
										
										progress_threshold = {
											parentanchor = right
											position = { -215 0 } # Approx 50%
											size = { 5 30 }
											visible = "[Or(GetScriptedGui('city_state_gui_is_aristocratic_or_spartan').IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End), GetScriptedGui('city_state_gui_is_oligarchic').IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End))]"
										}
										
										progress_threshold = {
											parentanchor = right
											position = { -322 0 } # Approx 25%
											size = { 5 30 }
											visible = "[Or(GetScriptedGui('city_state_gui_is_aristocratic_or_spartan').IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End), GetScriptedGui('city_state_gui_is_tyrannical').IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End))]"
										}
										
										progress_threshold = {
											parentanchor = right
											position = { -430 0 } # Approx 0%
											size = { 5 30 }
											visible = "[GetScriptedGui('city_state_gui_is_tyrannical').IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
										}
									}
	
									# Desired government text.
									hbox = {
										layoutpolicy_horizontal = expanding
										margin_top = 28
										margin_left = 4
	
										text_single = {
											text = "CITY_STATE_DESIRED_GOVERNMENT_LABEL"
											align = left
										}
	
										text_single = {
											margin_left = 4
											text = "@warning_icon!"
											align = left
	
											visible = "[Not(GetScriptedGui('city_state_gui_ideal_franchise').IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End))]"
										}
	
										expand = { }
									}
	
									expand = { }
								}	
	
								# Small margin.
								vbox = {
									margin_right = 12
								}
	
								expand = { }
							}
	
							# Corruption
							hbox = {
								layoutpolicy_horizontal = expanding
	
								background = { using = Background_Area }
	
								# Left icon
								vbox = {
									margin = { 6 6 }
	
									vbox = {
										margin = { 14 14 }
	
										background = { 
											using = Background_Area
											using = Color_Red_Transparent
											
											visible = "[GetScriptedGui('city_state_gui_corruption_critical').IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
										}
	
										icon_flat_standard = {
											texture = "gfx/interface/icons/flat_icons/election_preference_over_my_candidate.dds"
											size = { 72 72 }
										}
									}
								}
	
								vbox = {
									layoutpolicy_horizontal = expanding
									layoutpolicy_vertical = expanding
									margin_top = 16
									spacing = 4
	
									# Corruption text.
									hbox = {
										layoutpolicy_horizontal = expanding
										text_single = {
											margin_left = 4
											text = "CITY_STATE_CORRUPTION"
											align = left
										}
	
										expand = { }
	
										text_single = {
											text = "CITY_STATE_CORRUPTION_PERCENTAGE"
										}
									}
	
									# Progress bar.
									widget = {
										progressbar_red = {
											size = { 100% 30 }
											value = "[FixedPointToFloat(GetPlayer.GetPrimaryTitle.MakeScope.Var('city_state_corruption').GetValue)]"
											visible = "[Not(GetScriptedGui('city_state_gui_is_vassal').IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End))]"
											noprogresstexture = "gfx/interface/progressbars/progress_blue_bg.dds"
										}
										progressbar_red = {
											size = { 100% 30 }
											value = "[FixedPointToFloat(GetPlayer.GetLiege.GetPrimaryTitle.MakeScope.Var('city_state_corruption').GetValue)]"
											visible = "[GetScriptedGui('city_state_gui_is_vassal').IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
											noprogresstexture = "gfx/interface/progressbars/progress_blue_bg.dds"
										}
									}
	
									# Level of corruption text.
									text_single = {
										layoutpolicy_horizontal = expanding
										margin_top = 28
										margin_left = 4
										text = "CITY_STATE_CORRUPTION_LEVEL"
										align = left
									}
	
									expand = { }
								}
	
								# Small margin.
								vbox = {
									margin_right = 12
								}
	
								expand = { }
							}
						}
	
						divider = {
							layoutpolicy_horizontal = expanding
						}
	
						# Issues
						vbox = {
							layoutpolicy_horizontal = expanding
							spacing = 4
	
							text_label_center = {
								layoutpolicy_horizontal = expanding
								text = "CITY_STATE_ISSUES_AND_EMERGENCIES"
							}
	
							scrollbox = {
								minimumsize = { 0 240 }
								layoutpolicy_horizontal = expanding
	
								scrollbarpolicy_vertical = always_off
								scrollbarpolicy_horizontal = as_needed
	
								scrollbar_horizontal = {
									using = Scrollbar_Horizontal
								}
	
								scrollwidget = {
									widget = {
										size = { 100% 100% }
	
										vbox = {
											datacontext = "[GetScriptedGui('city_state_has_issue')]"
											visible = "[Not(ScriptedGui.IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End))]"

											text_single = {
												text = "CITY_STATE_NO_ISSUES_OR_EMERGENCIES"
												default_format = "#low;italic"
											}
										}

										hbox = {		
											background = { using = Background_Area }
				
											spacer = {
												size = { 20 100% }
											}
				
											city_state_issue_container = { }
				
											spacer = {
												size = { 20 100% }
											}
				
											expand = { }
										}
									}
								}
							}
						}
	
						# Policies
						vbox = {
							layoutpolicy_horizontal = expanding
							spacing = 4
	
							text_label_center = {
								layoutpolicy_horizontal = expanding
								text = "CITY_STATE_POLICIES"
							}
	
							hbox = {
								layoutpolicy_horizontal = expanding

								visible = no # TODO: Reenable once policies are added.
	
								background = { using = Background_Area }
	
								city_state_policy_container = { }
	
								widget = {
									size = { 134 148 }
	
									button_standard = {
										position = { 15 15 }
										size = { 80% 80% }
									}
	
									icon_flat_standard = {
										position = { 5 20 }
										size = { 72 72 }
										parentanchor = top|hcenter
										texture = "gfx/interface/icons/flat_icons/edit_text.dds"
									}
	
									text_single = {
										parentanchor = bottom|hcenter
										position = { 0 -35 }
										text = "Add Policy..."
										fontsize = 14
										default_format = "#clickable"
									}
								}
	
								expand = { }
							}

							widget = {
								layoutpolicy_horizontal = expanding
								size = { 100% 148 }
	
								background = { using = Background_Area }

								text_single = {
									text = "CITY_STATE_NO_POLICIES"
									default_format = "#low;italic"
									parentanchor = center
								}
							}
						}

						expand = { }
					}
				}
			}
		}
	}

	type city_state_emergency_widget = widget {
		size = { 160 220 }
		margin = { 0 8 }
		
		visible = "[ScriptedGui.IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"

		block "tooltip" { }

		background = {
			margin = { -8 -8 }

			using = Background_Area
			using = Color_Red_Transparent
		}

		icon = {
			parentanchor = top|hcenter
			size = { 80% 90% }
			texture = "gfx/interface/icons/city_state/issue_banner_emergency.dds"
		}

		icon = {
			parentanchor = top|hcenter
			size = { 80% 90% }
			block "image" 
			{
				texture = "gfx/interface/icons/city_state/issue_battle.dds"
			}
		}

		text_single = {
			position = { 0 -16 }
			parentanchor = bottom|hcenter
			block "text" 
			{
				text = "EMERGENCY TEXT"
			}
		}
	}

	type city_state_issue_widget = widget {
		size = { 160 220 }
		margin = { 0 8 }

		visible = "[ScriptedGui.IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"

		block "tooltip" { }

		icon = {
			parentanchor = top|hcenter
			size = { 80% 90% }
			texture = "gfx/interface/icons/city_state/issue_banner.dds"
		}

		icon = {
			parentanchor = top|hcenter
			size = { 80% 90% }
			block "image" 
			{
				texture = "gfx/interface/icons/city_state/issue_battle.dds"
			}
		}

		text_single = {
			position = { 0 -16 }
			parentanchor = bottom|hcenter
			block "text" 
			{
				text = "ISSUE TEXT"
			}
		}
	}

	type city_state_policy_widget = hbox {
		margin = { 15 15 }
		vbox = {
			icon_flat_standard = {
				size = { 72 72 }

				block "image" {
					texture = "gfx/interface/icons/flat_icons/election_vote_strength.dds"
				}
			}

			text_multi = {
				layoutpolicy_horizontal = expanding
				layoutpolicy_vertical = expanding
				margin_top = 8

				align = top|hcenter
				block "name" {
					text = "Paroikoi Franchise"
				}
				fontsize = 14
			}
		}
	}
}